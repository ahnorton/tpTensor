(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
BeginPackage["LeviCivitaMTW`"]


(* ::Input::Initialization:: *)
LeviCivita::usage="LeviCivita[ i, j, k, l ]  =  \!\(\*SubscriptBox[\(\[CurlyEpsilon]\), \(\(\[VeryThinSpace]\)\(i\[VeryThinSpace]j\[VeryThinSpace]k\[VeryThinSpace]l\)\)]\)  = |det(g)|\!\(\*SuperscriptBox[\(\\\ \), \(1/2\)]\) [ i j k l ] ,  as defined in MTW (page 202). 

The symbol \[CurlyEpsilon] is not defined here. It is used in the above description only to 
indicate the conventional tensor component notation for LeviCivita[ ].

LeviCivita[ ] has also been defined for 2 and 3 dimensions: LeviCivita[ i, j ] , LeviCivita[ i, j, k ].
The assumed index ranges are:

  2-dim:  1,2
  3-dim:  1,2,3
  4-dim:  0,1,2,3

If a non-orthonormal tensor basis is being used (eg., a coordinate basis in coordinates 
other than Minkowski or Euclidean)  then the factor  LC<dim>SqrtAbsDetg  \[Congruent]  |det(g)|\!\(\*SuperscriptBox[\(\\\ \), \(1/2\)]\) 
should be defined by the user after loading this package. 

The default values are:   
   LC2SqrtAbsDetg = 1,
   LC3SqrtAbsDetg = 1,
   LC4SqrtAbsDetg = 1.

See also :  ? LeviCivitaUp
" 


(* ::Input::Initialization:: *)
LeviCivitaUp::usage="LeviCivitaUp[ i, j, k, l ]  =  \!\(\*SuperscriptBox[\(\[CurlyEpsilon]\), \(\(\[VeryThinSpace]\)\(i\[VeryThinSpace]j\[VeryThinSpace]k\[VeryThinSpace]l\)\)]\)  =  - |det(g)|\!\(\*SuperscriptBox[\(\\\ \), \(\(-1\)/2\)]\) [ i j k l ] ,  as defined in MTW (page 202).

See  ? LeviCivita  for the full documentation.
"


(* ::Input::Initialization:: *)
LC4SqrtAbsDetg=1;
LC3SqrtAbsDetg=1;
LC2SqrtAbsDetg=1;


(* ::Input::Initialization:: *)
Begin["`Private`"]


(* ::Input::Initialization:: *)
Clear[LeviCivita];
LeviCivita[i_,j_,k_,l_] := -LeviCivita[j,i,k,l]/; Order[i,j]==-1 ;LeviCivita[i_,j_,k_,l_] := -LeviCivita[i,k,j,l]/; Order[j,k]==-1;LeviCivita[i_,j_,k_,l_] := -LeviCivita[i,j,l,k]/; Order[k,l]==-1;
LeviCivita[i_,j_,k_,l_] := 0/; i==j ;
LeviCivita[i_,j_,k_,l_] := 0/; j==k ;
LeviCivita[i_,j_,k_,l_] := 0/; k==l ;
LeviCivita[0,1,2,3] := LC4SqrtAbsDetg;


(* ::Input::Initialization:: *)
LeviCivita[i_,j_,k_] := -LeviCivita[j,i,k]/; Order[i,j]==-1 ;LeviCivita[i_,j_,k_] := -LeviCivita[i,k,j]/; Order[j,k]==-1;
LeviCivita[i_,j_,k_] := 0/; i==j ;
LeviCivita[i_,j_,k_] := 0/; j==k ;
LeviCivita[1,2,3] := LC3SqrtAbsDetg;


(* ::Input::Initialization:: *)
LeviCivita[i_,j_] := -LeviCivita[j,i]/; Order[i,j]==-1 ;
LeviCivita[i_,j_] := 0/; i==j ;
LeviCivita[1,2] := LC2SqrtAbsDetg;


(* ::Input::Initialization:: *)
Clear[LeviCivitaUp];
LeviCivitaUp[i_,j_,k_,l_] := -LeviCivitaUp[j,i,k,l]/; Order[i,j]==-1 ;LeviCivitaUp[i_,j_,k_,l_] := -LeviCivitaUp[i,k,j,l]/; Order[j,k]==-1;LeviCivitaUp[i_,j_,k_,l_] := -LeviCivitaUp[i,j,l,k]/; Order[k,l]==-1;
LeviCivitaUp[i_,j_,k_,l_] := 0/; i==j ;
LeviCivitaUp[i_,j_,k_,l_] := 0/; j==k ;
LeviCivitaUp[i_,j_,k_,l_] := 0/; k==l ;
LeviCivitaUp[0,1,2,3] := -1/LC4SqrtAbsDetg;


(* ::Input::Initialization:: *)
LeviCivitaUp[i_,j_,k_] := -LeviCivitaUp[j,i,k]/; Order[i,j]==-1 ;LeviCivitaUp[i_,j_,k_] := -LeviCivitaUp[i,k,j]/; Order[j,k]==-1;
LeviCivitaUp[i_,j_,k_] := 0/; i==j ;
LeviCivitaUp[i_,j_,k_] := 0/; j==k ;
LeviCivitaUp[1,2,3] :=-1/ LC3SqrtAbsDetg;


(* ::Input::Initialization:: *)
LeviCivitaUp[i_,j_] := -LeviCivitaUp[j,i]/; Order[i,j]==-1 ;
LeviCivitaUp[i_,j_] := 0/; i==j ;
LeviCivitaUp[1,2] := -1/LC2SqrtAbsDetg;


(* ::Input::Initialization:: *)
End[]


(* ::Input::Initialization:: *)
EndPackage[]
