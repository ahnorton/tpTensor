(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization::Plain:: *)
Clear[InputText]
InputText[OptionsPattern[]]:=InputText["",Print,False]
InputText[prompt_String,OptionsPattern[]]:=InputText[prompt,Print,False]
InputText[prompt_String,f_,OptionsPattern[]]:=InputText[prompt,f,False]
InputText[prompt_String,f_, keepprompt_,OptionsPattern[]]:=Module[{len,str,ans},
len = StringLength[prompt];
If[keepprompt,len=0];
$InputTextFunction =.;
$InputTextFunction = f;
$InputTextCellEval=ToExpression[
                                             RowBox[
                                                {"$InputTextFunction[StringDrop[Setting[",#,"], 
                             "<>ToString[len]<>"]];"}
                                          ]
                                       ]&;
CellPrint[
     Cell[
         BoxData[
                        TagBox[
                            DynamicModuleBox[
                {s = " \[VeryThinSpace]"}, 
                                 InputFieldBox[Dynamic[s], String,FieldSize-> 120,Appearance->"Frameless"],
                                 DynamicModuleValues:>{}],
                                 InputField[Setting[#], String
         ]& 
         ]
      ], 
        "Input",
        CellEventActions->{
          "ReturnKeyDown":>(Paste["\n"];FrontEndExecute[FrontEndToken["MoveNext"]];),
          "LeftArrowKeyDown":> (Paste["Left"];)
    },
        CellEvaluationFunction->$InputTextCellEval,
        CellFrame->OptionValue[InputCellFrame],
        Background->RGBColor[OptionValue[InputBackground]/255.],
        FontSize->OptionValue[InputFontSize],
        FontFamily->OptionValue[InputFontFamily],
        ShowGroupOpener->OptionValue[InputShowGroupOpener],
        CellLabel->"",
        CellMargins->OptionValue[InputCellMargins],
        ShowCellLabel->False,
        CellLabelMargins->OptionValue[InputCellLabelMargins]
   ]
];
NotebookFind[EvaluationNotebook[]," ",Previous];
Paste[prompt];
]


(* ::Input::Initialization::Bold:: *)
Clear[InputText]
InputText[OptionsPattern[]]:=InputText["",Print,False]
InputText[prompt_String,OptionsPattern[]]:=InputText[prompt,Print,False]
InputText[prompt_String,f_,OptionsPattern[]]:=InputText[prompt,f,False]
InputText[prompt_String,f_, keepprompt_,OptionsPattern[]]:=Module[{len,str,ans},
len = StringLength[prompt];
If[keepprompt,len=0];
$InputTextFunction =.;
$InputTextFunction = f;
$InputTextCellEval=ToExpression[
                                             RowBox[
                                                {"$InputTextFunction[StringDrop[Setting[",#,"], 
                             "<>ToString[len]<>"]];"}
                                          ]
                                       ]&;
CellPrint[
     Cell[
         BoxData[
                        TagBox[
                            DynamicModuleBox[
                {s = " \[VeryThinSpace]"}, 
                                 InputFieldBox[Dynamic[s], String,FieldSize-> 120,Appearance->"Frameless"],
                                 DynamicModuleValues:>{}],
                                 InputField[Setting[#], String
         ]& 
         ]
      ], 
        "Input",
        CellEventActions->{
          "ReturnKeyDown":>(Paste["\n"];FrontEndExecute[FrontEndToken["MoveNext"]];),
          "LeftArrowKeyDown":> (Paste["Left"];)
    },
        CellEvaluationFunction->$InputTextCellEval,
        CellFrame->OptionValue[InputCellFrame],
        Background->RGBColor[OptionValue[InputBackground]/255.],
        FontSize->OptionValue[InputFontSize],
        FontFamily->OptionValue[InputFontFamily],
        ShowGroupOpener->OptionValue[InputShowGroupOpener],
        CellLabel->"",
        CellMargins->OptionValue[InputCellMargins],
        ShowCellLabel->False,
        CellLabelMargins->OptionValue[InputCellLabelMargins]
   ]
];
NotebookFind[EvaluationNotebook[]," ",Previous];
Paste[prompt];
]


(* ::Input::Initialization::Bold:: *)
Clear[InputText]
InputText[OptionsPattern[]]:=InputText["",Print,False]
InputText[prompt_String,OptionsPattern[]]:=InputText[prompt,Print,False]
InputText[prompt_String,f_,OptionsPattern[]]:=InputText[prompt,f,False]
InputText[prompt_String,f_, keepprompt_,OptionsPattern[]]:=Module[{len,str,ans},
len = StringLength[prompt];
If[keepprompt,len=0];
$InputTextFunction =.;
$InputTextFunction = f;
$InputTextCellEval=ToExpression[
                                             RowBox[
                                                {"$InputTextFunction[StringDrop[Setting[",#,"], 
                             "<>ToString[len]<>"]];"}
                                          ]
                                       ]&;
CellPrint[
     Cell[
         BoxData[
                        TagBox[
                            DynamicModuleBox[
                {s = " \[VeryThinSpace]"}, 
                                 InputFieldBox[Dynamic[s], String,FieldSize-> 120,Appearance->"Frameless"],
                                 DynamicModuleValues:>{}],
                                 InputField[Setting[#], String
         ]& 
         ]
      ], 
        "Input",
        CellEventActions->{
          "ReturnKeyDown":>(Paste["\n"];FrontEndExecute[FrontEndToken["MoveNext"]];),
          "LeftArrowKeyDown":> (Paste["Left"];)
    },
        CellEvaluationFunction->$InputTextCellEval,
        CellFrame->OptionValue[InputCellFrame],
        Background->RGBColor[OptionValue[InputBackground]/255.],
        FontSize->OptionValue[InputFontSize],
        FontFamily->OptionValue[InputFontFamily],
        ShowGroupOpener->OptionValue[InputShowGroupOpener],
        CellLabel->"",
        CellMargins->OptionValue[InputCellMargins],
        ShowCellLabel->False,
        CellLabelMargins->OptionValue[InputCellLabelMargins]
   ]
];
NotebookFind[EvaluationNotebook[]," ",Previous];
Paste[prompt];
]



