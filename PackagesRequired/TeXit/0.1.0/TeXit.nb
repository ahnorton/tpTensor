(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 10.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    287581,       8043]
NotebookOptionsPosition[    257458,       7127]
NotebookOutlinePosition[    257988,       7149]
CellTagsIndexPosition[    257899,       7144]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.6810943884671183`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<TeXit`\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"EndPackage", "[", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.654857470351177*^9, 3.6548575010643787`*^9}, {
  3.654884870254821*^9, 3.654884874030057*^9}, {3.654908419607689*^9, 
  3.654908420118203*^9}, {3.681094399671479*^9, 3.681094404647293*^9}, {
  3.681157215477079*^9, 3.681157215973048*^9}, {3.6811852297276382`*^9, 
  3.68118523404764*^9}, {3.6811853527500067`*^9, 3.681185352846026*^9}, {
  3.6817354083302727`*^9, 3.681735411465295*^9}}],

Cell[TextData[{
 "If the above Package statements were not included, then   Needs[ ",
 Cell[BoxData["\"\<TeXit`\>\""], "Input",
  CellChangeTimes->{{3.655197596644383*^9, 3.655197602372306*^9}}],
 " ]   would still find and load the  .m  file, but would issue a warning \
message\nto say that   \[OpenCurlyDoubleQuote]Context TeXit ` was not created \
when Needs was evaluated.\[CloseCurlyDoubleQuote]"
}], "Text",
 CellChangeTimes->{{3.65519779148167*^9, 3.655197968439844*^9}, {
  3.65519800249474*^9, 3.655198180988453*^9}, {3.65519821407609*^9, 
  3.655198221307901*^9}, {3.6817354490018873`*^9, 3.681735465686891*^9}}],

Cell["If editing this file, start automatic notebook backups,", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<Backup`\>\"", "]"}], "\[IndentingNewLine]", 
 RowBox[{"DeleteLockFile", "[", " ", "]"}], "\[IndentingNewLine]", 
 RowBox[{"StartBackup", "[", "]"}]}], "Input"],

Cell[BoxData["\<\"Backup version 1.0.3.\"\>"], "Output"],

Cell[BoxData["\<\"The lock-file has been deleted.\"\>"], "Output"],

Cell[BoxData["\<\"Backup started.\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 " ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"it", "  "}], 
    RowBox[{"and", "  ", 
     RowBox[{"publish", "\[VeryThinSpace]", "!"}]}]], TraditionalForm]]],
 " "
}], "Title"],

Cell[TextData[{
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "it is a Mathematica package that provides latex editing capabilities for \
Mathematica Notebooks.\nCopyright \[Copyright] 2015  Andrew H. Norton."
}], "Text"],

Cell[CellGroupData[{

Cell["Statement of copying permission", "Subsection",
 CellChangeTimes->{{3.654794107447795*^9, 3.654794118839467*^9}}],

Cell[TextData[{
 "    ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "it is free software: you can redistribute it and/or modify\n    it under \
the terms of the GNU General Public License as published by\n    the Free \
Software Foundation, either version 3 of the License, or\n    (at your \
option) any later version.\n\n    ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "it is distributed in the hope that it will be useful,\n    but WITHOUT ANY \
WARRANTY; without even the implied warranty of\n    MERCHANTABILITY or \
FITNESS FOR A PARTICULAR PURPOSE.  See the\n    GNU General Public License \
for more details.\n\n    You should have received a copy of the GNU General \
Public License\n    along with this Example Notebook.  If not, see \
<http://www.gnu.org/licenses/>.\n    "
}], "Text",
 CellFrame->{{0, 0}, {0.5, 0}}]
}, Open  ]],

Cell[CellGroupData[{

Cell["About the author", "Subsection",
 CellChangeTimes->{{3.654794107447795*^9, 3.654794118839467*^9}, {
   3.65479417893475*^9, 3.654794184246648*^9}, {3.654798660844842*^9, 
   3.654798672588747*^9}, 3.6547987621234217`*^9, 3.654799032743878*^9}],

Cell[TextData[{
 StyleBox["Name:",
  FontWeight->"Bold"],
 "    Andrew H. Norton     \n",
 StyleBox["Email:    ",
  FontWeight->"Bold"],
 "norton.ah@gmail.com"
}], "Text"]
}, Open  ]],

Cell[CellGroupData[{

Cell["First ideas...", "Section",
 CellChangeTimes->{{3.654794548449685*^9, 3.654794574129176*^9}, 
   3.68109416503411*^9, 3.681794097292676*^9, {3.68179413802752*^9, 
   3.681794144051764*^9}}],

Cell[TextData[{
 "I had just planned to get snippits of tex code writen to file for big \
expressions, so as to paste them into tex documents.\nThen I thought, might \
as well have a PDF window running to see these bits of tex as I saved them.\n\
But if I could do that, I might as well send some explanatory text between \
the eqns. \n.... in fact,  let\[CloseCurlyQuote]s just turn Mathematica into \
a wysiwyg word processor for ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 ".  \n\nI found that this was a bit useless. It messes up too often and is \
full of junk,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ExportString", "[", 
   RowBox[{
    RowBox[{"Sin", "[", "y", "]"}], ",", "\"\<TeX\>\""}], "]"}], "//", 
  "FullForm"}]], "Input",
 CellChangeTimes->{{3.681794735653717*^9, 3.681794768710497*^9}, {
  3.681794873077095*^9, 3.68179487616502*^9}}],

Cell[BoxData[
 TagBox[
  StyleBox[
   "\"\<%% AMS-LaTeX Created with the Wolfram Language : \
www.wolfram.com\\n\\n\\\\documentclass{article}\\n\\\\usepackage{amsmath, \
amssymb, graphics, \
setspace}\\n\\n\\\\newcommand{\\\\mathsym}[1]{{}}\\n\\\\newcommand{\\\\\
unicode}[1]{{}}\\n\\n\\\\newcounter{mathematicapage}\\n\\\\begin{document}\\n\
\\n\\\\[\\\\text{Sin}[y]\\\\]\\n\\n\\\\end{document}\\n\>\"",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output",
 CellChangeTimes->{3.681794876907372*^9}]
}, Open  ]],

Cell[TextData[{
 "So I was thinking of starting from scratch, using a nested conversion from  \
FullForm  to  string input form  (",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 "  with  \\ \[Rule] \\\\ ).\nI don\[CloseCurlyQuote]t think it is as hard as \
it sounds. Just lots of small conversion rules for one function, eg. ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    StyleBox[
     FormBox[
      StyleBox["TeX",
       SingleLetterItalics->False],
      TraditionalForm],
     SingleLetterItalics->False], "\[VeryThinSpace]"}], TraditionalForm]]],
 "[  ] .\nThe simplest messy bit is just getting   (  )  around a Plus that \
appears inside a Times.  Otherwise simple stuff would be ok,"
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeX", "[", 
   RowBox[{"Sin", "[", "x_", "]"}], "]"}], ":=", 
  RowBox[{"\"\<\\\\sin\\\\!\\\\left( \>\"", "<>", 
   RowBox[{"TeX", "[", "x", "]"}], "<>", "\"\< \\\\right)\>\""}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6810825476540527`*^9, 3.6810826646923532`*^9}, {
   3.681083161710195*^9, 3.681083165694004*^9}, 3.681092701068686*^9}],

Cell[BoxData[
 RowBox[{"TeX", "[", 
  RowBox[{"Sin", "[", "y", "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6810826784840403`*^9, 3.6810826798280907`*^9}, 
   3.6810927010687313`*^9}],

Cell[BoxData["\<\"\\\\sin\\\\!\\\\left( y \\\\right)\"\>"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.681082680389814*^9, 3.681083145209756*^9, 
  3.681083175665056*^9, 3.681092701068763*^9}],

Cell["and since these are defined already,", "Text",
 CellChangeTimes->{{3.6817930662785463`*^9, 3.681793077830483*^9}}],

Cell[BoxData[
 RowBox[{"ToString", "[", 
  RowBox[{"TeXForm", "[", "\[Alpha]", "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6810830319237423`*^9, 3.681083059295486*^9}, 
   3.681092701068213*^9}],

Cell[BoxData["\<\"\\\\alpha\"\>"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.6810830598363323`*^9, 3.681092701068261*^9}],

Cell["one could do", "Text",
 CellChangeTimes->{{3.6817930662785463`*^9, 3.6817930890865793`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeX", "[", "x_Symbol", "]"}], ":=", 
  RowBox[{"ToString", "[", 
   RowBox[{"TeXForm", "[", "x", "]"}], "]"}]}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681082758838769*^9, 3.681082774371037*^9}, {
   3.681083106978612*^9, 3.681083117246661*^9}, 3.681092701068644*^9}],

Cell["\<\
But it turns out that    ToString[TeXForm[ x ]]   is not too bad as a first \
approximation.  Might as well try it first,\
\>", "Text",
 CellChangeTimes->{{3.681793116054006*^9, 3.681793153205797*^9}, {
   3.681793221141007*^9, 3.681793232932982*^9}, {3.681793286225086*^9, 
   3.681793306020267*^9}, 3.6817950490266743`*^9}],

Cell[BoxData[
 RowBox[{"ToString", "[", 
  RowBox[{"TeXForm", "[", 
   RowBox[{"Sin", "[", "y", "]"}], "]"}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681083072041479*^9, 3.681083098894823*^9}, 
   3.681092701068303*^9, {3.681793166437767*^9, 3.6817931703899813`*^9}, 
   3.68179326307694*^9}],

Cell[BoxData["\<\"\\\\sin (y)\"\>"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681083073277833*^9, 3.681083101520534*^9}, 
   3.681092701068336*^9, 3.6817931724246683`*^9, 3.6817932637062674`*^9}],

Cell[TextData[{
 "So the idea is to use  ToString[TeXForm[ x ]]   and then fix up the string \
of tex a bit by search-and-replace.  \n\nThus, the ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 "  side of this package is completely trivial.  What makes this package \
totally brilliant is that it is also trivial to use.\nWith almost no effort \
you can turn any well commented Mathematica notebook into a TeXed PDF, almost \
ready for publication.\nIn fact, you could do all your ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 "  publication from within Mathematica!"
}], "Text",
 CellChangeTimes->{{3.681793327459899*^9, 3.681793331379971*^9}, {
  3.681793365875523*^9, 3.681793833295022*^9}, {3.6817938690228*^9, 
  3.681793996189314*^9}, {3.681794040733013*^9, 3.681794068740878*^9}, {
  3.6817950845145082`*^9, 3.6817950899703836`*^9}, {3.681795154529764*^9, 
  3.681795154817827*^9}}],

Cell["\<\
If  ToString[TeXForm[ x ]]   is problematic, then one could also try  \
TexAct.nb  from the  xAct  tensor package.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Documentation", "Section",
 CellChangeTimes->{{3.654794548449685*^9, 3.654794574129176*^9}, 
   3.68109416503411*^9, {3.681157260338975*^9, 3.6811572651068974`*^9}}],

Cell[CellGroupData[{

Cell["Ideas for a documentation generator", "Subsection",
 CellChangeTimes->{{3.681791897874044*^9, 3.6817919266417503`*^9}}],

Cell["\<\
Could write an in-line documentation generator. The idea is to put the doc \
where the code is, and also generate nice user docs.

Have a comand like  docit[ f ]  that opens an InputText[ \
\[OpenCurlyDoubleQuote]\[CloseCurlyDoubleQuote], g  ] with a g-command that
defines a usage command for ? f ,  writes a bare-bones notebook page  f.nb  \
to a  Notebook-doc  directory,  and adds  f  to a list of user defined fns.
Need to edit the notebook\[CloseCurlyQuote]s options so that  F1  is \
captured, checks if the name  F1 is pressed on is a user defined fn pulls up \
the 
user-defined  f.nb  doc-page if it is.

....probably simpler than that. Set a path for the built in docs ?  See \
ApplicationBuilder.
\
\>", "Text",
 CellChangeTimes->{{3.6817901009035177`*^9, 3.68179029466121*^9}, {
  3.6817903319887743`*^9, 3.6817904512757072`*^9}, {3.681790519650538*^9, 
  3.681790807823142*^9}, {3.681790886926216*^9, 3.681790888942196*^9}, {
  3.6817909293257847`*^9, 3.6817909403176737`*^9}, {3.681792008064879*^9, 
  3.681792083360195*^9}, {3.6817921235997963`*^9, 3.681792142639605*^9}, {
  3.6818430929298487`*^9, 3.6818431513612223`*^9}}],

Cell[BoxData[{"NotebookEventActions", "\[IndentingNewLine]", \
"FrontEndEventActions"}], "Input",
 CellChangeTimes->{{3.6817910260767107`*^9, 3.681791027074244*^9}},
 CellID->111578629],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", "FrontEndEventActions", "]"}]], "Input",
 CellChangeTimes->{{3.681791627648608*^9, 3.6817916377341013`*^9}}],

Cell[BoxData["None"], "Output",
 CellChangeTimes->{3.681791639666432*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{
   RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
   RowBox[{"{", "NotebookEventActions", "}"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.681791627648608*^9, 3.681791722980441*^9}, {
  3.681791753972642*^9, 3.681791768819985*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"NotebookEventActions", "\[Rule]", "None"}], "}"}]], "Output",
 CellChangeTimes->{
  3.681791655170932*^9, {3.68179169985429*^9, 3.681791723821334*^9}, {
   3.681791763560041*^9, 3.68179176981266*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Options", "[", 
  RowBox[{"EvaluationNotebook", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{3.681791783155642*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CellGrouping", "\[Rule]", "Manual"}], ",", 
   RowBox[{
   "FrontEndVersion", 
    "\[Rule]", "\<\"11.0 for Linux x86 (64-bit) (July 28, 2016)\"\>"}], ",", 
   RowBox[{"StyleDefinitions", "\[Rule]", 
    RowBox[{"Notebook", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{
        RowBox[{"Cell", "[", 
         RowBox[{"StyleData", "[", 
          RowBox[{"StyleDefinitions", "\[Rule]", "\<\"Default.nb\"\>"}], 
          "]"}], "]"}], ",", 
        RowBox[{"Cell", "[", 
         RowBox[{
          RowBox[{
          "RawData", 
           "[", "\<\"Cell[StyleData[\\\"InputTeX\\\"],\\n \
MenuSortingValue->10000]\"\>", "]"}], ",", 
          RowBox[{"MenuSortingValue", "\[Rule]", "10000"}]}], "]"}]}], "}"}], 
      ",", 
      RowBox[{"Visible", "\[Rule]", "False"}], ",", 
      RowBox[{
      "FrontEndVersion", 
       "\[Rule]", "\<\"11.0 for Linux x86 (64-bit) (July 28, 2016)\"\>"}], 
      ",", 
      RowBox[{
      "StyleDefinitions", 
       "\[Rule]", "\<\"PrivateStylesheetFormatting.nb\"\>"}]}], "]"}]}], ",", 
   
   RowBox[{"WindowMargins", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"4", ",", "Automatic"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"42", ",", "Automatic"}], "}"}]}], "}"}]}], ",", 
   RowBox[{"WindowSize", "\[Rule]", 
    RowBox[{"{", 
     RowBox[{"2552", ",", "1288"}], "}"}]}], ",", 
   RowBox[{"Magnification", "\[RuleDelayed]", 
    RowBox[{"1.25`", " ", "Inherited"}]}]}], "}"}]], "Output",
 CellChangeTimes->{3.6817917840178823`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Functions", "Subsection",
 CellChangeTimes->{{3.681791897874044*^9, 3.6817919266417503`*^9}, {
  3.681792231902563*^9, 3.681792233454516*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeXitDirectory", "::", "usage"}], "=", "\"\<\>\""}]], "Input",
 CellChangeTimes->{3.681187420819559*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeXit", "::", "usage"}], "=", "\"\<\>\""}]], "Input",
 CellChangeTimes->{{3.681157423227573*^9, 3.681157439960692*^9}, {
  3.681187429380261*^9, 3.6811874325640173`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"CustomTeX", "::", "usage"}], "=", "\"\<\>\""}]], "Input",
 CellChangeTimes->{3.681158686863154*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"RemoveCustomTeX", "::", "usage"}], "=", "\"\<\>\""}]], "Input",
 CellChangeTimes->{3.681158687667728*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeXPreamble", "::", "usage"}], "=", "\"\<\>\""}]], "Input",
 CellChangeTimes->{3.681158688366722*^9}],

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"PDFViewer", "::", "usage"}], "=", 
    "\"\<\nPDFViewer[ cmd ]    sets the default PDF viewer to be used, and \
then runs it. \nPDFViewer[ ]           runs the default PDF viewer.\n\nIn \
either case, the value returned is the full pathname of the command that was \
used.\n\nThe initial default is  PDFViewer[ \\\"okular\\\" ].\>\""}], 
   ";"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PDFViewer"}]], "Input",
 CellChangeTimes->{{3.681159481885879*^9, 3.681159485024188*^9}}],

Cell[BoxData[
 StyleBox["\<\"\\nPDFViewer[ cmd ]    sets the default PDF viewer to be used, \
and then runs it. \\nPDFViewer[ ]           runs the default PDF \
viewer.\\n\\nThe full command to be used is  \\nIn either case, the value \
returned is the full pathname of the command that was used.\\n\\nThe initial \
default is  PDFViewer[ \\\"okular\\\" ].\"\>", "MSG"]], "Print", "PrintUsage",
 
 CellChangeTimes->{3.681789806095695*^9},
 CellTags->"Info133681825806-6846560"]
}, Open  ]]
}, Closed]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  ButtonBox["Begin",
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Begin"], "[", "\"\<`Private`\>\"", "]"}]], "Input",\

 CellID->782891883],

Cell[CellGroupData[{

Cell["Code", "Section",
 CellChangeTimes->{{3.654794548449685*^9, 3.654794574129176*^9}, 
   3.68109416503411*^9, {3.681157270147738*^9, 3.681157270946487*^9}}],

Cell[CellGroupData[{

Cell["Get required packages", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681092823994644*^9, 3.681092836074478*^9}, {
   3.681183608483924*^9, 3.68118363925135*^9}, 3.681184283179319*^9, {
   3.681728099067141*^9, 3.6817281270090513`*^9}, 3.681795205360958*^9}],

Cell["We want to use ReadFile[ ]  from this package,", "Text",
 CellChangeTimes->{{3.681193185802991*^9, 3.681193201770885*^9}, {
  3.681878363557394*^9, 3.681878381845216*^9}, {3.682830949380765*^9, 
  3.682830958724614*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<FileFunctions`\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6811565222436647`*^9, 3.6811565515650187`*^9}, 
   3.681878448745368*^9, {3.682830922085174*^9, 3.682830932941594*^9}}],

Cell[BoxData[
 RowBox[{"Needs", "[", "\"\<NotebookEvaluation`\>\"", "]"}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["Colors  and  TeXitBackground[ ]", "Subsection"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXitBackgroundColor", " ", "=", " ", 
  RowBox[{"RGBColor", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"244", ",", "244", ",", "244"}], "}"}], "/", "255"}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[
        Rational[244, 255], 
        Rational[244, 255], 
        Rational[244, 255]], RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[
      0.6379084967320261, 0.6379084967320261, 0.6379084967320261],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[{244/255, 244/255, 244/255}]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = RGBColor[
         Rational[244, 255], 
         Rational[244, 255], 
         Rational[244, 255]]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[{
    Rational[244, 255], 
    Rational[244, 255], 
    Rational[244, 255]}],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]],

Cell["\<\
The last   ; x ;    does nothing except to set  % = x,  rather than   % = \
Null ,\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeXitBackground", "[", "x_", "]"}], ":=", " ", "\n", "    ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"x", " ", "===", " ", "Null"}]}], ",", "\[IndentingNewLine]", 
    "        ", 
    RowBox[{
     RowBox[{"CellPrint", "[", "\n", "            ", 
      RowBox[{"Cell", "[", 
       RowBox[{
        RowBox[{"BoxData", "[", 
         RowBox[{"ToBoxes", "[", "x", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "                ", "\"\<Output\>\"", ",", 
        "\[IndentingNewLine]", "                ", 
        RowBox[{"Background", " ", "\[Rule]", " ", "TeXitBackgroundColor"}], 
        ",", "\[IndentingNewLine]", "                ", 
        RowBox[{"ShowCellLabel", " ", "\[Rule]", " ", "True"}], ",", 
        "\[IndentingNewLine]", "                ", 
        RowBox[{"CellLabel", " ", "\[Rule]", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Out", "[", "$Line", "]"}], "]"}]}]}], "\n", "            ",
        "]"}], "\n", "        ", "]"}], ";", "\n", "        ", "x", ";"}]}], 
   "    ", "\n", "    ", "]"}]}]], "Code",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXitBackground", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"x", "+", "x"}], ")"}], "/", "3"}], "]"}]], "Input"],

Cell[BoxData[
 FractionBox[
  RowBox[{"2", " ", "x"}], "3"]], "Output",
 ShowCellLabel->True,
 Background->RGBColor[{
    Rational[244, 255], 
    Rational[244, 255], 
    Rational[244, 255]}]]
}, Open  ]],

Cell[BoxData[
 RowBox[{"TeXitBackground", "[", "Null", "]"}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXitBackground", "[", "\"\<\>\"", "]"}]], "Input"],

Cell[BoxData["\<\"\"\>"], "Output",
 ShowCellLabel->True,
 Background->RGBColor[{
    Rational[244, 255], 
    Rational[244, 255], 
    Rational[244, 255]}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"TeXitBackground", "[", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"TeXitBackground", "[", "]"}]], "Output"]
}, Open  ]],

Cell["\<\
noTeXitBackground   is the same as   TeXitBackground,  but with  Background \
\[Rule] None.
This function is used to revert a previous TeXitBackground output cell back \
to normal background. For example, if the user has automatically TeXed an \
Eqn[ ]=...
and then decides to add a    //noTeX    at the end after realising this, the \
background gets swapped back to normal by a call to this function made from \
within
the fuction PreTeXit  (defined in tpTensor and used to define $Pre),\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noTeXitBackground", "[", "x_", "]"}], ":=", " ", "\n", "    ", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"x", " ", "===", " ", "Null"}]}], ",", "\[IndentingNewLine]", 
    "        ", 
    RowBox[{
     RowBox[{"CellPrint", "[", "\n", "            ", 
      RowBox[{"Cell", "[", 
       RowBox[{
        RowBox[{"BoxData", "[", 
         RowBox[{"ToBoxes", "[", "x", "]"}], "]"}], ",", 
        "\[IndentingNewLine]", "                ", "\"\<Output\>\"", ",", 
        "\[IndentingNewLine]", "                ", 
        RowBox[{"Background", " ", "\[Rule]", " ", "None"}], ",", 
        "\[IndentingNewLine]", "                ", 
        RowBox[{"ShowCellLabel", " ", "\[Rule]", " ", "True"}], ",", 
        "\[IndentingNewLine]", "                ", 
        RowBox[{"CellLabel", " ", "\[Rule]", " ", 
         RowBox[{"ToString", "[", 
          RowBox[{"Out", "[", "$Line", "]"}], "]"}]}]}], "\n", "            ",
        "]"}], "\n", "        ", "]"}], ";", "\n", "        ", "x", ";"}]}], 
   "    ", "\n", "    ", "]"}]}]], "Code",
 InitializationCell->True],

Cell["\<\

$HiddenColor  is the color for \[OpenCurlyDoubleQuote]hidden\
\[CloseCurlyDoubleQuote] left sides of equations obtained by use of  \
//noleft.  The corresponding Format statement is in tpTensor.
The left sides are shown on screen but not printed. The reason for showing \
them on screen is that separate lines in an eqnarray may 
actually appear in the notebook with lots of off-page  \
\[OpenCurlyDoubleQuote]working steps\[CloseCurlyDoubleQuote] between them. So \
it is good to see what the left side really is. \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"$HiddenColor", "=", " ", 
   RowBox[{"RGBColor", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"55", ",", "180", ",", "55"}], "}"}], "/", "255."}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData["$HiddenColor"], "Input"],

Cell[BoxData[
 InterpretationBox[
  ButtonBox[
   TooltipBox[
    GraphicsBox[{
      {GrayLevel[0], RectangleBox[{0, 0}]}, 
      {GrayLevel[0], RectangleBox[{1, -1}]}, 
      {RGBColor[
       0.21568627450980393`, 0.7058823529411764, 0.21568627450980393`], 
       RectangleBox[{0, -1}, {2, 1}]}},
     AspectRatio->1,
     Frame->True,
     FrameStyle->RGBColor[
      0.14379084967320263`, 0.47058823529411764`, 0.14379084967320263`],
     FrameTicks->None,
     ImageSize->
      Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
        AbsoluteCurrentValue[Magnification]}],
     PlotRangePadding->None],
    "RGBColor[{0.21568627450980393, 0.7058823529411764, \
0.21568627450980393}]"],
   Appearance->None,
   BaseStyle->{},
   BaselinePosition->Baseline,
   ButtonFunction:>With[{Typeset`box$ = EvaluationBox[]}, 
     If[
      Not[
       AbsoluteCurrentValue["Deployed"]], 
      SelectionMove[Typeset`box$, All, Expression]; 
      FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
      FrontEnd`Private`$ColorSelectorInitialColor = 
       RGBColor[
        0.21568627450980393`, 0.7058823529411764, 0.21568627450980393`]; 
      FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
      MathLink`CallFrontEnd[
        FrontEnd`AttachCell[Typeset`box$, 
         FrontEndResource["RGBColorValueSelector"], {0, {Left, Bottom}}, {
         Left, Top}, 
         "ClosingActions" -> {
          "SelectionDeparture", "ParentChanged", "EvaluatorQuit"}]]]],
   DefaultBaseStyle->{},
   Evaluator->Automatic,
   Method->"Preemptive"],
  RGBColor[{0.21568627450980393`, 0.7058823529411764, 0.21568627450980393`}],
  Editable->False,
  Selectable->False]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["$TeXitDir", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681092823994644*^9, 3.681092836074478*^9}, {
   3.681183608483924*^9, 3.68118363925135*^9}, 3.681184283179319*^9, {
   3.681185493724258*^9, 3.681185501612042*^9}, {3.6811874582760468`*^9, 
   3.681187472282135*^9}, {3.682837546374707*^9, 3.68283755074253*^9}}],

Cell[TextData[{
 "For each user\[CloseCurlyQuote]s Notebook, have a default directory \
location for where the ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " gets processed and saved,"
}], "Text",
 CellChangeTimes->{{3.681092911865582*^9, 3.6810929312095327`*^9}, 
   3.681183598388179*^9, 3.6811855177878237`*^9, {3.6811855742512712`*^9, 
   3.681185604234757*^9}, {3.681185956326517*^9, 3.6811859709420567`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TeXitDir", "=", 
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", 
    RowBox[{"FileBaseName", "[", 
     RowBox[{"NotebookFileName", "[", "]"}], "]"}], "<>", 
    "\"\<_TeXit\>\""}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{3.682837448803067*^9, 3.682837593510623*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"DirectoryQ", "[", "$TeXitDir", "]"}]}], ",", 
    RowBox[{"CreateDirectory", "[", "$TeXitDir", "]"}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.682837475463676*^9, 3.6828374824376287`*^9}}],

Cell[BoxData[
 RowBox[{"$TeXitInstallationDirectory", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{
     RowBox[{"ParentDirectory", "[", 
      RowBox[{"DirectoryName", "[", 
       RowBox[{"FindFile", "[", "\"\<TeXit`\>\"", "]"}], "]"}], "]"}], ",", 
     "$TeXitVersion"}], "}"}], "]"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "CustomTeX[ ]   ---  a list of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " replacements"
}], "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],

Cell[TextData[{
 "Customize names etc.  Best to keep the replacement  ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 "  code short, eg., by using one of your own tex defns, since the \nthe \
replacement strings will appear throughout the generated .tex file, which you \
may want to edit by hand later, so you want it to be human readable."
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681183657251258*^9, 3.681183832352972*^9}, 
   3.6811842831793756`*^9, {3.681978477638157*^9, 3.6819784960943527`*^9}}],

Cell["\<\
The  ValueQ  test is in case this package has been reloaded with Get  (e.g., \
while doing TeXit code development), in which case the user might already \
have
defined some replacements,\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ValueQ", "[", "$TeXReplacements", "]"}]}], ",", 
    RowBox[{"$TeXReplacements", " ", "=", " ", 
     RowBox[{"{", "}"}]}]}], "]"}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],

Cell["Provide an easy way to make new fix-ups,", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681092855466219*^9, 3.681092886985743*^9}, 
   3.681184283179471*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "CustomTeX", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"CustomTeX", "[", 
   RowBox[{"x_", ",", "s_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"ToString", "[", 
       RowBox[{"TeXForm", "[", "x", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"$TeXReplacements", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"$TeXReplacements", ",", 
        RowBox[{"Rule", "[", 
         RowBox[{"s1", ",", "_"}], "]"}]}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"$TeXReplacements", ",", 
       RowBox[{"s1", "\[Rule]", "s"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "s"}]}], "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681091733358156*^9, 3.6810920880838203`*^9}, {
   3.681092241218247*^9, 3.681092268449603*^9}, {3.681092322656749*^9, 
   3.6810923442566347`*^9}, {3.6810985138233767`*^9, 3.68109851696638*^9}, {
   3.681099906309195*^9, 3.68109990708267*^9}, 3.681184283179532*^9, {
   3.681193260554474*^9, 3.681193266733218*^9}}],

Cell["\<\
03/08/2017  replaced above with the following to aviod accidental custom tex \
for values of the first arg,\
\>", "Text"],

Cell[BoxData[
 RowBox[{"SetAttributes", "[", 
  RowBox[{"CustomTeX", ",", "HoldFirst"}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"CustomTeX", "[", 
   RowBox[{"x_", ",", "s_String"}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{
       RowBox[{
        RowBox[{
         RowBox[{"MakeBoxes", "[", 
          RowBox[{"x", ",", "TraditionalForm"}], "]"}], "//", "DisplayForm"}],
         "//", "TeXForm"}], "//", "ToString"}]}], ";", "\[IndentingNewLine]", 
     
     RowBox[{"$TeXReplacements", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"$TeXReplacements", ",", 
        RowBox[{"s1", "\[Rule]", "_"}]}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"$TeXReplacements", ",", 
       RowBox[{"s1", "\[Rule]", "s"}]}], "]"}], ";", "\[IndentingNewLine]", 
     "s"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "NB.  Use  \[OpenCurlyDoubleQuote]\\\\\[CloseCurlyDoubleQuote]  rather than  \
\[OpenCurlyDoubleQuote]\\\[CloseCurlyDoubleQuote]  in the string for the \
replacement ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 ","
}], "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.68115075761327*^9, 3.681150800797534*^9}, {
   3.6811841876284237`*^9, 3.6811842330051537`*^9}, 3.6811842831795673`*^9}],

Cell[BoxData[
 RowBox[{"CustomTeX", "[", 
  RowBox[{"\[Lambda]B", ",", "\"\<\\\\lambda_B\>\""}], "]"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681092365680594*^9, 3.681092390512108*^9}, {
   3.6811511285687017`*^9, 3.681151130560112*^9}, 3.681184283179605*^9}],

Cell[BoxData["\<\"\\\\lambda_B\"\>"], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.681092392956554*^9, {3.6811508329116793`*^9, 3.681150855966834*^9}, 
   3.681150925809754*^9, 3.681184283179654*^9, 3.681193289260634*^9, 
   3.68153528916199*^9, 3.681644361569672*^9, 3.681878476631728*^9, 
   3.682837606449703*^9}],

Cell["\<\
....here it would be better to replace with  \[OpenCurlyDoubleQuote]\\\\lamB\
\[CloseCurlyDoubleQuote]  and use  \\def{\\lamB}  in the  preamble.tex  file. \

Or better still, in the  preamble.tex  file, use   \\input defns.tex ,  where \
  defns.tex  is a  file containing user defns.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681183853360847*^9, 3.681184160060894*^9}, 
   3.681184283179685*^9}],

Cell[CellGroupData[{

Cell[BoxData[{"$TeXReplacements", "\[IndentingNewLine]", 
 RowBox[{"$TeXReplacements", "//", "InputForm"}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6810924006100483`*^9, 3.681092407599909*^9}, {
   3.681092469518478*^9, 3.681092511774617*^9}, 3.681184283179722*^9, {
   3.68119329748205*^9, 3.681193299901053*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\\\\text{$\\\\lambda $B}\"\>", 
   "\[Rule]", "\<\"\\\\lambda_B\"\>"}], "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.681092412667582*^9, {3.681092478726169*^9, 3.681092513008821*^9}, 
   3.6811508633199663`*^9, {3.681150923763686*^9, 3.6811509269274683`*^9}, 
   3.681184283179758*^9, {3.681193291646068*^9, 3.681193301246929*^9}, 
   3.6815352893010397`*^9, 3.681644361713729*^9, 3.681878478989533*^9, 
   3.682837606542625*^9}],

Cell["{\"\\\\text{$\\\\lambda $B}\" -> \"\\\\lambda_B\"}", "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{
  3.681092412667582*^9, {3.681092478726169*^9, 3.681092513008821*^9}, 
   3.6811508633199663`*^9, {3.681150923763686*^9, 3.6811509269274683`*^9}, 
   3.681184283179758*^9, {3.681193291646068*^9, 3.681193301246929*^9}, 
   3.6815352893010397`*^9, 3.681644361713729*^9, 3.681878478989533*^9, 
   3.682837606543435*^9}]
}, Open  ]],

Cell["Provide an easy way to remove fix-ups,", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681092855466219*^9, 3.681092886985743*^9}, {
   3.681093643344595*^9, 3.681093645316258*^9}, 3.681184283179823*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "RemoveCustomTeX", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"RemoveCustomTeX", "[", "x_", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "s1", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"s1", "=", 
      RowBox[{"ToString", "[", 
       RowBox[{"TeXForm", "[", "x", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"$TeXReplacements", "=", 
      RowBox[{"DeleteCases", "[", 
       RowBox[{"$TeXReplacements", ",", 
        RowBox[{"Rule", "[", 
         RowBox[{"s1", ",", "_"}], "]"}]}], "]"}]}], ";"}]}], 
   "\[IndentingNewLine]", "]"}]}]}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True,
 CellChangeTimes->{{3.681093324260516*^9, 3.681093336517049*^9}, {
   3.681093371716147*^9, 3.681093515362298*^9}, {3.681093549249913*^9, 
   3.681093570417675*^9}, {3.68109847851303*^9, 3.681098492086483*^9}, 
   3.681184283179873*^9, {3.681193313241459*^9, 3.681193316372149*^9}}],

Cell[BoxData[{
 RowBox[{"RemoveCustomTeX", "[", "\[Lambda]B", 
  "]"}], "\[IndentingNewLine]", "$TeXReplacements"}], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.6810936058249807`*^9, 3.681093620038596*^9}, 
   3.681184283179915*^9, 3.6811933250971613`*^9}],

Cell[BoxData[
 RowBox[{"{", "}"}]], "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{3.681093621381401*^9, 3.68115093574286*^9, 
  3.681184283179949*^9, 3.681193326521515*^9, 3.681535289443823*^9, 
  3.681644361865098*^9, 3.681878483557663*^9, 3.682837606694738*^9}],

Cell["Read in the  \[OpenCurlyDoubleQuote]CustomTeX.m\[CloseCurlyDoubleQuote] \
 provided with TeXit,", "Text",
 CellChangeTimes->{{3.682015100542918*^9, 3.682015106958694*^9}, {
  3.682016234664144*^9, 3.6820162667372627`*^9}}],

Cell[BoxData[
 RowBox[{"Get", "[", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$TeXitInstallationDirectory", ",", "\"\<CustomTeX.m\>\""}], 
    "}"}], "]"}], "]"}]], "Input",
 InitializationCell->True],

Cell["\<\
If the user has also provided a  CustomTeX.m  file then read that in too,\
\>", "Text",
 CellChangeTimes->{{3.681978528805296*^9, 3.681978571173011*^9}, 
   3.681978602372533*^9, {3.682836203735358*^9, 3.682836218647156*^9}, {
   3.6828365628187857`*^9, 3.682836571322816*^9}}],

Cell[BoxData[
 RowBox[{"With", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{"f", " ", "=", " ", 
     RowBox[{"FileNameJoin", "[", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"NotebookDirectory", "[", "]"}], ",", "\"\<CustomTeX.m\>\""}],
        "}"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"FileExistsQ", "[", "f", "]"}], ",", " ", 
     RowBox[{
      RowBox[{"Get", "[", "f", "]"}], ";"}]}], "]"}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "At the moment this is just a convenience function (not used elsewhere) for \
finding out bits of ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " code.  \nIt should be fixed up and used in  ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "it[ ] ,  and also do replacements etc."
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeXCode", "[", "x_", "]"}], ":=", 
  RowBox[{"ToString", "[", 
   RowBox[{"TeXForm", "[", "x", "]"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "E.g., find out what the ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " code is for various characters or constructs,"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"TeXCode", "[", 
  RowBox[{
   RowBox[{"{", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", ",", "b"}], "}"}], ",", 
     RowBox[{"{", 
      RowBox[{"c", ",", " ", "d"}], "}"}]}], "}"}], "//", "MatrixForm"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TeXCode", "[", 
  RowBox[{"\[LeftAngleBracket]", "a", "\[RightAngleBracket]"}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"TeXCode", "[", 
  RowBox[{"a", "\[CircleTimes]", "b"}], "]"}]}], "Input"],

Cell[BoxData["\<\"\\\\left(\\n\\\\begin{array}{cc}\\n a & b \\\\\\\\\\n c & d \
\\\\\\\\\\n\\\\end{array}\\n\\\\right)\"\>"], "Output"],

Cell[BoxData["\<\"\\\\langle a\\\\rangle\"\>"], "Output"],

Cell[BoxData["\<\"a\\\\otimes b\"\>"], "Output"]
}, Open  ]],

Cell[TextData[{
 "If the ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " code is to be used in   CustomTeX[  ]   then use  FullForm ,  "
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"TeXCode", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"a", ",", "b"}], "}"}], ",", 
      RowBox[{"{", 
       RowBox[{"c", ",", " ", "d"}], "}"}]}], "}"}], "//", "MatrixForm"}], 
   "]"}], "//", "FullForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TeXCode", "[", 
   RowBox[{"\[LeftAngleBracket]", "a", "\[RightAngleBracket]"}], "]"}], "//", 
  "FullForm"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TeXCode", "[", 
   RowBox[{"a", "\[CircleTimes]", "b"}], "]"}], "//", "FullForm"}]}], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   "\"\<\\\\left(\\n\\\\begin{array}{cc}\\n a & b \\\\\\\\\\n c & d \
\\\\\\\\\\n\\\\end{array}\\n\\\\right)\>\"",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"],

Cell[BoxData[
 TagBox[
  StyleBox["\"\<\\\\langle a\\\\rangle\>\"",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"],

Cell[BoxData[
 TagBox[
  StyleBox["\"\<a\\\\otimes b\>\"",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TeXit[ ]", "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.681092823994644*^9, 3.681092836074478*^9}, {
   3.681183608483924*^9, 3.68118363925135*^9}, 3.681184283179319*^9, {
   3.681185493724258*^9, 3.681185501612042*^9}, {3.681187493571206*^9, 
   3.6811875012670927`*^9}}],

Cell[TextData[{
 "Add   // ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeXit",
    SingleLetterItalics->False], TraditionalForm]]],
 "   to the end of a mathematica expression to be ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 "ed  and it does everything needed....\nthe ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 "  version of it will be appended in the PDF viewer. No other change to \
existing code is required to ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " your output."
}], "Text"],

Cell[TextData[{
 "If  x  is a string, then it is assumed to be valid tex code, as it would \
appear in a .tex file. Of course, this could be text without any maths in it. \
\nThe catch is that all  \[OpenCurlyDoubleQuote]/\[CloseCurlyDoubleQuote] in \
the tex code must appear in the string x  as \[OpenCurlyDoubleQuote]//\
\[CloseCurlyDoubleQuote],  which means typing and reading a string like that \
would be a pain.\nE.g., this is valid string:   x = \[OpenCurlyDoubleQuote]An \
in-line demo, $ \\\\sin y + 3 $  and a displayed eqn,  $$ \\\\frac{1}{2} x = \
1 \\\\,.$$\[CloseCurlyDoubleQuote]\n\nThe solution is to use a special  \
\[OpenCurlyDoubleQuote]",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 ": Text\[CloseCurlyDoubleQuote] styled cell to type inside. We do that later."
}], "Text"],

Cell["\<\
The defn for two arguments. This defn will be used by  Eqn[ ]  from tpTensor  \
so that 
Eqn[ label ] = lhs ==rhs    will call  TeXit [ eqn, label ]   and the label \
can be used with  \\ref{ }  in the text.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"$TeXCommand", "=", "\"\<pdflatex -halt-on-error \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$TeXitBody0", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TeXitDir", ",", "\"\<body0.tex\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$TeXitBody", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TeXitDir", ",", "\"\<body.tex\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$TeXStdOut", "  ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TeXitDir", ",", "\"\<StdOut.txt\>\""}], "}"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"$TeXitFragment", "  ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TeXitDir", ",", "\"\<fragment.tex\>\""}], "}"}], "]"}]}], 
  ";"}]}], "Input",
 InitializationCell->True],

Cell["The defn for one argument,", "Text",
 CellChangeTimes->{{3.681644847552335*^9, 3.6816448588642*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "TeXit", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TeXit", "[", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"TeXit", "[", 
     RowBox[{"Null", ",", "\"\<\>\""}], "]"}], ";"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TeXit", "[", "x_", "]"}], ":=", 
  RowBox[{"TeXit", "[", 
   RowBox[{"x", ",", "\"\<\>\""}], "]"}]}]}], "Input",
 InitializationCell->True],

Cell["\<\
The general defn, with a 2nd argument for an eqn label. This will be used \
inside the fn  Eqn[ ]  from tpTensor.
Input of the form  Eqn[ label ] = eqn   will call  TeXit [ eqn, label ]   and \
will use label in the tex code.\
\>", "Text"],

Cell[CellGroupData[{

Cell["Code for   //label", "Subsubsection"],

Cell["\<\

If the output to be TeXed is an expression  x  rather than an   Eqn[  ] = ... \
 ,  then it can be labeled by hand using this,\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"label", "[", "]"}], ":=", 
  RowBox[{
   RowBox[{"TeXit", "[", 
    RowBox[{"#", ",", "\"\<\>\""}], "]"}], "&"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"label", "[", "label_", "]"}], ":=", 
  RowBox[{
   RowBox[{"TeXit", "[", 
    RowBox[{"#", ",", 
     RowBox[{"ToString", "[", "label", "]"}]}], "]"}], "&"}]}]}], "Input",
 InitializationCell->True],

Cell["\<\
.... this should only be used on *expressions*  because:  
              (1)   an   Eqn[ label ] = ...    already has a label, so it \
makes no sense to label it again (and you\[CloseCurlyQuote]ll get 3 copies in \
your PDF).
              (2)   labeling something like  a == b  makes no sense, because \
if it is worth refering to by a label, then it is almost certainly because it \

                       has been used in some calculation,  in which case it \
ought to be used as   Eqn[ label ] =  a== b   (rather than  %  or  Out[ ]).\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Code for   CleanLabel[ ]   and   CleanRefs[ ]", "Subsubsection"],

Cell["\<\

Labels that automatically come from    Eqn [ label ] =  lhs == rhs ,      \
will often have greek characters in them, so we need to clean them up,     \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ToString", "[", 
   RowBox[{"FullForm", "[", "\[Sigma]", "]"}], "]"}], "//", 
  "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox["\"\<\\\\[Sigma]\>\"",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell["\<\
It is sufficient to remove the   \[OpenCurlyDoubleQuote]\\\
\[CloseCurlyDoubleQuote]  to get a label that will work with pdflatex and \
that we probably wont use elsewhere by mistake,\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"FullForm", "[", "\[Sigma]", "]"}], "]"}], ",", 
    RowBox[{"\"\<\\\\\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "//", 
  "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox["\"\<[Sigma]\>\"",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell["\<\
We shall also need to do the same for any   \\ref { label }   that appears in \
the text.\
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"FullForm", "[", "\[Sigma]Euler", "]"}], "]"}], ",", 
    RowBox[{"\"\<\\\\\>\"", "\[Rule]", "\"\<\>\""}]}], "]"}], "//", 
  "FullForm"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox["\"\<[Sigma]Euler\>\"",
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell["\<\
To  get labels that are easy to type  (if later editing the tex by hand), let\
\[CloseCurlyQuote]s also strip out  \[OpenCurlyDoubleQuote][\
\[OpenCurlyDoubleQuote] and \[OpenCurlyDoubleQuote]]\[CloseCurlyDoubleQuote] ,\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CleanLabel", "[", "label_", "]"}], ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{
    RowBox[{"ToString", "[", 
     RowBox[{"FullForm", "[", "label", "]"}], "]"}], ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<\\\\\>\"", "\[Rule]", "\"\<\>\""}], ",", 
      RowBox[{"\"\<[\>\"", "\[Rule]", "\"\<\>\""}], ",", 
      RowBox[{"\"\<]\>\"", "\[Rule]", "\"\<\>\""}], ",", 
      RowBox[{"\"\<\\\"\>\"", "\[Rule]", "\"\<\>\""}]}], "}"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"CleanLabel", "[", "\[Sigma]Euler", "]"}], ",", 
   RowBox[{"CleanLabel", "[", "\"\<\[Sigma]Euler\>\"", "]"}]}], 
  "}"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"SigmaEuler\"\>", ",", "\<\"SigmaEuler\"\>"}], "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FullForm", "[", "%", "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  StyleBox[
   RowBox[{"List", "[", 
    RowBox[{"\"\<SigmaEuler\>\"", ",", "\"\<SigmaEuler\>\""}], "]"}],
   ShowSpecialCharacters->False,
   ShowStringCharacters->True,
   NumberMarks->True],
  FullForm]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CleanLabelRule", "[", "label_", "]"}], ":=", 
  RowBox[{"label", "\[Rule]", 
   RowBox[{"CleanLabel", "[", "label", "]"}]}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CleanLabelRule", "[", "\[Sigma]Euler", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"\[Sigma]Euler", "\[Rule]", "\<\"SigmaEuler\"\>"}]], "Output"]
}, Open  ]],

Cell["ref/RegularExpression  ", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"StringCases", "[", 
  RowBox[{
  "\"\<Some text with \\\\ref{\[Sigma]Euler} in it and \
\\\\ref{\[Alpha]2}.\>\"", ",", 
   RowBox[{
    RowBox[{"\"\<\\\\ref{\>\"", "~~", 
     RowBox[{"Shortest", "[", "x__", "]"}], "~~", "\"\<}\>\""}], 
    "\[RuleDelayed]", "x"}]}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{"\<\"\[Sigma]Euler\"\>", ",", "\<\"\[Alpha]2\"\>"}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Map", "[", 
  RowBox[{"CleanLabelRule", ",", "%"}], "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"\<\"\[Sigma]Euler\"\>", "\[Rule]", "\<\"SigmaEuler\"\>"}], ",", 
   RowBox[{"\<\"\[Alpha]2\"\>", "\[Rule]", "\<\"Alpha2\"\>"}]}], 
  "}"}]], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"CleanRefs", "[", "s_String", "]"}], " ", ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"s", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"CleanLabelRule", ",", " ", 
      RowBox[{"StringCases", "[", 
       RowBox[{"s", ",", 
        RowBox[{
         RowBox[{"\"\<\\\\ref{\>\"", "~~", 
          RowBox[{"Shortest", "[", "x__", "]"}], "~~", "\"\<}\>\""}], 
         "\[RuleDelayed]", "x"}]}], "]"}]}], "]"}]}], "]"}]}]], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CleanRefs", "[", 
  "\"\<Some text with \\\\ref{\[Sigma]Euler} in it and \
\\\\ref{\[Alpha]2}.\>\"", "]"}]], "Input"],

Cell[BoxData["\<\"Some text with \\\\ref{SigmaEuler} in it and \
\\\\ref{Alpha2}.\"\>"], "Output"]
}, Open  ]],

Cell["\<\
As well as using   \\ref{ }  with greek in text, it will be good for \
hand-coded eqns to be able to  \\label{}  with greek. 
So let\[CloseCurlyQuote]s redefine  CleanRefs[ ]   to also search for and \
replace those,  \
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"CleanRefs", "[", "s_String", "]"}], " ", ":=", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"s", ",", 
    RowBox[{"Map", "[", 
     RowBox[{"CleanLabelRule", ",", " ", 
      RowBox[{"StringCases", "[", 
       RowBox[{"s", ",", 
        RowBox[{
         RowBox[{
          RowBox[{"\"\<\\\\ref{\>\"", "|", "\"\<\\\\label{\>\""}], "~~", 
          RowBox[{"Shortest", "[", "x__", "]"}], "~~", "\"\<}\>\""}], 
         "\[RuleDelayed]", "x"}]}], "]"}]}], "]"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CleanRefs", "[", 
  "\"\<Some text with $$ x=x \\\\label{\[Sigma]Euler}$$ in it and \\\\ref{\
\[Alpha]2}.\>\"", "]"}]], "Input"],

Cell[BoxData["\<\"Some text with $$ x=x \\\\label{SigmaEuler}$$ in it and \
\\\\ref{Alpha2}.\"\>"], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Code for    FixAbsBug[ ]", "Subsubsection"],

Cell[CellGroupData[{

Cell[BoxData["$Version"], "Input"],

Cell[BoxData["\<\"11.0.1 for Linux x86 (64-bit) (September 21, 2016)\"\>"], \
"Output"]
}, Open  ]],

Cell[TextData[{
 "At    $Version =  \[OpenCurlyDoubleQuote]11.0.1 for Linux x86 (64-bit) \
(September 21, 2016)\[CloseCurlyDoubleQuote]   Mathematica produces bad ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", " ", 
     StyleBox[
      RowBox[{
       AdjustmentBox["E",
        BoxBaselineShift->0.5,
        BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}]], " "}],
    SingleLetterItalics->False], TraditionalForm]]],
 "for the function  Abs[ x ]  if\nthe argument  x  is not normal height:   \
\\left\\left|   x  \\right\\right|    ...which is wrong.    The following \
filters out any repeated  \\left or \\right,"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"FixAbsBug", "[", "s_String", "]"}], ":=", " ", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"s", ",", 
    RowBox[{"{", 
     RowBox[{
      RowBox[{"\"\<\\\\left\\\\left\>\"", "\[Rule]", "\"\<\\\\left\>\""}], 
      ",", 
      RowBox[{
      "\"\<\\\\right\\\\right\>\"", "\[Rule]", "\"\<\\\\right\>\""}]}], 
     "}"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"FixAbsBug", "[", 
  "\"\<x = \\\\left\\\\left| \\\\frac{x}{y} \\\\right\\\\right| > 0\>\"", 
  "]"}]], "Input"],

Cell[BoxData["\<\"x = \\\\left| \\\\frac{x}{y} \\\\right| > 0\"\>"], "Output"]
}, Open  ]],

Cell["\<\
... this will be a harmless fix after this Mathematica bug is fixed.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes:    //noleft", "Subsubsection"],

Cell[TextData[{
 "\nTo  separately  ",
 Cell[BoxData[
  FormBox[
   StyleBox["LaTeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "  the steps in a multi-step  eqnarray,  we want to be able to input \n\n    \
                                                                              \
                                   lhs == rhs  //noleft                       \
                 to get      \[OpenCurlyDoubleQuote]=  rhs\
\[CloseCurlyDoubleQuote]\n  \n                                                \
                                                                     Eqn[ \
label ] = lhs ==rhs  //noleft            to get      \[OpenCurlyDoubleQuote]= \
 rhs              (n)\[CloseCurlyDoubleQuote]"
}], "Text"],

Cell["\<\

where  n  is the eqn number for label.   This is done by the function  \
PreTeXit[ ]   defined in  tpTensor  Part 5   (and used to define $Pre).\
\>", "Text"],

Cell["\<\
One can combine the above as    //nonuumber //noleft    or    //noleft \
//nonumber .  \
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes:    // nonumber", "Subsubsection"],

Cell["\<\
There may be times that an  Eqn[ ]   is useful for calculations, but does not \
need an eqn number because it never gets referred to by number in later
text. Then this can be used:    

                                                                              \
                        Eqn[ label ] = lhs ==rhs  // nonumber
                                                                              \
           
This behaviour of   //nonumber   is defined in the  PreTeXit[ ]   function in \
tpTensor  (which is used to define  $Pre).                                    \
                     \
\>", "Text"],

Cell["\<\
Similarly,   //noleft    is defined in the  PreTeXit[ ]   function in \
tpTensor  (which we use to define  $Pre).
This replaces, in the TeXed output, the left side of an eqn by the symbol  \
HiddenLeftEqn which becomes  TeXed  as  \[OpenCurlyDoubleQuote]\
\[CloseCurlyDoubleQuote].\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"noleft", "[", "eqn_", "]"}], " ", ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"$noleft", " ", "=", " ", "True"}], ";", " ", "eqn"}], 
   ")"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
One can combine the above as    //nonuumber //noleft    or    //noleft \
//nonumber .  \
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "Notes:    ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 " errors reported by pdflatex"
}], "Subsubsection"],

Cell[TextData[{
 "To check for errors,  we ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " the fragment being added before trying to ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " the whole file.\nWe are relying on the fact that errors from pdflatex are \
flagged by \[OpenCurlyDoubleQuote]!\[CloseCurlyDoubleQuote] in the standard \
output, so we just use the standard output from there on.\nDelete   \
main-fragment.aux   because a previous error can mess this up and cause a \
false error report."
}], "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes:    info from Stackexchange", "Subsubsection"],

Cell["\<\

ToString[TeXForm[x]]   or   ToString[TeXForm[( x//StandardForm) ]] ?     
If changed, will need to do so also for CustomTex[ ].

T eXForm  sometimes rearranges things because it uses  TraditionalForm.  To \
prevent this,    // Evaluate // HoldForm // TeXForm
http://mathematica.stackexchange.com/questions/109975/can-one-prevent-tex-\
conversion-from-changing-form-of-expressions

Brackets,
http://mathematica.stackexchange.com/questions/47364/texform-and-large-\
brackets-biggl-etc

Could use   StringTemplate  and/or   File Template.     \
guide/WorkingWithTemplates

References and citations,
http://mathematica.stackexchange.com/questions/15471/how-do-i-start-a-\
reference-system

TeXForm for numbers,
http://mathematica.stackexchange.com/questions/14570/awkward-output-of-texform

This looks a lot like what I am doing here but it is old and gone,
http://mathematica.stackexchange.com/questions/6041/exporting-numbered-\
equations-to-html-tex-using-conversion-rules

Run[ ] and  Run Process[ ]  are  blocking.    StartProcess[ ]   is not.
We need  Run[ ]  to block so that we can check the output for errors, etc.   
Run can be unblocked using   Run[ cmd & ].
  \
\>", "Text"],

Cell["DelimiterFlashTime   --- matching brackets option", "Text"],

Cell[TextData[{
 Cell[BoxData["InputAliases"], "Input"],
 "    might be useful."
}], "Text"],

Cell["\<\
Is there a quick way to add PDF fragment files together?  These are not full \
pages though.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes:    re. code for aligned eqns", "Subsubsection"],

Cell["\<\
For automatic line breaking for long eqns see:    breqn.pdf    (latex package)\
\>", "Text"],

Cell["\<\
Re. aligned equation arrays. If we have   
...
\\eea
\\bea
...
then we can replace these by  \\\\  to make aligned eqns, and never use \\be \
\\ee  or  $$.
Only write  \[OpenCurlyDoubleQuote]\\\\eea\\n\[CloseCurlyDoubleQuote]  to \
file if the next thing is text. If it is another eqn, then assume it is \
aligned, and instead of the 2 lines   \\eea\\bea   write the tex line-break \
\\\\.
This means that text (even an empty line or section heading) must follow \
every eqn. But that is always the case except for perhaps for the last line \
of the file.\
\>", "Text"],

Cell["\<\
( first  ....  last)    for fragments.
body0  \[Rule] last-body0 <> (first0 ....  )     for the accumulated file. 
body     \[Rule] body0 <> last                                for pdf.
\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Notes:    string substitutions", "Subsubsection"],

Cell["\<\
The  StringReplace[ ]   for   \[OpenCurlyDoubleQuote]-\[OpenCurlyDoubleQuote] \
 is a bit fancy so that it works differently from usual if there is nothing \
before the \[OpenCurlyDoubleQuote]-\[OpenCurlyDoubleQuote].
This prevents an unwanted  \\n   and formats   body.tex   a bit nicer.   Thes \
are some tests,  \
\>", "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"s4", "=", "\"\<-  y  a-b x \>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"StringReplace", "[", 
  RowBox[{"s4", ",", " ", 
   RowBox[{
    RowBox[{"y_", "~~", "\"\<-\>\""}], " ", "\[RuleDelayed]", " ", 
    RowBox[{"y", "<>", "\"\<\\n     \>\"", "<>", "\"\<-  \>\""}]}]}], 
  "]"}]}], "Input"],

Cell[BoxData["\<\"-  y  a\\n     -  b x \"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"s4", "=", 
  "\"\<                 -\\\\langle \\\\Theta ,\\\\mathfrak{D}(z)\\\\rangle \
\\n                       &=&  \
\\\\mathfrak{D}(z,2)\\n\\\\label{z1CapitalTheta}\\n\>\""}]], "Input"],

Cell[BoxData["\<\"                 -\\\\langle \\\\Theta \
,\\\\mathfrak{D}(z)\\\\rangle \\n                       &=&  \
\\\\mathfrak{D}(z,2)\\n\\\\label{z1CapitalTheta}\\n\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"i3", " ", "=", " ", "\"\<                          \>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "s4", "=", 
   "\"\<                 -\\\\langle \\\\Theta ,\\\\mathfrak{D}(z)\\\\rangle \
\\n                       &=&  \
\\\\mathfrak{D}(z,2)\\n\\\\label{z1CapitalTheta}\\n\>\""}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"\"\<x\>\"", "<>", 
  RowBox[{"StringReplace", "[", 
   RowBox[{"s4", ",", " ", 
    RowBox[{
     RowBox[{"y_", "~~", "\"\<-\>\""}], " ", "\[RuleDelayed]", " ", 
     RowBox[{"y", "<>", "\"\<\\n\>\"", "<>", "i3", "<>", "\"\<-  \>\""}]}]}], 
   "]"}], "<>", "\"\<x\>\""}]}], "Input"],

Cell[BoxData["\<\"x                 \\n                          -  \
\\\\langle \\\\Theta ,\\\\mathfrak{D}(z)\\\\rangle \\\\n                      \
 &=&  \\\\mathfrak{D}(z,2)\\\\n\\\\label{z1CapitalTheta}\\\\nx\"\>"], "Output"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["To do", "Subsubsection"],

Cell[TextData[{
 "\nI think  //label  is never useful. Anything labelled should be done via  \
Eqn[label] =  ... .   It is too easy to use  //label  on an eqn and it should\
\nonly be used on expressions.  Could have   Exn[ label ] = ....  ??   \nThe  \
//label  code should be removed.\n\nShould allow for    a == b == c     ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "ed  in one line.\nAlso for     a == b ,    c == d              ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "ed  in one line.\n\nPunctuation for eqns can and should be automatic.\n\n// \
TeXit  is almost never useful.  And it returns Null.  Probably get rid of \
that too, provided the Eqn package is included or available.\n\nNeed a switch \
to turn on/off  tex output, so as to be able to exclude sections from a draft \
PDF to get a final PDF.  Eg. sections that have\nextra info, but are not \
necessary for a final paper:\n        StopTeXFileOutput[ ]\n        \
StartTeXFileOutput[ ]\nOtherwise, no diff as far as the notbook contents. Ie, \
still have background color, hidden left etc.      \n\nLet an    Eqn[ ] =  a \
== b    be executed and a tex-output cell generated. Now edit the input to \
just  a == b  (without \[OpenCurlyDoubleQuote]Eqn[ \
]=\[CloseCurlyDoubleQuote])  and re-execute.\nThe output cell should be an \
ordinary output cell but is still gray-ed out as a tex-output cell (no tex is \
generated).  The cell should be deleted\nor the background re-set to that of \
a normal output cell. \n\nReTeXit[ ]   takes a bit less than 1/2 the time \
than a full run, so it needs to be fixed.\nThere is no output except for \
//noleft,  which I suppose is done from $Pre.\nAll output should be via ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "it[ ], not via $Pre.  Passing  HiddenLeftEqn == ...   to ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "it[ ]  is dumb and it breaks the transparency of ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "it[ ].  \nNeed an option  NoLeft \[Rule] True. \nOpening and Closing the \
file on each write might take time?\n10 times slower but still no time....\n"
}], "Text"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$realtime", "=", 
   RowBox[{"SessionTime", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"OpenAppend", "[", "\"\<junknumbers\>\"", "]"}], ";", "\n", 
     "     ", 
     RowBox[{"WriteString", "[", 
      RowBox[{"\"\<junknumbers\>\"", ",", 
       RowBox[{
        RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<\\n\>\""}]}], "]"}], 
     ";", "\n", "     ", 
     RowBox[{"Close", "[", "\"\<junknumbers\>\"", "]"}]}], ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{
  RowBox[{"SessionTime", "[", "]"}], "-", "$realtime"}]}], "Input"],

Cell[BoxData["0.038784`4.739167595982167"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$realtime", "=", 
   RowBox[{"SessionTime", "[", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"OpenAppend", "[", "\"\<junknumbers\>\"", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Do", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"\"\<junknumbers\>\"", ",", 
      RowBox[{
       RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<\\n\>\""}]}], "]"}], 
    "\n", "    ", ",", " ", 
    RowBox[{"{", 
     RowBox[{"n", ",", "1", ",", "1000"}], "}"}]}], "]"}], ";"}], "\n", 
 RowBox[{" ", 
  RowBox[{"Close", "[", "\"\<junknumbers\>\"", "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SessionTime", "[", "]"}], "-", "$realtime"}]}], "Input"],

Cell[BoxData["\<\"junknumbers\"\>"], "Output"],

Cell[BoxData["0.004098`3.7630869518971704"], "Output"]
}, Open  ]],

Cell["\<\
....so what saves the time is not running pdflatex.  The factor 2 means that \
it takes about the same time to pdflatex the fragment and also the body 
for each expression as it does to compute each expression (i.e., tpTensor is \
slow).
 -----------------------------------------------------------------------------\
------------------------------------------------------------------------------\
\>", "Text"]
}, Closed]],

Cell[TextData[{
 "\nThe variable  $LastType   is used when combining succesive eqns into an \
eqnarray.  It is the type of the last thing that was  ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "ed,  and it has \nthe value  \[OpenCurlyDoubleQuote]text\
\[CloseCurlyDoubleQuote] or \[OpenCurlyDoubleQuote]math\
\[CloseCurlyDoubleQuote].  The  ValueQ  test here is in case this package has \
been reloaded with Get (without ClearTeX) and the $LastType was \
\[OpenCurlyDoubleQuote]math\[CloseCurlyDoubleQuote],\nin which case it should \
stay as \[OpenCurlyDoubleQuote]math\[CloseCurlyDoubleQuote],"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ValueQ", "[", "$LastType", "]"}]}], ",", 
    RowBox[{"$LastType", "=", "\"\<text\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell["s, s0, s1, s2, s3, s4, s5, s6, s7,", "Text"],

Cell["\<\
Re. StringReplace items in the following code:  
        The  y_~~\[CloseCurlyDoubleQuote]=\[CloseCurlyDoubleQuote]  is to \
avoid a blank line (extra \\n)   for  //noleft  (i.e., a leading \
\[OpenCurlyDoubleQuote]=\[CloseCurlyDoubleQuote]).
        The  y_~~\[CloseCurlyDoubleQuote]-\[CloseCurlyDoubleQuote]   is to \
avoid a blank line (extra \\n)   in the case that  LEqn starts with a leading \
 \[OpenCurlyDoubleQuote]-\[CloseCurlyDoubleQuote].
        The replacement  s5 \[Rule] s6   (\\n\\n \[Rule]\\n)   should never \
be needed.  
        The in-line math replacement  (*  \[Beta]  *)  \[Rule]  $ \\beta $    \
 is very fragile and should not be routinely used.  Write proper in-line math \
LaTex using   $ ... $ .
        The curly quote replacements are for some fonts like Utopia that try \
to be too smart  (I don\[CloseCurlyQuote]t think Courier would need it).\
\>", "Text"],

Cell[BoxData[""], "Input"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeXit", "[", 
   RowBox[{"x0_", ",", " ", "lab_String"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{
     "x", ",", " ", "s", ",", " ", "s0", ",", " ", "s1", ",", " ", "s2", ",", 
      " ", "s3", ",", " ", "s4", ",", " ", "s5", ",", " ", "s6", ",", " ", 
      "s7", ",", " ", "f", ",", " ", "r", ",", " ", "n", ",", " ", "i1", ",", 
      " ", "i2", ",", " ", "i3", ",", " ", "type", ",", " ", "last0", ",", 
      " ", "first0", ",", " ", "last", ",", " ", "first"}], "}"}], ",", "\n", 
    "    ", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"x0", "===", "Null"}], ",", " ", 
       RowBox[{"x", "=", "\"\<\>\""}], ",", " ", 
       RowBox[{"x", "=", "x0"}]}], "]"}], ";", "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "x", "]"}], "===", " ", "String"}], ",", 
       RowBox[{"type", "=", "\"\<text\>\""}], ",", 
       RowBox[{"type", "=", "\"\<math\>\""}]}], "]"}], ";", "\n", "    ", 
     RowBox[{"i1", " ", "=", " ", "\"\<                 \>\""}], ";", " ", 
     "\n", "    ", 
     RowBox[{"i2", " ", "=", " ", "\"\<                        \>\""}], ";", 
     "\n", "    ", 
     RowBox[{"i3", " ", "=", " ", "\"\<                          \>\""}], ";",
      "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"type", "===", "\"\<math\>\""}], ",", "\n", "        ", 
       RowBox[{
        RowBox[{"s0", " ", "=", " ", 
         RowBox[{"FixAbsBug", "[", 
          RowBox[{"ToString", "[", 
           RowBox[{"TeXForm", "[", "x", "]"}], "]"}], "]"}]}], ";", "\n", 
        "        ", 
        RowBox[{"s1", " ", "=", " ", 
         RowBox[{"StringTrim", "[", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"s0", ",", " ", 
            RowBox[{
            "\"\<\\\\text{HiddenLeftEqn}\>\"", " ", "\[Rule]", " ", 
             "\"\<\>\""}]}], "]"}], "]"}]}], ";", "\n", "        ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{
           RowBox[{"lab", "===", "\"\<\>\""}], " ", "||", " ", 
           RowBox[{"lab", "===", "$nonumber"}]}], ",", "\n", "            ", 
          RowBox[{"s2", " ", "=", " ", 
           RowBox[{"s1", "<>", "\"\<\\n\\\\nonumber\\n\>\""}]}], "\n", 
          "            ", ",", "\n", "            ", 
          RowBox[{"s2", " ", "=", " ", 
           RowBox[{"s1", "<>", "\"\<\\n\\\\label{\>\"", "<>", 
            RowBox[{"CleanLabel", "[", "lab", "]"}], "<>", 
            "\"\<}\\n\>\""}]}]}], "\n", "        ", "]"}], ";", "\n", 
        "        ", 
        RowBox[{"s3", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s2", ",", " ", 
           RowBox[{"\"\<=\>\"", " ", "\[Rule]", " ", "\"\<&=&\>\""}]}], 
          "]"}]}], ";", "\n", "        ", 
        RowBox[{"s4", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s3", ",", " ", 
           RowBox[{
            RowBox[{"y_", "~~", "\"\<&=&\>\""}], " ", "\[RuleDelayed]", " ", 
            RowBox[{
            "y", "<>", "\"\<\\n\>\"", "<>", "i2", "<>", "\"\<&=&  \>\""}]}]}],
           "]"}]}], ";", "\n", "        ", 
        RowBox[{"s5", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s4", ",", " ", 
           RowBox[{"\"\<+\>\"", " ", "\[Rule]", " ", 
            RowBox[{"\"\<\\n\>\"", "<>", "i3", "<>", "\"\<+  \>\""}]}]}], 
          "]"}]}], ";", "\n", "        ", 
        RowBox[{"s6", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s5", ",", " ", 
           RowBox[{
            RowBox[{"y_", "~~", "\"\<-\>\""}], " ", "\[RuleDelayed]", " ", 
            RowBox[{
            "y", "<>", "\"\<\\n\>\"", "<>", "i3", "<>", "\"\<-  \>\""}]}]}], 
          "]"}]}], ";", "\n", "        ", 
        RowBox[{"s7", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s6", ",", 
           RowBox[{
            RowBox[{"\"\<\\n\>\"", "~~", 
             RowBox[{"\"\< \>\"", "..."}], "~~", "\"\<\\n\>\""}], "\[Rule]", 
            "\"\<\\n\>\""}]}], "]"}]}], ";", "\n", "        ", 
        RowBox[{"s", "  ", "=", " ", 
         RowBox[{"i1", "<>", 
          RowBox[{"StringReplace", "[", 
           RowBox[{"s7", ",", " ", "$TeXReplacements"}], "]"}]}]}]}], "\n", 
       "        ", ",", "\n", "        ", 
       RowBox[{
        RowBox[{"s0", " ", "=", " ", 
         RowBox[{"x", "<>", "\"\<\\n\>\""}]}], ";", "\n", "        ", 
        RowBox[{"s1", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s0", ",", " ", 
           RowBox[{
            RowBox[{"\"\<(*\>\"", "~~", 
             RowBox[{"Shortest", "[", "y__", "]"}], "~~", "\"\<*)\>\""}], " ",
             "\[RuleDelayed]", " ", 
            RowBox[{"\"\<$\>\"", "<>", 
             RowBox[{"ToString", "[", 
              RowBox[{"TeXForm", "[", 
               RowBox[{"ToExpression", "[", 
                RowBox[{"y", ",", "StandardForm", ",", "HoldForm"}], "]"}], 
               "]"}], "]"}], "<>", "\"\<$\>\""}]}]}], "]"}]}], ";", "\n", 
        "        ", 
        RowBox[{"s2", " ", "=", " ", 
         RowBox[{"CleanRefs", "[", "s1", "]"}]}], ";", "\n", "        ", 
        RowBox[{"s3", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s2", ",", " ", 
           RowBox[{"{", 
            RowBox[{
             RowBox[{
             "\"\<\\\\[CloseCurlyQuote]\>\"", " ", "\[Rule]", " ", 
              "\"\<'\>\""}], ",", " ", 
             RowBox[{
             "\"\<\\\\[OpenCurlyQuote]\>\"", " ", "\[Rule]", " ", 
              "\"\<'\>\""}], ",", " ", "\n", 
             "                                ", 
             RowBox[{
             "\"\<\\\\[CloseCurlyDoubleQuote]\>\"", " ", "\[Rule]", " ", 
              "\"\<''\>\""}], ",", " ", 
             RowBox[{
             "\"\<\\\\[OpenCurlyDoubleQuote]\>\"", " ", "\[Rule]", " ", 
              "\"\<``\>\""}]}], "}"}]}], "]"}]}], ";", "\n", "        ", 
        RowBox[{"s4", " ", "=", " ", 
         RowBox[{"StringReplace", "[", 
          RowBox[{"s3", ",", " ", "$TeXReplacements"}], "]"}]}], ";", "\n", 
        "        ", 
        RowBox[{"s", "  ", "=", " ", 
         RowBox[{"i1", "<>", "s4"}]}]}]}], "\n", "    ", "]"}], ";", "    ", 
     "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"type", "===", "\"\<text\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"first", "=", "\"\<\>\""}], ";", " ", 
        RowBox[{"last", "=", "\"\<\>\""}]}]}], "]"}], ";", "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"type", "===", "\"\<math\>\""}], ",", " ", 
       RowBox[{
        RowBox[{"first", "=", "\"\<\\\\bea\\n\>\""}], ";", " ", 
        RowBox[{"last", "=", "\"\<\\\\eea\\n\>\""}]}]}], "]"}], ";", "\n", 
     "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"$LastType", " ", "===", "\"\<text\>\""}], " ", "&&", " ", 
        RowBox[{"type", "===", "\"\<text\>\""}]}], ",", " ", 
       RowBox[{"first0", "=", "\"\<\>\""}]}], "]"}], ";", "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"$LastType", " ", "===", "\"\<text\>\""}], " ", "&&", " ", 
        RowBox[{"type", "===", "\"\<math\>\""}]}], ",", " ", 
       RowBox[{"first0", "=", "\"\<\\\\bea\\n\>\""}]}], "]"}], ";", "\n", 
     "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"$LastType", " ", "===", "\"\<math\>\""}], " ", "&&", " ", 
        RowBox[{"type", "===", "\"\<text\>\""}]}], ",", " ", 
       RowBox[{"first0", "=", "\"\<\\\\eea\\n\>\""}]}], "]"}], ";", "\n", 
     "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"$LastType", " ", "===", "\"\<math\>\""}], " ", "&&", " ", 
        RowBox[{"type", "===", "\"\<math\>\""}]}], ",", " ", 
       RowBox[{"first0", "=", "\"\<\\\\\\\\[4pt]\\n\>\""}]}], "]"}], ";", 
     "\n", "    ", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"TrueQ", "[", "$pdflatexLater", "]"}], ",", "\n", "        ", 
       RowBox[{
        RowBox[{"OpenAppend", "[", "$TeXitBody0", "]"}], ";", "\n", 
        "        ", 
        RowBox[{"WriteString", "[", 
         RowBox[{"$TeXitBody0", ",", 
          RowBox[{"first0", "<>", "s"}]}], "]"}], ";", "\n", "        ", 
        RowBox[{"Close", "[", "$TeXitBody0", "]"}], ";", "\n", "        ", 
        RowBox[{"$LastType", " ", "=", " ", "type"}], ";"}], "\n", "        ",
        ",", "\n", "        ", 
       RowBox[{
        RowBox[{"WriteString", "[", 
         RowBox[{"$TeXitFragment", ",", 
          RowBox[{"first", "<>", "s", "<>", "last"}]}], "]"}], ";", "\n", 
        "        ", 
        RowBox[{"Close", "[", "$TeXitFragment", "]"}], ";", "\n", "        ", 
        
        RowBox[{"Quiet", "[", 
         RowBox[{"DeleteFile", "[", 
          RowBox[{"FileNameJoin", "[", 
           RowBox[{"{", 
            RowBox[{"$TeXitDir", ",", "\"\<main-fragment.aux\>\""}], "}"}], 
           "]"}], "]"}], "]"}], ";", "\n", "        ", 
        RowBox[{"Run", "[", 
         RowBox[{
         "\"\<cd \>\"", "<>", "$TeXitDir", "<>", "\"\<; \>\"", " ", "<>", 
          "$TeXCommand", "<>", "\"\< -draftmode main-fragment.tex > \>\"", "<>",
           "$TeXStdOut"}], "]"}], ";", "\n", "        ", 
        RowBox[{"r", " ", "=", " ", 
         RowBox[{"ReadFile", "[", "$TeXStdOut", "]"}]}], ";", "\n", 
        "        ", 
        RowBox[{"n", " ", "=", " ", 
         RowBox[{"StringPosition", "[", 
          RowBox[{"r", ",", "\"\<!\>\""}], "]"}]}], ";", "\n", "        ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"!", 
           RowBox[{"n", "===", 
            RowBox[{"{", "}"}]}]}], ",", " ", 
          RowBox[{"$TeXErrors", " ", "=", " ", 
           RowBox[{"StringDrop", "[", 
            RowBox[{"r", ",", " ", 
             RowBox[{
              RowBox[{"First", "[", 
               RowBox[{"First", "[", "n", "]"}], "]"}], "-", "1"}]}], "]"}]}],
           ",", " ", 
          RowBox[{"$TeXErrors", "=", "\"\<\>\""}]}], "]"}], ";", "\n", 
        "        ", 
        RowBox[{"If", "[", 
         RowBox[{
          RowBox[{"$TeXErrors", "===", "\"\<\>\""}], ",", "            ", 
          "\n", "            ", 
          RowBox[{
           RowBox[{"OpenAppend", "[", "$TeXitBody0", "]"}], ";", "\n", 
           "            ", 
           RowBox[{"WriteString", "[", 
            RowBox[{"$TeXitBody0", ",", 
             RowBox[{"first0", "<>", "s"}]}], "]"}], ";", "\n", 
           "            ", 
           RowBox[{"Close", "[", "$TeXitBody0", "]"}], ";", "\n", 
           "            ", 
           RowBox[{"Quiet", "[", 
            RowBox[{"DeleteFile", "[", "$TeXitBody", "]"}], "]"}], ";", "\n", 
           "            ", 
           RowBox[{"CopyFile", "[", 
            RowBox[{"$TeXitBody0", ",", "$TeXitBody"}], "]"}], ";", "\n", 
           "            ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"last", "===", "\"\<\>\""}]}], ",", "\n", 
             "                ", 
             RowBox[{
              RowBox[{"OpenAppend", "[", "$TeXitBody", "]"}], ";", "\n", 
              "                ", 
              RowBox[{"WriteString", "[", 
               RowBox[{"$TeXitBody", ",", "last"}], "]"}], ";", "\n", 
              "                ", 
              RowBox[{"Close", "[", "$TeXitBody", "]"}]}]}], "\n", 
            "            ", "]"}], ";", "    ", "\n", "            ", 
           RowBox[{"$LastType", " ", "=", " ", "type"}], ";", "\n", 
           "            ", 
           RowBox[{"Run", "[", 
            RowBox[{
            "\"\<cd \>\"", "<>", "$TeXitDir", "<>", "\"\<; \>\"", " ", "<>", 
             "$TeXCommand", "<>", "\"\< main.tex > \>\"", "<>", 
             "$TeXStdOut"}], "]"}], ";", "\n", "            ", 
           RowBox[{"r", " ", "=", " ", 
            RowBox[{"ReadFile", "[", "$TeXStdOut", "]"}]}], ";", "\n", 
           "            ", 
           RowBox[{"n", " ", "=", " ", 
            RowBox[{"StringPosition", "[", 
             RowBox[{"r", ",", "\"\<!\>\""}], "]"}]}], ";", "\n", 
           "            ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"n", "===", 
               RowBox[{"{", "}"}]}]}], ",", " ", 
             RowBox[{"$TeXErrors", " ", "=", " ", 
              RowBox[{"StringDrop", "[", 
               RowBox[{"r", ",", " ", 
                RowBox[{
                 RowBox[{"First", "[", 
                  RowBox[{"First", "[", "n", "]"}], "]"}], "-", "1"}]}], 
               "]"}]}], ",", " ", 
             RowBox[{"$TeXErrors", "=", "\"\<\>\""}]}], "]"}], ";", "\n", 
           "            ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{"!", 
              RowBox[{"$TeXErrors", "===", "\"\<\>\""}]}], ",", "\n", 
             "                ", 
             RowBox[{
              RowBox[{
              "Print", "[", 
               "\"\<TeXit: How here? Fragment was OK. Better do \\\"pdflatex \
main.tex\\\" by hand to see\>\"", "]"}], ";", "\n", "                ", 
              RowBox[{
              "Print", "[", 
               "\"\<what happened and then fix up body.tex to get it going \
again.\>\"", "]"}], ";", "\n", "                ", 
              RowBox[{"Print", "[", 
               RowBox[{"\"\<Try deleting file \>\"", "<>", 
                RowBox[{"FileNameJoin", "[", 
                 RowBox[{"{", 
                  RowBox[{"$TeXitDir", ",", "\"\<main.aux\>\""}], "}"}], 
                 "]"}], "<>", "\"\<\[VeryThinSpace].\>\""}], "]"}], ";", "\n",
               "                ", 
              RowBox[{
              "Print", "[", 
               "\"\<Alternatively, use ClearTeX[ ] to delete all tex files \
and start again.\>\"", "]"}], ";", "\n", "                ", 
              RowBox[{"Print", "[", 
               RowBox[{"Style", "[", 
                RowBox[{"$TeXErrors", ",", 
                 RowBox[{"RGBColor", "[", 
                  RowBox[{
                   RowBox[{"{", 
                    RowBox[{"220", ",", "0", ",", "0"}], "}"}], "/", "255."}],
                   "]"}]}], "]"}], "]"}], ";", "\n", "                ", 
              RowBox[{"Abort", "[", "]"}]}]}], "\n", "            ", "]"}], 
           ";", "\n", "            ", 
           RowBox[{"If", "[", 
            RowBox[{
             RowBox[{
              RowBox[{"x0", "===", "Null"}], "||", " ", 
              RowBox[{
               RowBox[{"Head", "[", "x", "]"}], "===", "String"}], " ", "||", 
              " ", 
              RowBox[{"(", 
               RowBox[{
                RowBox[{
                 RowBox[{"Head", "[", "x", "]"}], "===", "Equal"}], " ", "&&",
                 " ", 
                RowBox[{
                 RowBox[{"LEqn", "[", "x", "]"}], "===", "HiddenLeftEqn"}]}], 
               ")"}]}], ",", " ", "\n", "                ", "Null", "\n", 
             "                ", ",", " ", "\n", "                ", 
             RowBox[{"x", " ", "//", " ", "TeXitBackground"}]}], "\n", 
            "            ", "]"}]}], "\n", "            ", ",", "\n", 
          "            ", 
          RowBox[{
           RowBox[{"Print", "[", 
            RowBox[{"Style", "[", 
             RowBox[{"$TeXErrors", ",", 
              RowBox[{"RGBColor", "[", 
               RowBox[{
                RowBox[{"{", 
                 RowBox[{"220", ",", "0", ",", "0"}], "}"}], "/", "255."}], 
               "]"}]}], "]"}], "]"}], ";", "\n", "            ", "x"}]}], 
         "\n", "        ", "]"}]}]}], "\n", "    ", "]"}]}]}], "\n", 
   "]"}]}]], "Code",
 InitializationCell->True],

Cell["\<\
.... x  is returned as the value so that  TeXit  is transparent and can be \
used as  // TeXit. \
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["Create file  main.tex", "Subsection",
 CellChangeTimes->{{3.681163255251027*^9, 3.681163273922697*^9}, 
   3.681169212248848*^9, {3.68119200276239*^9, 3.6811920123623333`*^9}, {
   3.6817078256510763`*^9, 3.6817078354592*^9}, {3.681728163418354*^9, 
   3.681728181178214*^9}, {3.682913999643223*^9, 3.68291403164283*^9}}],

Cell["\<\
Make sure we have a main.tex.  Recreate it in case someone has tried to edit \
it,\
\>", "Text",
 CellChangeTimes->{{3.6817077793154163`*^9, 3.6817077898917027`*^9}, {
  3.6817078567225437`*^9, 3.681707891186481*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
   "$TeXitMainString", " ", "=", 
    "\"\<\n%\n%  Any changes to this file will be lost.\n%  This file is \
recreated when the TeXit package is loaded.\n%\n\\\\input preamble\n\\\\input \
body.tex\n\\\\  % in case body is empty.\n\\\\input postamble\n\>\""}], 
   ";"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData["$TeXitMainString"], "Input",
 CellChangeTimes->{{3.681708405148129*^9, 3.681708405500154*^9}, {
  3.682913940636219*^9, 3.682913942900608*^9}}],

Cell[BoxData["\<\"\\n%\\n%  Any changes to this file will be lost.\\n%  This \
file is recreated when the TeXit package is loaded.\\n%\\n\\\\input \
preamble\\n\\\\input body.tex\\n\\\\input postamble\\n\"\>"], "Output",
 CellChangeTimes->{3.681708006748942*^9, 3.681708224602022*^9, 
  3.681708409815542*^9, 3.68187873928319*^9, 3.682837879452932*^9, 
  3.682913948023404*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TeXitMain", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TeXitDir", ",", "\"\<main.tex\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6817080646232357`*^9, 3.68170813884737*^9}, 
   3.6817082021270313`*^9, {3.682913951003973*^9, 3.682913951532794*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"FileExistsQ", "[", "$TeXitMain", "]"}], ",", 
    RowBox[{"DeleteFile", "[", "$TeXitMain", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"$TeXitMain", ",", "$TeXitMainString"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "$TeXitMain", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681275396066607*^9, 3.681275399474545*^9}, {
   3.681275439699279*^9, 3.681275508945127*^9}, {3.6812755449040413`*^9, 
   3.681275594080209*^9}, {3.681275822884886*^9, 3.68127585353295*^9}, {
   3.6815354227058773`*^9, 3.681535425889748*^9}, 3.681535560141287*^9, {
   3.681648389286455*^9, 3.6816483903103533`*^9}, {3.681648488117292*^9, 
   3.6816484893413477`*^9}, 3.681648675827608*^9, 3.6816487542274923`*^9, {
   3.681651356108232*^9, 3.6816513797422667`*^9}, {3.681651739619269*^9, 
   3.681651748715231*^9}, 3.681685798779654*^9, {3.681685893818371*^9, 
   3.681685977849387*^9}, {3.681708259262054*^9, 3.68170826228084*^9}, {
   3.6817083649726267`*^9, 3.681708420299919*^9}, {3.6829139639968243`*^9, 
   3.682913982075713*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Create file  main-fragment.tex", "Subsection",
 CellChangeTimes->{{3.681163255251027*^9, 3.681163273922697*^9}, 
   3.681169212248848*^9, {3.68119200276239*^9, 3.6811920123623333`*^9}, {
   3.6817078256510763`*^9, 3.6817078354592*^9}, {3.681728163418354*^9, 
   3.681728181178214*^9}, {3.6829131947892036`*^9, 3.682913196917943*^9}, {
   3.682914025530818*^9, 3.682914027338861*^9}, {3.6829227116773367`*^9, 
   3.68292271284533*^9}}],

Cell[TextData[{
 "To check for ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " errors in the user input, we shall run pdflatex on the fragment being \
input before adding the fragment to body.tex and ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 "ing  the whole document.\nThis section is just a copy of the section for \
main.tex with a few name changes."
}], "Text",
 CellChangeTimes->{{3.6817077793154163`*^9, 3.6817077898917027`*^9}, {
   3.6817078567225437`*^9, 3.681707891186481*^9}, {3.682913203701192*^9, 
   3.6829133400355463`*^9}, 3.682914048298841*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
  "$TeXitFrag", " ", "=", 
   "\"\<\n%  This file is recreated when the TeXit package is loaded.\n\
\\\\input preamble\n\\\\input fragment.tex\n\\\\  % in case fragment is \
empty.\n\\\\input postamble\n\>\""}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData["$TeXitFrag"], "Input",
 CellChangeTimes->{{3.681708405148129*^9, 3.681708405500154*^9}, {
  3.6829133999069347`*^9, 3.6829134037875357`*^9}, {3.682913785869933*^9, 
  3.6829137863267393`*^9}}],

Cell[BoxData["\<\"\\n%  This file is recreated when the TeXit package is \
loaded.\\n\\\\input preamble\\n\\\\input fragment.tex\\n\\\\input \
postamble\\n\"\>"], "Output",
 CellChangeTimes->{3.681708006748942*^9, 3.681708224602022*^9, 
  3.681708409815542*^9, 3.68187873928319*^9, 3.682837879452932*^9, 
  3.6829134052623367`*^9, 3.682913791339099*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TeXitMainFragment", " ", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TeXitDir", ",", "\"\<main-fragment.tex\>\""}], "}"}], "]"}]}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6817080646232357`*^9, 3.68170813884737*^9}, 
   3.6817082021270313`*^9, {3.68291343929876*^9, 3.682913450290329*^9}, {
   3.682913798286315*^9, 3.682913798797881*^9}, {3.682922750989094*^9, 
   3.682922760797187*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"FileExistsQ", "[", "$TeXitMainFragment", "]"}], ",", 
    RowBox[{"DeleteFile", "[", "$TeXitMainFragment", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"$TeXitMainFragment", ",", "$TeXitFrag"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "$TeXitMainFragment", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681275396066607*^9, 3.681275399474545*^9}, {
   3.681275439699279*^9, 3.681275508945127*^9}, {3.6812755449040413`*^9, 
   3.681275594080209*^9}, {3.681275822884886*^9, 3.68127585353295*^9}, {
   3.6815354227058773`*^9, 3.681535425889748*^9}, 3.681535560141287*^9, {
   3.681648389286455*^9, 3.6816483903103533`*^9}, {3.681648488117292*^9, 
   3.6816484893413477`*^9}, 3.681648675827608*^9, 3.6816487542274923`*^9, {
   3.681651356108232*^9, 3.6816513797422667`*^9}, {3.681651739619269*^9, 
   3.681651748715231*^9}, 3.681685798779654*^9, {3.681685893818371*^9, 
   3.681685977849387*^9}, {3.681708259262054*^9, 3.68170826228084*^9}, {
   3.6817083649726267`*^9, 3.681708420299919*^9}, {3.682913464258091*^9, 
   3.682913499457746*^9}, {3.68291407305075*^9, 3.682914091090707*^9}, {
   3.682922772893483*^9, 3.682922783484593*^9}, {3.682922826588146*^9, 
   3.682922833348752*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["PDFviewer[ ]", "Subsection",
 CellChangeTimes->{{3.681163255251027*^9, 3.681163273922697*^9}, 
   3.681169212248848*^9, {3.68119200276239*^9, 3.6811920123623333`*^9}, {
   3.6828888138615913`*^9, 3.682888815395369*^9}}],

Cell["\<\
This is for the user to temporarily specify a preferred viewer command.
Would like it to edit the users  init.m,  ie., put it there or change it.\
\>", "Text",
 CellChangeTimes->{{3.681705433552051*^9, 3.681705451920085*^9}, {
  3.68187589600243*^9, 3.681875934330167*^9}, {3.6819354622790937`*^9, 
  3.681935505774362*^9}, {3.681935547382132*^9, 3.681935550581992*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PDFViewer", "[", "cmd_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"r", ",", "viewer"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"viewer", "=", 
      RowBox[{"First", "[", 
       RowBox[{"StringSplit", "[", "cmd", "]"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"r", "=", 
      RowBox[{"RunProcess", "[", 
       RowBox[{"{", 
        RowBox[{"\"\<which\>\"", ",", " ", "viewer"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{
         RowBox[{"r", "[", "\"\<ExitCode\>\"", "]"}], "===", "0"}]}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"Print", "[", 
        RowBox[{
        "\"\<PDFViewer[\\\"\>\"", "<>", "viewer", "<>", "\"\<\\\"] :\>\"", 
         "<>", "\"\<   Command \\\"\>\"", "<>", "viewer", "<>", 
         "\"\<\\\" not found.\>\""}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"$PDFViewer", "=", "cmd"}]}], "]"}]}]}], "\[IndentingNewLine]",
    "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681157609086282*^9, 3.6811576319819508`*^9}, {
   3.68115766201442*^9, 3.681157693742378*^9}, {3.68115803346484*^9, 
   3.681158076615646*^9}, {3.681158320452614*^9, 3.6811583300366373`*^9}, {
   3.681158506514121*^9, 3.681158515112054*^9}, {3.681160029485859*^9, 
   3.681160231146901*^9}, 3.6811602669386063`*^9, {3.6811603361865797`*^9, 
   3.681160384169043*^9}, {3.6811604200745583`*^9, 3.681160429672641*^9}, {
   3.681160477639879*^9, 3.6811605196240177`*^9}, {3.681160575526683*^9, 
   3.681160625205554*^9}, {3.681160683860718*^9, 3.6811607044207163`*^9}, {
   3.68116074523623*^9, 3.681160880082325*^9}, {3.6811609356817703`*^9, 
   3.681160937201605*^9}, 3.681161184192713*^9, {3.681162368687189*^9, 
   3.6811623750226727`*^9}, {3.6817055181595993`*^9, 3.681705520271719*^9}, {
   3.681705561870956*^9, 3.681705564575234*^9}, {3.68187213676939*^9, 
   3.68187219246456*^9}, {3.681872229152154*^9, 3.681872247760029*^9}, 
   3.681875892162919*^9, {3.681876419353513*^9, 3.681876428093542*^9}, {
   3.681927848336891*^9, 3.681927865904564*^9}, {3.6819279045917473`*^9, 
   3.681927944655179*^9}, {3.681928012606324*^9, 3.681928036814165*^9}, {
   3.681935910913598*^9, 3.681935953328961*^9}, {3.681936024928256*^9, 
   3.681936045968019*^9}, {3.681936082559411*^9, 3.6819361092954693`*^9}, 
   3.681936345164154*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDFViewer", "[", "\"\<fred\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.68192802105409*^9, 3.681928025982094*^9}}],

Cell[BoxData["\<\"PDFViewer[\\\"fred\\\"] :   Command \\\"fred\\\" not found.\
\"\>"], "Print",
 CellChangeTimes->{{3.681928027421471*^9, 3.681928039700325*^9}, 
   3.682837982901218*^9}]
}, Open  ]],

Cell["If called with no argument it starts the viewer,", "Text",
 CellChangeTimes->{{3.681121909944043*^9, 3.6811219900551662`*^9}, {
  3.681162715498612*^9, 3.681162735033597*^9}, {3.6818759447058773`*^9, 
  3.681876033508494*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PDFViewer", "[", "]"}], ":=", 
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ValueQ", "[", "$PDFViewer", "]"}]}], ",", "\[IndentingNewLine]", 
    RowBox[{
    "Print", "[", 
     "\"\<ValueQ[$PDFViewer] is False. Use ?\[VeryThinSpace]PDFViewer to see \
the relevent documentation.\\n\>\"", "]"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"KillProcess", "[", "$PDFViewerProcess", "]"}], ";", 
     RowBox[{"$PDFViewerProcess", "=", 
      RowBox[{"StartProcess", "[", 
       RowBox[{"Append", "[", 
        RowBox[{
         RowBox[{"StringSplit", "[", "$PDFViewer", "]"}], ",", 
         RowBox[{"FileNameJoin", "[", 
          RowBox[{"{", 
           RowBox[{"$TeXitDir", ",", "\"\</main.pdf\>\""}], "}"}], "]"}]}], 
        "]"}], "]"}]}]}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["If no process defined, then this does nothing,", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"KillProcess", "[", "$PDFViewerProcess", "]"}]], "Input"],

Cell[BoxData[
 RowBox[{"KillProcess", "[", "$PDFViewerProcess", "]"}]], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDFViewer", "[", "]"}]], "Input"],

Cell[BoxData["\<\"ValueQ[$PDFViewer] is False. Use ?\[VeryThinSpace]PDFViewer \
to see the relevent documentation.\\n\"\>"], "Print",
 CellChangeTimes->{
  3.681928889110868*^9, {3.68192894778657*^9, 3.6819289674463253`*^9}, 
   3.681929162262841*^9, 3.681929252388033*^9, 3.6828379968681297`*^9}]
}, Open  ]],

Cell["\<\
 ....  Run[ ]  is blocking, so without the \[OpenCurlyDoubleQuote]&\
\[CloseCurlyDoubleQuote] , PDFViewer[ ]  does not finish until the PDF viewer \
is closed.   \
\>", "Text"],

Cell["\<\
The advertised defaults for  $PDFViewer  if no value has been set in  init.m \
.  The first available in the list will be used.  
For custom window titles, you may be able call a shell script that makes use \
of linux package wmctrl ?\
\>", "Text",
 CellChangeTimes->{{3.681162832968326*^9, 3.681162861464216*^9}, {
   3.6817057392283773`*^9, 3.681705744412511*^9}, {3.681734745285214*^9, 
   3.6817347473483152`*^9}, {3.681876232046949*^9, 3.6818762830865183`*^9}, 
   3.6818764391009493`*^9, {3.6818776312488623`*^9, 3.681877633056733*^9}, {
   3.6818780492102613`*^9, 3.681878087737722*^9}, 3.681927780385356*^9, {
   3.68192974579762*^9, 3.681929793092779*^9}, {3.681936597496253*^9, 
   3.681936803749547*^9}}],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"ValueQ", "[", "$PDFViewer", "]"}]}], ",", 
   RowBox[{
    RowBox[{"PDFViewer", "[", 
     RowBox[{"\"\<okular --caption \>\"", "<>", 
      RowBox[{"FileBaseName", "[", 
       RowBox[{"NotebookFileName", "[", "]"}], "]"}]}], "]"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"ValueQ", "[", "$PDFViewer", "]"}]}], ",", 
   RowBox[{
    RowBox[{"PDFViewer", "[", "\"\<evince\>\"", "]"}], ";"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"ValueQ", "[", "$PDFViewer", "]"}]}], ",", 
   RowBox[{
    RowBox[{"PDFViewer", "[", "\"\<acroread\>\"", "]"}], ";"}]}], 
  "]"}]}], "Input",
 InitializationCell->True],

Cell["We shall let the user start the viewer later,", "Text",
 CellChangeTimes->{{3.68283829945347*^9, 3.68283831863736*^9}, {
  3.682874030268485*^9, 3.682874032796253*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{"$PDFViewer", "\[IndentingNewLine]", 
 RowBox[{"PDFViewer", "[", "]"}]}], "Input"],

Cell[BoxData["\<\"okular --caption \\\"TeXit\\\"\"\>"], "Output",
 CellChangeTimes->{
  3.68192980859418*^9, {3.681936192990802*^9, 3.681936247330969*^9}, {
   3.6819363077487593`*^9, 3.681936320576804*^9}, 3.6828382360315866`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClosePDFViewer", "[", "]"}], ":=", 
  RowBox[{"KillProcess", "[", "$PDFViewerProcess", "]"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["PreambleFile[ ],    File:  my_commands.tex", "Subsection"],

Cell["\<\
preamble  and   postamble   are links to the files selected for use.
$Preamble  and   $Postamble  are supposed to be always be in sync with the \
file contents. The safest way to ensure that is to read them each time they \
are used.\
\>", "Text"],

Cell["\<\
Make sure there is always a working preamble that can be used,\
\>", "Text",
 CellChangeTimes->{{3.6816512208450813`*^9, 3.681651276169223*^9}, {
  3.6816861687266283`*^9, 3.681686174230504*^9}}],

Cell["\<\
This strips off the baseurl from the begining of a full path name of a \
directory or file.
We want to have a link to the notebook in the PDF, but don\[CloseCurlyQuote]t \
want it to be ages long,\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"AbbreviatedPath", "[", 
   RowBox[{"f_String", ",", " ", "baseurl_String"}], "]"}], ":=", " ", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"u", ",", "n"}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"n", "=", 
      RowBox[{"StringLength", "[", "baseurl", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"u", " ", "=", " ", 
      RowBox[{"StringTake", "[", 
       RowBox[{"f", ",", "n"}], "]"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"u", "===", "baseurl"}], ",", 
       RowBox[{"StringDrop", "[", 
        RowBox[{"f", ",", "n"}], "]"}], ",", "f"}], "]"}]}]}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
Default value if not set in   init.m   or already defined otherwise,\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ValueQ", "[", "$TeXitBaseurl", "]"}]}], ",", 
    RowBox[{"$TeXitBaseurl", "=", "\"\<\>\""}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbbreviatedPath", "[", 
  RowBox[{
   RowBox[{"NotebookFileName", "[", "]"}], ",", "\"\<\>\""}], "]"}]], "Input"],

Cell[BoxData["\<\"/home/andrewn/Mirror_leo/ahn-scientific/Mathematica/\
Applications/TeXit/0.1.0/TeXit.nb\"\>"], "Output"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"AbbreviatedPath", "[", 
  RowBox[{
   RowBox[{"NotebookFileName", "[", "]"}], ",", 
   "\"\</home/andrewn/Mirror_leo/ahn-scientific/Mathematica\>\""}], 
  "]"}]], "Input"],

Cell[BoxData["\<\"/Applications/TeXit/0.1.0/TeXit.nb\"\>"], "Output"]
}, Open  ]],

Cell["Default title,", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ValueQ", "[", "$TeXitTitle", "]"}]}], ",", 
    RowBox[{"$TeXitTitle", "=", 
     RowBox[{"FileBaseName", "[", 
      RowBox[{"NotebookFileName", "[", "]"}], "]"}]}]}], "]"}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell["Default author, as set in  init.m,", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"!", 
     RowBox[{"ValueQ", "[", "$TeXitAuthor", "]"}]}], ",", 
    RowBox[{"$TeXitAuthor", "=", "$UserName"}]}], "]"}], ";"}]], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell[BoxData["$UserName"], "Input"],

Cell[BoxData["\<\"andrewn\"\>"], "Output"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"InputMyTeXCommands", "[", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "mesg", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"ValueQ", "[", "$MyTeXCommands", "]"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{"!", 
          RowBox[{"FileExistsQ", "[", "$MyTeXCommands", "]"}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{
          RowBox[{"mesg", "=", 
           RowBox[{
           "\"\<%  Variable $MyTeXCommands has been assigned (possibly in \
your init.m file?) but the file does not exist, $MyTeXCommands = \>\"", "<>", 
            "$MyTeXCommands"}]}], ";", "\[IndentingNewLine]", 
          RowBox[{"Print", "[", 
           RowBox[{
           "\"\<TeXit: Variable $MyTeXCommands has been assigned (possibly in \
your init.m file?) but the file does not exist, $MyTeXCommands = \>\"", "<>", 
            "$MyTeXCommands"}], "]"}]}], ",", "\[IndentingNewLine]", 
         RowBox[{"mesg", "=", 
          RowBox[{
          "\"\<\\\\input \\\"\>\"", "<>", "$MyTeXCommands", "<>", 
           "\"\<\\\"\>\""}]}]}], "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{
       "mesg", "=", 
        "\"\<%  Variable $MyTeXCommands has not been assigned.\>\""}]}], " ", 
      "]"}], ";", "\[IndentingNewLine]", "mesg"}]}], "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"$SimpleMyCommands", "[", "]"}], " ", ":=", 
   RowBox[{
   "\"\<\n%\n% This file is where you define the TeX commands to be used in \
this paper (e.g., using \\\\newcommand). \n% If deleted, this file will be \
re-created when TeXit next looks for it. Any edits you make will be\n% \
retained across sessions.\n%\n% If the Mathematica variable $MyTeXCommands is \
a valid filename, then that file will be input here:\n\n\>\"", "<>", 
    RowBox[{"InputMyTeXCommands", "[", "]"}], "<>", 
    "\"\<\n\n% Typical usage would be to assign $MyTeXCommands in your init.m \
file. But only do that if you don't\n% want to bother with editing the copy \
of this file for each new paper. Otherwise you might as well \n% input it \
from here.\n%\n% Files of commands that you regularly use can be input here:\n\
% \\\\input file_name1.tex\n% \\\\input file_name2.tex\n\n% Define any other \
TeX commands for this paper here:\n% \
\\\\newcommand{\\\\MP}{{Mathisson--Papapetrou}} \n\n\>\""}]}], ";"}]], "Input",\

 InitializationCell->True],

Cell["Create file   my_commands.tex   if it does not exist,", "Text"],

Cell[BoxData[
 RowBox[{"$MyCommandsFile", " ", "=", " ", 
  RowBox[{"FileNameJoin", "[", 
   RowBox[{"{", 
    RowBox[{"$TeXitDir", ",", "\"\<my_commands.tex\>\""}], "}"}], 
   "]"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"!", 
    RowBox[{"FileExistsQ", "[", "$MyCommandsFile", "]"}]}], ",", 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"WriteString", "[", 
     RowBox[{"$MyCommandsFile", ",", 
      RowBox[{"$SimpleMyCommands", "[", "]"}]}], "]"}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{"Close", "[", "$MyCommandsFile", "]"}]}]}], "]"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"$SimplePreamble", " ", "=", 
   RowBox[{
   "\"\<\n%\n%  Any changes to this file will be lost.\n%  This file is \
recreated when the TeXit package is loaded.\n%\n%  See:  ? PreambleFile\n%\n\
\\\\documentclass[a4paper,11pt]{article}\n\n\\\\usepackage[top=1.5cm, \
bottom=1.5cm, left=1.5cm, right=1.5cm]{geometry}\n\n\\\\usepackage{amsmath, \
amssymb, graphics, setspace}\n\n\\\\usepackage{tensor}\n\
\\\\usepackage[pdfnewwindow=true]{hyperref}\n\\\\hypersetup{\n     \
pdfnewwindow=true,\n     baseurl=\>\"", "<>", "$TeXitBaseurl", "<>", 
    "\"\<}\n\n% \\\\newcommand{\\\\mathsym}[1]{{}}\n% \
\\\\newcommand{\\\\unicode}[1]{{}}\n% \\\\newcounter{mathematicapage}\n\n% \\\
\\newcommand{\\\\bea}{\\\\begin{eqnarray}}\n% \
\\\\newcommand{\\\\eea}{\\\\end{eqnarray}}\n\n\\\\input \>\"", "<>", 
    "$MyCommandsFile", "<>", "\"\<\n\n\\\\begin{document}\n\>\""}]}], 
  ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"$SimplePreambleFile", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TeXitDir", ",", "\"\<simple_preamble.tex\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681275396066607*^9, 3.681275399474545*^9}, {
   3.681275439699279*^9, 3.681275508945127*^9}, {3.6812755449040413`*^9, 
   3.681275594080209*^9}, {3.681275822884886*^9, 3.68127585353295*^9}, {
   3.6815354227058773`*^9, 3.681535425889748*^9}, 3.681535560141287*^9, {
   3.681648389286455*^9, 3.6816483903103533`*^9}, {3.681648488117292*^9, 
   3.6816484893413477`*^9}, {3.681648625349051*^9, 3.681648641171866*^9}, {
   3.681649756473775*^9, 3.6816497571619596`*^9}, {3.681651353196154*^9, 
   3.6816513735809717`*^9}, {3.6816517085210857`*^9, 3.681651724416893*^9}, 
   3.6817081532792788`*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"FileExistsQ", "[", "$SimplePreambleFile", "]"}], ",", 
    RowBox[{"DeleteFile", "[", "$SimplePreambleFile", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"$SimplePreambleFile", ",", "$SimplePreamble"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "$SimplePreambleFile", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681275396066607*^9, 3.681275399474545*^9}, {
   3.681275439699279*^9, 3.681275508945127*^9}, {3.6812755449040413`*^9, 
   3.681275594080209*^9}, {3.681275822884886*^9, 3.68127585353295*^9}, {
   3.6815354227058773`*^9, 3.681535425889748*^9}, 3.681535560141287*^9, {
   3.681648389286455*^9, 3.6816483903103533`*^9}, {3.681648488117292*^9, 
   3.6816484893413477`*^9}, 3.681648675827608*^9, 3.6816487542274923`*^9, {
   3.681651356108232*^9, 3.6816513797422667`*^9}, {3.681651739619269*^9, 
   3.681651748715231*^9}, 3.681685798779654*^9, {3.681685893818371*^9, 
   3.681685977849387*^9}}],

Cell["\<\
Allow the user to specify use of an existing preamble file from  $TeXitDir   \
by linking to it,  \
\>", "Text",
 CellChangeTimes->{{3.681168951307941*^9, 3.681169021506867*^9}, {
  3.6811690579147987`*^9, 3.681169112986104*^9}, {3.681169947215728*^9, 
  3.681169947720004*^9}, {3.681170112653653*^9, 3.681170164717083*^9}, {
  3.681170773333469*^9, 3.681170773717236*^9}, {3.6811928323355494`*^9, 
  3.68119284263947*^9}, {3.6811928780629587`*^9, 3.6811929335500526`*^9}, {
  3.681275530992713*^9, 3.68127553301657*^9}, {3.6812757792912416`*^9, 
  3.68127578313374*^9}, {3.681275900668477*^9, 3.681275915356175*^9}, {
  3.681649361293132*^9, 3.681649404364768*^9}, {3.6816514717869997`*^9, 
  3.681651500650799*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "PreambleFile", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PreambleFile", "[", "name_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "name"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FileExistsQ", "[", "f", "]"}]}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"\"\<File not found: \>\"", "<>", 
         RowBox[{"ToString", "[", "f", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"$PreambleFile", " ", "=", "f"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Run", "[", 
      RowBox[{
      "\"\<ln -sf \>\"", "<>", "name", "<>", "\"\< \>\"", "<>", "$TeXitDir", 
       "<>", "\"\</preamble\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"$Preamble", "=", 
      RowBox[{"ReadFile", "[", "f", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6811688108619757`*^9, 3.681168850812286*^9}, {
   3.681169192185418*^9, 3.681169192281126*^9}, {3.681169261608653*^9, 
   3.681169262984333*^9}, {3.681169713666832*^9, 3.681169715170788*^9}, {
   3.681169967567889*^9, 3.681169991911395*^9}, {3.6811700305009623`*^9, 
   3.681170088110165*^9}, {3.681170191101108*^9, 3.6811702071966677`*^9}, {
   3.681170260204159*^9, 3.681170471961527*^9}, {3.681170516584956*^9, 
   3.681170529590293*^9}, 3.68117104345861*^9, {3.6811928894230757`*^9, 
   3.6811928955028343`*^9}, 3.6811931540600443`*^9, {3.681275806461845*^9, 
   3.6812758134696093`*^9}, {3.681649278412817*^9, 3.681649286622253*^9}, {
   3.681649547644105*^9, 3.681649604595118*^9}, {3.681649644923128*^9, 
   3.681649655753339*^9}, {3.6816516125864067`*^9, 3.6816516276739273`*^9}, 
   3.6816518444388638`*^9, {3.68165188624582*^9, 3.681651945942775*^9}, {
   3.681652039719702*^9, 3.681652120100978*^9}, {3.681652235092*^9, 
   3.6816522420199966`*^9}, {3.681652402770492*^9, 3.68165242657682*^9}, 
   3.681652669151924*^9, {3.68165333317899*^9, 3.6816533448650227`*^9}, {
   3.681653793559635*^9, 3.681653829431211*^9}, {3.681653916063553*^9, 
   3.681653920406754*^9}}],

Cell["No args returns current value,", "Text",
 CellChangeTimes->{{3.681193008701214*^9, 3.681193022509161*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PreambleFile", "[", "]"}], ":=", "$PreambleFile"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681170851428636*^9, 3.681170866676371*^9}, {
   3.6811709266754723`*^9, 3.681170927731662*^9}, {3.681192978733692*^9, 
   3.681193000253606*^9}, 3.681275949915782*^9, {3.6816522676195593`*^9, 
   3.6816522682115726`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Preamble", "[", "]"}], ":=", 
  RowBox[{"$Preamble", "=", 
   RowBox[{"ReadFile", "[", 
    RowBox[{"PreambleFile", "[", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.68165012589495*^9, 3.681650150240859*^9}, {
  3.681652280083405*^9, 3.681652293652442*^9}, {3.681652919149341*^9, 
  3.6816529312101803`*^9}}],

Cell["Starting defaults,", "Text",
 CellChangeTimes->{{3.681275692462709*^9, 3.681275744462085*^9}, {
  3.68127603124258*^9, 3.681276033258512*^9}, {3.681648325558826*^9, 
  3.681648363622443*^9}, {3.68164844251763*^9, 3.681648462565403*^9}, {
  3.6816486113638287`*^9, 3.6816486199405193`*^9}, {3.681649752393496*^9, 
  3.681649775753285*^9}}],

Cell[BoxData[
 RowBox[{"PreambleFile", "[", "\"\<simple_preamble.tex\>\"", "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.681649789249628*^9, {3.6816498561531563`*^9, 3.6816498620313396`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PreambleFile", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Preamble", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.681648769298133*^9, 3.681648771522625*^9}}],

Cell[BoxData["\<\"/home/andrewn/Mirror_leo/ahn-scientific/Mathematica/\
Applications/TeXit/0.1.0/TeXit_TeXit/simple_preamble.tex\"\>"], "Output",
 CellChangeTimes->{
  3.681535460442835*^9, 3.681648772828001*^9, 3.681648868306593*^9, 
   3.681648923703137*^9, 3.681649664767799*^9, 3.681649867980846*^9, 
   3.681650000942297*^9, 3.681652777643442*^9, 3.68165293895922*^9, {
   3.68165399947143*^9, 3.6816540198700666`*^9}, 3.68168608601674*^9, 
   3.681878811030767*^9, 3.6828384027276173`*^9}],

Cell[BoxData["\<\"\\n%\\n%  Any changes to this file will be lost.\\n%  This \
file is recreated when the TeXit package is loaded.\\n%\\n%  See:  ? \
PreambleFile\\n%\\n\\\\documentclass[a4paper,11pt]{article}\\n\\n\\\\\
usepackage[top=1.5cm, bottom=1.5cm, left=1.5cm, \
right=1.5cm]{geometry}\\n\\n\\\\usepackage{amsmath, amssymb, graphics, \
setspace}\\n\\n\\\\usepackage{tensor}\\n\\\\usepackage[pdfnewwindow=true]{\
hyperref}\\n\\\\hypersetup{pdfnewwindow=true}\\n\\n\\\\newcommand{\\\\mathsym}\
[1]{{}}\\n\\\\newcommand{\\\\unicode}[1]{{}}\\n\\\\newcounter{mathematicapage}\
\\n\\\\begin{document}\\n\\n\\\\noindent\\nWed 14 Sep 2016 \
20:39:18\\n\\n\\\\medskip\\n\\\\noindent\\n\\\\url{/home/andrewn/Mirror_leo/\
ahn-scientific/Mathematica/Applications/TeXit/0.1.0/TeXit.nb}\\n\\n\\\\\
medskip\\n\"\>"], "Output",
 CellChangeTimes->{
  3.681535460442835*^9, 3.681648772828001*^9, 3.681648868306593*^9, 
   3.681648923703137*^9, 3.681649664767799*^9, 3.681649867980846*^9, 
   3.681650000942297*^9, 3.681652777643442*^9, 3.68165293895922*^9, {
   3.68165399947143*^9, 3.6816540198700666`*^9}, 3.68168608601674*^9, 
   3.681878811030767*^9, 3.682838402730865*^9}]
}, Open  ]],

Cell["Error message example,", "Text",
 CellChangeTimes->{{3.681183479782291*^9, 3.681183530348934*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PreambleFile", "[", "\"\<xxx.tex\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.681170818036994*^9, 3.6811708356208076`*^9}, {
  3.6811711759378633`*^9, 3.681171197616562*^9}, {3.681276078538216*^9, 
  3.681276078882218*^9}, {3.682838408780349*^9, 3.6828384103324127`*^9}}],

Cell[BoxData["\<\"File not found: \
/home/andrewn/Mirror_leo/ahn-scientific/Mathematica/Applications/TeXit/0.1.0/\
TeXit_TeXit/xxx.tex\"\>"], "Output",
 CellChangeTimes->{{3.6811711773962793`*^9, 3.681171201301217*^9}, 
   3.68119389366777*^9, 3.681535369540148*^9, 3.681648948684544*^9, 
   3.681652976887567*^9, 3.681686116452396*^9, 3.681878823241322*^9, 
   3.682838411061434*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["PostambleFile[ ]", "Subsection",
 CellChangeTimes->{{3.681163255251027*^9, 3.681163273922697*^9}, 
   3.681169212248848*^9, {3.6811925129702053`*^9, 3.6811926003182087`*^9}, 
   3.68127611772141*^9, {3.6816541491085157`*^9, 3.681654149732566*^9}}],

Cell["\<\
Make sure there is always a working postamble that can be used,\
\>", "Text",
 CellChangeTimes->{{3.6816512208450813`*^9, 3.681651276169223*^9}, {
  3.6816861453188553`*^9, 3.681686162374723*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Unprotect", "[", "$SimplePostamble", "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
  "$SimplePostamble", " ", "=", 
   "\"\<\n%\n%  Any changes to this file will be lost.\n%  This file is \
recreated when the TeXit package is loaded.\n%\n%  See:  ? PostambleFile\n%\n\
\\\\end{document}\\n\>\""}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Protect", "[", "$SimplePostamble", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6811011006301737`*^9, 3.681101135573987*^9}, {
   3.6811012095117607`*^9, 3.681101210315976*^9}, 3.6811082472914124`*^9, {
   3.68110837735358*^9, 3.681108383913624*^9}, 3.681108414265108*^9, {
   3.68110929912038*^9, 3.6811093081577682`*^9}, {3.6811210511391487`*^9, 
   3.681121052883151*^9}, {3.681164549458872*^9, 3.6811645759863997`*^9}, 
   3.681165006765217*^9, 3.681167151826112*^9, {3.6811675830210943`*^9, 
   3.681167588668785*^9}, {3.681168464562276*^9, 3.6811684646581707`*^9}, {
   3.681169247208625*^9, 3.681169250520657*^9}, {3.68119266238594*^9, 
   3.681192706353566*^9}, {3.6811938037089167`*^9, 3.681193824496702*^9}, {
   3.681648414246189*^9, 3.681648432965824*^9}, {3.681648789298691*^9, 
   3.681648813010438*^9}, {3.6816541779098053`*^9, 3.681654179112402*^9}, {
   3.68165432398757*^9, 3.681654340291518*^9}, {3.681686316236058*^9, 
   3.681686322118191*^9}, {3.6816880629024153`*^9, 3.6816880782238827`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$SimplePostambleFile", "=", " ", 
   RowBox[{"FileNameJoin", "[", 
    RowBox[{"{", 
     RowBox[{"$TeXitDir", ",", "\"\<simple_postamble.tex\>\""}], "}"}], 
    "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681275396066607*^9, 3.681275399474545*^9}, {
   3.681275439699279*^9, 3.681275508945127*^9}, {3.6812755449040413`*^9, 
   3.681275594080209*^9}, {3.681275822884886*^9, 3.68127585353295*^9}, {
   3.6815354227058773`*^9, 3.681535425889748*^9}, 3.681535560141287*^9, {
   3.681648389286455*^9, 3.6816483903103533`*^9}, {3.681648488117292*^9, 
   3.6816484893413477`*^9}, {3.681648625349051*^9, 3.681648641171866*^9}, {
   3.681649756473775*^9, 3.6816497571619596`*^9}, {3.681651353196154*^9, 
   3.6816513735809717`*^9}, {3.6816517085210857`*^9, 3.681651724416893*^9}, 
   3.681654179696086*^9, {3.681654225044866*^9, 3.6816542270123043`*^9}, 
   3.6817081719351*^9}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"If", "[", 
   RowBox[{
    RowBox[{"FileExistsQ", "[", "$SimplePostambleFile", "]"}], ",", 
    RowBox[{"DeleteFile", "[", "$SimplePostambleFile", "]"}]}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"WriteString", "[", 
   RowBox[{"$SimplePostambleFile", ",", "$SimplePostamble"}], "]"}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Close", "[", "$SimplePostambleFile", "]"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681275396066607*^9, 3.681275399474545*^9}, {
   3.681275439699279*^9, 3.681275508945127*^9}, {3.6812755449040413`*^9, 
   3.681275594080209*^9}, {3.681275822884886*^9, 3.68127585353295*^9}, {
   3.6815354227058773`*^9, 3.681535425889748*^9}, 3.681535560141287*^9, {
   3.681648389286455*^9, 3.6816483903103533`*^9}, {3.681648488117292*^9, 
   3.6816484893413477`*^9}, 3.681648675827608*^9, 3.6816487542274923`*^9, {
   3.681651356108232*^9, 3.6816513797422667`*^9}, {3.681651739619269*^9, 
   3.681651748715231*^9}, 3.681685798779654*^9, {3.681685893818371*^9, 
   3.681685977849387*^9}, {3.68168622202227*^9, 3.6816862484218273`*^9}}],

Cell["\<\
Allow the user to specify use of an existing postamble file from  $TeXitDir   \
by linking to it,  \
\>", "Text",
 CellChangeTimes->{{3.681168951307941*^9, 3.681169021506867*^9}, {
  3.6811690579147987`*^9, 3.681169112986104*^9}, {3.681169947215728*^9, 
  3.681169947720004*^9}, {3.681170112653653*^9, 3.681170164717083*^9}, {
  3.681170773333469*^9, 3.681170773717236*^9}, {3.6811928323355494`*^9, 
  3.68119284263947*^9}, {3.6811928780629587`*^9, 3.6811929335500526`*^9}, {
  3.681275530992713*^9, 3.68127553301657*^9}, {3.6812757792912416`*^9, 
  3.68127578313374*^9}, {3.681275900668477*^9, 3.681275915356175*^9}, {
  3.681649361293132*^9, 3.681649404364768*^9}, {3.6816514717869997`*^9, 
  3.681651500650799*^9}, {3.681930183311455*^9, 3.681930184384502*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "PostambleFile", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"PostambleFile", "[", "name_String", "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", "f", "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"f", " ", "=", " ", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "name"}], "}"}], "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{"!", 
        RowBox[{"FileExistsQ", "[", "f", "]"}]}], ",", " ", 
       RowBox[{"Return", "[", 
        RowBox[{"\"\<File not found: \>\"", "<>", 
         RowBox[{"ToString", "[", "f", "]"}]}], "]"}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"$PostambleFile", " ", "=", "f"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Run", "[", 
      RowBox[{
      "\"\<ln -sf \>\"", "<>", "name", "<>", "\"\< \>\"", "<>", "$TeXitDir", 
       "<>", "\"\</postamble\>\""}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"$Postamble", "=", 
      RowBox[{"ReadFile", "[", "f", "]"}]}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6811688108619757`*^9, 3.681168850812286*^9}, {
   3.681169192185418*^9, 3.681169192281126*^9}, {3.681169261608653*^9, 
   3.681169262984333*^9}, {3.681169713666832*^9, 3.681169715170788*^9}, {
   3.681169967567889*^9, 3.681169991911395*^9}, {3.6811700305009623`*^9, 
   3.681170088110165*^9}, {3.681170191101108*^9, 3.6811702071966677`*^9}, {
   3.681170260204159*^9, 3.681170471961527*^9}, {3.681170516584956*^9, 
   3.681170529590293*^9}, 3.68117104345861*^9, {3.6811928894230757`*^9, 
   3.6811928955028343`*^9}, 3.6811931540600443`*^9, {3.681275806461845*^9, 
   3.6812758134696093`*^9}, {3.681649278412817*^9, 3.681649286622253*^9}, {
   3.681649547644105*^9, 3.681649604595118*^9}, {3.681649644923128*^9, 
   3.681649655753339*^9}, {3.6816516125864067`*^9, 3.6816516276739273`*^9}, 
   3.6816518444388638`*^9, {3.68165188624582*^9, 3.681651945942775*^9}, {
   3.681652039719702*^9, 3.681652120100978*^9}, {3.681652235092*^9, 
   3.6816522420199966`*^9}, {3.681652402770492*^9, 3.68165242657682*^9}, 
   3.681652669151924*^9, {3.68165333317899*^9, 3.6816533448650227`*^9}, {
   3.681653793559635*^9, 3.681653829431211*^9}, {3.681653916063553*^9, 
   3.681653920406754*^9}, {3.681654183608712*^9, 3.681654185384601*^9}, {
   3.681654247540279*^9, 3.6816542493002167`*^9}}],

Cell["No args returns current value,", "Text",
 CellChangeTimes->{{3.681193008701214*^9, 3.681193022509161*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"PostambleFile", "[", "]"}], ":=", "$PostambleFile"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681170851428636*^9, 3.681170866676371*^9}, {
   3.6811709266754723`*^9, 3.681170927731662*^9}, {3.681192978733692*^9, 
   3.681193000253606*^9}, 3.681275949915782*^9, {3.6816522676195593`*^9, 
   3.6816522682115726`*^9}, {3.681654186608528*^9, 3.681654187255981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"Postamble", "[", "]"}], ":=", 
  RowBox[{"$Postamble", "=", 
   RowBox[{"ReadFile", "[", 
    RowBox[{"PostambleFile", "[", "]"}], "]"}]}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.68165012589495*^9, 3.681650150240859*^9}, {
  3.681652280083405*^9, 3.681652293652442*^9}, {3.681652919149341*^9, 
  3.6816529312101803`*^9}, {3.681654187856801*^9, 3.6816541891118298`*^9}}],

Cell["Starting defaults,", "Text",
 CellChangeTimes->{{3.681275692462709*^9, 3.681275744462085*^9}, {
  3.68127603124258*^9, 3.681276033258512*^9}, {3.681648325558826*^9, 
  3.681648363622443*^9}, {3.68164844251763*^9, 3.681648462565403*^9}, {
  3.6816486113638287`*^9, 3.6816486199405193`*^9}, {3.681649752393496*^9, 
  3.681649775753285*^9}}],

Cell[BoxData[
 RowBox[{"PostambleFile", "[", "\"\<simple_postamble.tex\>\"", "]"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{
  3.681649789249628*^9, {3.6816498561531563`*^9, 3.6816498620313396`*^9}, 
   3.6816541935910063`*^9, {3.6816542701008377`*^9, 3.681654271363996*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"PostambleFile", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"Postamble", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.681648769298133*^9, 3.681648771522625*^9}, {
  3.681654194767071*^9, 3.681654195511845*^9}}],

Cell[BoxData["\<\"/home/andrewn/Mirror_leo/Mathematica_files/2015/Project-\
tpTensor/tpTensor-0.5/RequiredPackages/TeXit/TeXit_TeXit/simple_postamble.tex\
\"\>"], "Output",
 CellChangeTimes->{
  3.681535460442835*^9, 3.681648772828001*^9, 3.681648868306593*^9, 
   3.681648923703137*^9, 3.681649664767799*^9, 3.681649867980846*^9, 
   3.681650000942297*^9, 3.681652777643442*^9, 3.68165293895922*^9, {
   3.68165399947143*^9, 3.6816540198700666`*^9}, {3.6816542760088654`*^9, 
   3.681654280251347*^9}, 3.681654366667315*^9, 3.681686266229085*^9, 
   3.681878846970314*^9}],

Cell[BoxData["\<\"\\n%\\n%  Any changes to this file will be lost.\\n%  This \
file is recreated when the TeXit package is loaded.\\n%\\n%  See:  ? \
PostambleFile\\n%\\n\\\\end{document}\\n\"\>"], "Output",
 CellChangeTimes->{
  3.681535460442835*^9, 3.681648772828001*^9, 3.681648868306593*^9, 
   3.681648923703137*^9, 3.681649664767799*^9, 3.681649867980846*^9, 
   3.681650000942297*^9, 3.681652777643442*^9, 3.68165293895922*^9, {
   3.68165399947143*^9, 3.6816540198700666`*^9}, {3.6816542760088654`*^9, 
   3.681654280251347*^9}, 3.681654366667315*^9, 3.681686266229085*^9, 
   3.681878846971098*^9}]
}, Open  ]],

Cell["Error message example,", "Text",
 CellChangeTimes->{{3.681183479782291*^9, 3.681183530348934*^9}, {
  3.6816542846460743`*^9, 3.681654286196052*^9}, {3.681686275575626*^9, 
  3.6816862787732763`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PostambleFile", "[", "\"\<xxx.tex\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.681170818036994*^9, 3.6811708356208076`*^9}, {
   3.6811711759378633`*^9, 3.681171197616562*^9}, {3.681276078538216*^9, 
   3.681276078882218*^9}, 3.681654199079752*^9}],

Cell[BoxData["\<\"File not found: \
/home/andrewn/Mirror_leo/ahn-scientific/Mathematica/Applications/TeXit/0.1.0/\
TeXit_TeXit/xxx.tex\"\>"], "Output",
 CellChangeTimes->{{3.6811711773962793`*^9, 3.681171201301217*^9}, 
   3.68119389366777*^9, 3.681535369540148*^9, 3.681648948684544*^9, 
   3.681652976887567*^9, 3.681654287460697*^9, 3.6816862804324617`*^9, 
   3.6818788525352087`*^9, 3.6828384481346817`*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Font information  ---  nothing initialized", "Subsection",
 CellChangeTimes->{{3.681163255251027*^9, 3.681163273922697*^9}, 
   3.681169212248848*^9, {3.6811925129702053`*^9, 3.6811926003182087`*^9}, 
   3.68127611772141*^9, {3.6816541491085157`*^9, 3.681654149732566*^9}, {
   3.6829744142469397`*^9, 3.682974420182843*^9}, {3.682975394153837*^9, 
   3.682975403593671*^9}}],

Cell[TextData[Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{
    False->"\<\"http://reference.wolfram.com/language/guide/FontOptions.html\"\
\>", True->
    StyleBox["\<\"http://reference.wolfram.com/language/guide/FontOptions.\
html\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://reference.wolfram.com/language/guide/FontOptions.html"], 
     None},
   ButtonNote->"http://reference.wolfram.com/language/guide/FontOptions.html"],
  Annotation[#, 
   "http://reference.wolfram.com/language/guide/FontOptions.html", 
   "Hyperlink"]& ]], "Input",
 TextClipboardType->"PlainText"]], "Text",
 CellChangeTimes->{3.682974954507477*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"CurrentValue", "[", "FontFamily", "]"}]], "Input",
 CellChangeTimes->{{3.6829745020048857`*^9, 3.682974522677898*^9}}],

Cell[BoxData[
 DynamicBox[ToBoxes[
   CurrentValue[{StyleHints, "CodeFont"}], StandardForm],
  ImageSizeCache->{70., {0., 12.}}]], "Output",
 CellChangeTimes->{3.682974524453506*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"OptionValue", "[", 
  RowBox[{"Cell", ",", "FontFamily"}], "]"}]], "Input",
 CellChangeTimes->{{3.682974581822488*^9, 3.6829745985580063`*^9}}],

Cell[BoxData["\<\"Times\"\>"], "Output",
 CellChangeTimes->{3.6829746007149897`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Style", "[", 
  RowBox[{"\"\<AaBbCcDd\>\"", ",", 
   RowBox[{"FontFamily", "\[Rule]", "\"\<Helvetica\>\""}]}], "]"}]], "Input",
 CellID->1858495399],

Cell[BoxData[
 StyleBox["\<\"AaBbCcDd\"\>",
  StripOnInput->False,
  FontFamily->"Helvetica"]], "Output",
 CellChangeTimes->{3.682974641274714*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"$FontFamilies", "//", "Column"}]], "Input",
 CellChangeTimes->{{3.682974332840494*^9, 3.6829743703438377`*^9}},
 CellID->1832812651],

Cell[BoxData[
 TagBox[GridBox[{
    {"\<\"Alegreya SC\"\>"},
    {"\<\"Andale Mono\"\>"},
    {"\<\"Arial\"\>"},
    {"\<\"Arial Black\"\>"},
    {"\<\"Bitstream Charter\"\>"},
    {"\<\"Bitstream Vera Sans\"\>"},
    {"\<\"Bitstream Vera Sans Mono\"\>"},
    {"\<\"Bitstream Vera Serif\"\>"},
    {"\<\"Cantarell\"\>"},
    {"\<\"Century Schoolbook L\"\>"},
    {"\<\"Clear Sans\"\>"},
    {"\<\"Clear Sans Light\"\>"},
    {"\<\"Clear Sans Medium\"\>"},
    {"\<\"Clear Sans Thin\"\>"},
    {"\<\"Comic Sans MS\"\>"},
    {"\<\"Courier\"\>"},
    {"\<\"Courier 10 Pitch\"\>"},
    {"\<\"Courier New\"\>"},
    {"\<\"Cousine\"\>"},
    {"\<\"DejaVu Sans\"\>"},
    {"\<\"DejaVu Sans\"\>"},
    {"\<\"DejaVu Sans\"\>"},
    {"\<\"DejaVu Sans Mono\"\>"},
    {"\<\"DejaVu Serif\"\>"},
    {"\<\"DejaVu Serif\"\>"},
    {"\<\"Dingbats\"\>"},
    {"\<\"Droid Arabic Kufi\"\>"},
    {"\<\"Droid Arabic Naskh\"\>"},
    {"\<\"Droid Naskh Shift Alt\"\>"},
    {"\<\"Droid Sans\"\>"},
    {"\<\"Droid Sans Arabic\"\>"},
    {"\<\"Droid Sans Armenian\"\>"},
    {"\<\"Droid Sans Ethiopic\"\>"},
    {"\<\"Droid Sans Fallback\"\>"},
    {"\<\"Droid Sans Georgian\"\>"},
    {"\<\"Droid Sans Hebrew\"\>"},
    {"\<\"Droid Sans Japanese\"\>"},
    {"\<\"Droid Sans Mono\"\>"},
    {"\<\"Droid Serif\"\>"},
    {"\<\"EB Garamond\"\>"},
    {"\<\"EB Garamond\"\>"},
    {"\<\"EB Garamond 12 All SC\"\>"},
    {"\<\"EB Garamond SC\"\>"},
    {"\<\"EB Garamond SC\"\>"},
    {"\<\"Economica\"\>"},
    {"\<\"Felipa\"\>"},
    {"\<\"FreeMono\"\>"},
    {"\<\"FreeSans\"\>"},
    {"\<\"FreeSerif\"\>"},
    {"\<\"Gentium\"\>"},
    {"\<\"GentiumAlt\"\>"},
    {"\<\"Gentium Basic\"\>"},
    {"\<\"Gentium Book Basic\"\>"},
    {"\<\"Georgia\"\>"},
    {"\<\"Impact\"\>"},
    {"\<\"Inconsolata\"\>"},
    {"\<\"Kalam\"\>"},
    {"\<\"Kalam\"\>"},
    {"\<\"Kalam\"\>"},
    {"\<\"Latin Modern Math\"\>"},
    {"\<\"Latin Modern Mono\"\>"},
    {"\<\"Latin Modern Mono\"\>"},
    {"\<\"Latin Modern Mono\"\>"},
    {"\<\"Latin Modern Mono\"\>"},
    {"\<\"Latin Modern Mono Caps\"\>"},
    {"\<\"Latin Modern Mono Light\"\>"},
    {"\<\"Latin Modern Mono Light Cond\"\>"},
    {"\<\"Latin Modern Mono Prop\"\>"},
    {"\<\"Latin Modern Mono Prop Light\"\>"},
    {"\<\"Latin Modern Mono Slanted\"\>"},
    {"\<\"Latin Modern Roman\"\>"},
    {"\<\"Latin Modern Roman\"\>"},
    {"\<\"Latin Modern Roman\"\>"},
    {"\<\"Latin Modern Roman\"\>"},
    {"\<\"Latin Modern Roman\"\>"},
    {"\<\"Latin Modern Roman\"\>"},
    {"\<\"Latin Modern Roman\"\>"},
    {"\<\"Latin Modern Roman\"\>"},
    {"\<\"Latin Modern Roman Caps\"\>"},
    {"\<\"Latin Modern Roman Demi\"\>"},
    {"\<\"Latin Modern Roman Dunhill\"\>"},
    {"\<\"Latin Modern Roman Slanted\"\>"},
    {"\<\"Latin Modern Roman Slanted\"\>"},
    {"\<\"Latin Modern Roman Slanted\"\>"},
    {"\<\"Latin Modern Roman Slanted\"\>"},
    {"\<\"Latin Modern Roman Slanted\"\>"},
    {"\<\"Latin Modern Roman Unslanted\"\>"},
    {"\<\"Latin Modern Sans\"\>"},
    {"\<\"Latin Modern Sans\"\>"},
    {"\<\"Latin Modern Sans\"\>"},
    {"\<\"Latin Modern Sans\"\>"},
    {"\<\"Latin Modern Sans\"\>"},
    {"\<\"Latin Modern Sans Demi Cond\"\>"},
    {"\<\"Latin Modern Sans Quotation\"\>"},
    {"\<\"Lato\"\>"},
    {"\<\"Lato\"\>"},
    {"\<\"Lato\"\>"},
    {"\<\"Lato\"\>"},
    {"\<\"League Gothic\"\>"},
    {"\<\"League Gothic\"\>"},
    {"\<\"League Gothic\"\>"},
    {"\<\"League Gothic\"\>"},
    {"\<\"Liberation Mono\"\>"},
    {"\<\"Liberation Sans\"\>"},
    {"\<\"Liberation Sans Narrow\"\>"},
    {"\<\"Liberation Serif\"\>"},
    {"\<\"Mathematica\"\>"},
    {"\<\"MathematicaMono\"\>"},
    {"\<\"MathematicaSans\"\>"},
    {"\<\"Nimbus Mono L\"\>"},
    {"\<\"Nimbus Roman No9 L\"\>"},
    {"\<\"Nimbus Sans L\"\>"},
    {"\<\"OpenSymbol\"\>"},
    {"\<\"Oswald\"\>"},
    {"\<\"Playfair Display\"\>"},
    {"\<\"Playfair Display\"\>"},
    {"\<\"Roboto\"\>"},
    {"\<\"Roboto\"\>"},
    {"\<\"Roboto\"\>"},
    {"\<\"Roboto\"\>"},
    {"\<\"Roboto\"\>"},
    {"\<\"Roboto Condensed\"\>"},
    {"\<\"Roboto Condensed\"\>"},
    {"\<\"Roboto Slab\"\>"},
    {"\<\"Shadows Into Light Two\"\>"},
    {"\<\"Source Code Pro\"\>"},
    {"\<\"Source Code Pro\"\>"},
    {"\<\"Source Code Pro\"\>"},
    {"\<\"Source Code Pro\"\>"},
    {"\<\"Source Code Pro\"\>"},
    {"\<\"Source Code Pro\"\>"},
    {"\<\"Source Sans Pro\"\>"},
    {"\<\"Source Sans Pro\"\>"},
    {"\<\"Source Sans Pro\"\>"},
    {"\<\"Source Sans Pro\"\>"},
    {"\<\"Source Sans Pro\"\>"},
    {"\<\"Source Serif Pro\"\>"},
    {"\<\"Source Serif Pro\"\>"},
    {"\<\"Standard Symbols L\"\>"},
    {"\<\"Swiss 721\"\>"},
    {"\<\"TeX Gyre Adventor\"\>"},
    {"\<\"TeX Gyre Bonum\"\>"},
    {"\<\"TeX Gyre Bonum Math\"\>"},
    {"\<\"TeX Gyre Chorus\"\>"},
    {"\<\"TeX Gyre Cursor\"\>"},
    {"\<\"TeX Gyre Heros\"\>"},
    {"\<\"TeX Gyre Heros Cn\"\>"},
    {"\<\"TeX Gyre Pagella\"\>"},
    {"\<\"TeX Gyre Pagella Math\"\>"},
    {"\<\"TeX Gyre Schola\"\>"},
    {"\<\"TeX Gyre Schola Math\"\>"},
    {"\<\"TeX Gyre Termes\"\>"},
    {"\<\"TeX Gyre Termes Math\"\>"},
    {"\<\"Times New Roman\"\>"},
    {"\<\"Titillium Web\"\>"},
    {"\<\"Trebuchet MS\"\>"},
    {"\<\"URW Bookman L\"\>"},
    {"\<\"URW Chancery L\"\>"},
    {"\<\"URW Gothic L\"\>"},
    {"\<\"URW Palladio L\"\>"},
    {"\<\"Utopia\"\>"},
    {"\<\"Verdana\"\>"},
    {"\<\"Webdings\"\>"},
    {"\<\"Yanone Kaffeesatz\"\>"},
    {"\<\"Yanone Kaffeesatz\"\>"},
    {"\<\"Yanone Kaffeesatz\"\>"}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 CellChangeTimes->{
  3.682974299285406*^9, {3.682974336701139*^9, 3.6829743720089273`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Style", "[", 
    RowBox[{"#", ",", 
     RowBox[{"FontFamily", "->", "#"}]}], "]"}], "&"}], "/@", 
  "$FontFamilies"}]], "Input",
 CellChangeTimes->{{3.682974117243532*^9, 3.682974122787992*^9}},
 CellID->1495848898],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   StyleBox["\<\"Alegreya SC\"\>",
    StripOnInput->False,
    FontFamily->"Alegreya SC"], ",", 
   StyleBox["\<\"Andale Mono\"\>",
    StripOnInput->False,
    FontFamily->"Andale Mono"], ",", 
   StyleBox["\<\"Arial\"\>",
    StripOnInput->False,
    FontFamily->"Arial"], ",", 
   StyleBox["\<\"Arial Black\"\>",
    StripOnInput->False,
    FontFamily->"Arial Black"], ",", 
   StyleBox["\<\"Bitstream Charter\"\>",
    StripOnInput->False,
    FontFamily->"Bitstream Charter"], ",", 
   StyleBox["\<\"Bitstream Vera Sans\"\>",
    StripOnInput->False,
    FontFamily->"Bitstream Vera Sans"], ",", 
   StyleBox["\<\"Bitstream Vera Sans Mono\"\>",
    StripOnInput->False,
    FontFamily->"Bitstream Vera Sans Mono"], ",", 
   StyleBox["\<\"Bitstream Vera Serif\"\>",
    StripOnInput->False,
    FontFamily->"Bitstream Vera Serif"], ",", 
   StyleBox["\<\"Cantarell\"\>",
    StripOnInput->False,
    FontFamily->"Cantarell"], ",", 
   StyleBox["\<\"Century Schoolbook L\"\>",
    StripOnInput->False,
    FontFamily->"Century Schoolbook L"], ",", 
   StyleBox["\<\"Clear Sans\"\>",
    StripOnInput->False,
    FontFamily->"Clear Sans"], ",", 
   StyleBox["\<\"Clear Sans Light\"\>",
    StripOnInput->False,
    FontFamily->"Clear Sans Light"], ",", 
   StyleBox["\<\"Clear Sans Medium\"\>",
    StripOnInput->False,
    FontFamily->"Clear Sans Medium"], ",", 
   StyleBox["\<\"Clear Sans Thin\"\>",
    StripOnInput->False,
    FontFamily->"Clear Sans Thin"], ",", 
   StyleBox["\<\"Comic Sans MS\"\>",
    StripOnInput->False,
    FontFamily->"Comic Sans MS"], ",", 
   StyleBox["\<\"Courier\"\>",
    StripOnInput->False,
    FontFamily->"Courier"], ",", 
   StyleBox["\<\"Courier 10 Pitch\"\>",
    StripOnInput->False,
    FontFamily->"Courier 10 Pitch"], ",", 
   StyleBox["\<\"Courier New\"\>",
    StripOnInput->False,
    FontFamily->"Courier New"], ",", 
   StyleBox["\<\"Cousine\"\>",
    StripOnInput->False,
    FontFamily->"Cousine"], ",", 
   StyleBox["\<\"DejaVu Sans\"\>",
    StripOnInput->False,
    FontFamily->"DejaVu Sans"], ",", 
   StyleBox["\<\"DejaVu Sans\"\>",
    StripOnInput->False,
    FontFamily->"DejaVu Sans"], ",", 
   StyleBox["\<\"DejaVu Sans\"\>",
    StripOnInput->False,
    FontFamily->"DejaVu Sans"], ",", 
   StyleBox["\<\"DejaVu Sans Mono\"\>",
    StripOnInput->False,
    FontFamily->"DejaVu Sans Mono"], ",", 
   StyleBox["\<\"DejaVu Serif\"\>",
    StripOnInput->False,
    FontFamily->"DejaVu Serif"], ",", 
   StyleBox["\<\"DejaVu Serif\"\>",
    StripOnInput->False,
    FontFamily->"DejaVu Serif"], ",", 
   StyleBox["\<\"Dingbats\"\>",
    StripOnInput->False,
    FontFamily->"Dingbats"], ",", 
   StyleBox["\<\"Droid Arabic Kufi\"\>",
    StripOnInput->False,
    FontFamily->"Droid Arabic Kufi"], ",", 
   StyleBox["\<\"Droid Arabic Naskh\"\>",
    StripOnInput->False,
    FontFamily->"Droid Arabic Naskh"], ",", 
   StyleBox["\<\"Droid Naskh Shift Alt\"\>",
    StripOnInput->False,
    FontFamily->"Droid Naskh Shift Alt"], ",", 
   StyleBox["\<\"Droid Sans\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans"], ",", 
   StyleBox["\<\"Droid Sans Arabic\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans Arabic"], ",", 
   StyleBox["\<\"Droid Sans Armenian\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans Armenian"], ",", 
   StyleBox["\<\"Droid Sans Ethiopic\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans Ethiopic"], ",", 
   StyleBox["\<\"Droid Sans Fallback\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans Fallback"], ",", 
   StyleBox["\<\"Droid Sans Georgian\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans Georgian"], ",", 
   StyleBox["\<\"Droid Sans Hebrew\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans Hebrew"], ",", 
   StyleBox["\<\"Droid Sans Japanese\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans Japanese"], ",", 
   StyleBox["\<\"Droid Sans Mono\"\>",
    StripOnInput->False,
    FontFamily->"Droid Sans Mono"], ",", 
   StyleBox["\<\"Droid Serif\"\>",
    StripOnInput->False,
    FontFamily->"Droid Serif"], ",", 
   StyleBox["\<\"EB Garamond\"\>",
    StripOnInput->False,
    FontFamily->"EB Garamond"], ",", 
   StyleBox["\<\"EB Garamond\"\>",
    StripOnInput->False,
    FontFamily->"EB Garamond"], ",", 
   StyleBox["\<\"EB Garamond 12 All SC\"\>",
    StripOnInput->False,
    FontFamily->"EB Garamond 12 All SC"], ",", 
   StyleBox["\<\"EB Garamond SC\"\>",
    StripOnInput->False,
    FontFamily->"EB Garamond SC"], ",", 
   StyleBox["\<\"EB Garamond SC\"\>",
    StripOnInput->False,
    FontFamily->"EB Garamond SC"], ",", 
   StyleBox["\<\"Economica\"\>",
    StripOnInput->False,
    FontFamily->"Economica"], ",", 
   StyleBox["\<\"Felipa\"\>",
    StripOnInput->False,
    FontFamily->"Felipa"], ",", 
   StyleBox["\<\"FreeMono\"\>",
    StripOnInput->False,
    FontFamily->"FreeMono"], ",", 
   StyleBox["\<\"FreeSans\"\>",
    StripOnInput->False,
    FontFamily->"FreeSans"], ",", 
   StyleBox["\<\"FreeSerif\"\>",
    StripOnInput->False,
    FontFamily->"FreeSerif"], ",", 
   StyleBox["\<\"Gentium\"\>",
    StripOnInput->False,
    FontFamily->"Gentium"], ",", 
   StyleBox["\<\"GentiumAlt\"\>",
    StripOnInput->False,
    FontFamily->"GentiumAlt"], ",", 
   StyleBox["\<\"Gentium Basic\"\>",
    StripOnInput->False,
    FontFamily->"Gentium Basic"], ",", 
   StyleBox["\<\"Gentium Book Basic\"\>",
    StripOnInput->False,
    FontFamily->"Gentium Book Basic"], ",", 
   StyleBox["\<\"Georgia\"\>",
    StripOnInput->False,
    FontFamily->"Georgia"], ",", 
   StyleBox["\<\"Impact\"\>",
    StripOnInput->False,
    FontFamily->"Impact"], ",", 
   StyleBox["\<\"Inconsolata\"\>",
    StripOnInput->False,
    FontFamily->"Inconsolata"], ",", 
   StyleBox["\<\"Kalam\"\>",
    StripOnInput->False,
    FontFamily->"Kalam"], ",", 
   StyleBox["\<\"Kalam\"\>",
    StripOnInput->False,
    FontFamily->"Kalam"], ",", 
   StyleBox["\<\"Kalam\"\>",
    StripOnInput->False,
    FontFamily->"Kalam"], ",", 
   StyleBox["\<\"Latin Modern Math\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Math"], ",", 
   StyleBox["\<\"Latin Modern Mono\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono"], ",", 
   StyleBox["\<\"Latin Modern Mono\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono"], ",", 
   StyleBox["\<\"Latin Modern Mono\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono"], ",", 
   StyleBox["\<\"Latin Modern Mono\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono"], ",", 
   StyleBox["\<\"Latin Modern Mono Caps\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono Caps"], ",", 
   StyleBox["\<\"Latin Modern Mono Light\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono Light"], ",", 
   StyleBox["\<\"Latin Modern Mono Light Cond\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono Light Cond"], ",", 
   StyleBox["\<\"Latin Modern Mono Prop\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono Prop"], ",", 
   StyleBox["\<\"Latin Modern Mono Prop Light\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono Prop Light"], ",", 
   StyleBox["\<\"Latin Modern Mono Slanted\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Mono Slanted"], ",", 
   StyleBox["\<\"Latin Modern Roman\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman"], ",", 
   StyleBox["\<\"Latin Modern Roman\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman"], ",", 
   StyleBox["\<\"Latin Modern Roman\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman"], ",", 
   StyleBox["\<\"Latin Modern Roman\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman"], ",", 
   StyleBox["\<\"Latin Modern Roman\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman"], ",", 
   StyleBox["\<\"Latin Modern Roman\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman"], ",", 
   StyleBox["\<\"Latin Modern Roman\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman"], ",", 
   StyleBox["\<\"Latin Modern Roman\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman"], ",", 
   StyleBox["\<\"Latin Modern Roman Caps\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Caps"], ",", 
   StyleBox["\<\"Latin Modern Roman Demi\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Demi"], ",", 
   StyleBox["\<\"Latin Modern Roman Dunhill\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Dunhill"], ",", 
   StyleBox["\<\"Latin Modern Roman Slanted\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Slanted"], ",", 
   StyleBox["\<\"Latin Modern Roman Slanted\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Slanted"], ",", 
   StyleBox["\<\"Latin Modern Roman Slanted\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Slanted"], ",", 
   StyleBox["\<\"Latin Modern Roman Slanted\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Slanted"], ",", 
   StyleBox["\<\"Latin Modern Roman Slanted\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Slanted"], ",", 
   StyleBox["\<\"Latin Modern Roman Unslanted\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Roman Unslanted"], ",", 
   StyleBox["\<\"Latin Modern Sans\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Sans"], ",", 
   StyleBox["\<\"Latin Modern Sans\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Sans"], ",", 
   StyleBox["\<\"Latin Modern Sans\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Sans"], ",", 
   StyleBox["\<\"Latin Modern Sans\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Sans"], ",", 
   StyleBox["\<\"Latin Modern Sans\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Sans"], ",", 
   StyleBox["\<\"Latin Modern Sans Demi Cond\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Sans Demi Cond"], ",", 
   StyleBox["\<\"Latin Modern Sans Quotation\"\>",
    StripOnInput->False,
    FontFamily->"Latin Modern Sans Quotation"], ",", 
   StyleBox["\<\"Lato\"\>",
    StripOnInput->False,
    FontFamily->"Lato"], ",", 
   StyleBox["\<\"Lato\"\>",
    StripOnInput->False,
    FontFamily->"Lato"], ",", 
   StyleBox["\<\"Lato\"\>",
    StripOnInput->False,
    FontFamily->"Lato"], ",", 
   StyleBox["\<\"Lato\"\>",
    StripOnInput->False,
    FontFamily->"Lato"], ",", 
   StyleBox["\<\"League Gothic\"\>",
    StripOnInput->False,
    FontFamily->"League Gothic"], ",", 
   StyleBox["\<\"League Gothic\"\>",
    StripOnInput->False,
    FontFamily->"League Gothic"], ",", 
   StyleBox["\<\"League Gothic\"\>",
    StripOnInput->False,
    FontFamily->"League Gothic"], ",", 
   StyleBox["\<\"League Gothic\"\>",
    StripOnInput->False,
    FontFamily->"League Gothic"], ",", 
   StyleBox["\<\"Liberation Mono\"\>",
    StripOnInput->False,
    FontFamily->"Liberation Mono"], ",", 
   StyleBox["\<\"Liberation Sans\"\>",
    StripOnInput->False,
    FontFamily->"Liberation Sans"], ",", 
   StyleBox["\<\"Liberation Sans Narrow\"\>",
    StripOnInput->False,
    FontFamily->"Liberation Sans Narrow"], ",", 
   StyleBox["\<\"Liberation Serif\"\>",
    StripOnInput->False,
    FontFamily->"Liberation Serif"], ",", 
   StyleBox["\<\"Mathematica\"\>",
    StripOnInput->False,
    FontFamily->"Mathematica"], ",", 
   StyleBox["\<\"MathematicaMono\"\>",
    StripOnInput->False,
    FontFamily->"MathematicaMono"], ",", 
   StyleBox["\<\"MathematicaSans\"\>",
    StripOnInput->False,
    FontFamily->"MathematicaSans"], ",", 
   StyleBox["\<\"Nimbus Mono L\"\>",
    StripOnInput->False,
    FontFamily->"Nimbus Mono L"], ",", 
   StyleBox["\<\"Nimbus Roman No9 L\"\>",
    StripOnInput->False,
    FontFamily->"Nimbus Roman No9 L"], ",", 
   StyleBox["\<\"Nimbus Sans L\"\>",
    StripOnInput->False,
    FontFamily->"Nimbus Sans L"], ",", 
   StyleBox["\<\"OpenSymbol\"\>",
    StripOnInput->False,
    FontFamily->"OpenSymbol"], ",", 
   StyleBox["\<\"Oswald\"\>",
    StripOnInput->False,
    FontFamily->"Oswald"], ",", 
   StyleBox["\<\"Playfair Display\"\>",
    StripOnInput->False,
    FontFamily->"Playfair Display"], ",", 
   StyleBox["\<\"Playfair Display\"\>",
    StripOnInput->False,
    FontFamily->"Playfair Display"], ",", 
   StyleBox["\<\"Roboto\"\>",
    StripOnInput->False,
    FontFamily->"Roboto"], ",", 
   StyleBox["\<\"Roboto\"\>",
    StripOnInput->False,
    FontFamily->"Roboto"], ",", 
   StyleBox["\<\"Roboto\"\>",
    StripOnInput->False,
    FontFamily->"Roboto"], ",", 
   StyleBox["\<\"Roboto\"\>",
    StripOnInput->False,
    FontFamily->"Roboto"], ",", 
   StyleBox["\<\"Roboto\"\>",
    StripOnInput->False,
    FontFamily->"Roboto"], ",", 
   StyleBox["\<\"Roboto Condensed\"\>",
    StripOnInput->False,
    FontFamily->"Roboto Condensed"], ",", 
   StyleBox["\<\"Roboto Condensed\"\>",
    StripOnInput->False,
    FontFamily->"Roboto Condensed"], ",", 
   StyleBox["\<\"Roboto Slab\"\>",
    StripOnInput->False,
    FontFamily->"Roboto Slab"], ",", 
   StyleBox["\<\"Shadows Into Light Two\"\>",
    StripOnInput->False,
    FontFamily->"Shadows Into Light Two"], ",", 
   StyleBox["\<\"Source Code Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro"], ",", 
   StyleBox["\<\"Source Code Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro"], ",", 
   StyleBox["\<\"Source Code Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro"], ",", 
   StyleBox["\<\"Source Code Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro"], ",", 
   StyleBox["\<\"Source Code Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro"], ",", 
   StyleBox["\<\"Source Code Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Code Pro"], ",", 
   StyleBox["\<\"Source Sans Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Sans Pro"], ",", 
   StyleBox["\<\"Source Sans Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Sans Pro"], ",", 
   StyleBox["\<\"Source Sans Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Sans Pro"], ",", 
   StyleBox["\<\"Source Sans Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Sans Pro"], ",", 
   StyleBox["\<\"Source Sans Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Sans Pro"], ",", 
   StyleBox["\<\"Source Serif Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Serif Pro"], ",", 
   StyleBox["\<\"Source Serif Pro\"\>",
    StripOnInput->False,
    FontFamily->"Source Serif Pro"], ",", 
   StyleBox["\<\"Standard Symbols L\"\>",
    StripOnInput->False,
    FontFamily->"Standard Symbols L"], ",", 
   StyleBox["\<\"Swiss 721\"\>",
    StripOnInput->False,
    FontFamily->"Swiss 721"], ",", 
   StyleBox["\<\"TeX Gyre Adventor\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Adventor"], ",", 
   StyleBox["\<\"TeX Gyre Bonum\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Bonum"], ",", 
   StyleBox["\<\"TeX Gyre Bonum Math\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Bonum Math"], ",", 
   StyleBox["\<\"TeX Gyre Chorus\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Chorus"], ",", 
   StyleBox["\<\"TeX Gyre Cursor\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Cursor"], ",", 
   StyleBox["\<\"TeX Gyre Heros\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Heros"], ",", 
   StyleBox["\<\"TeX Gyre Heros Cn\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Heros Cn"], ",", 
   StyleBox["\<\"TeX Gyre Pagella\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Pagella"], ",", 
   StyleBox["\<\"TeX Gyre Pagella Math\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Pagella Math"], ",", 
   StyleBox["\<\"TeX Gyre Schola\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Schola"], ",", 
   StyleBox["\<\"TeX Gyre Schola Math\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Schola Math"], ",", 
   StyleBox["\<\"TeX Gyre Termes\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Termes"], ",", 
   StyleBox["\<\"TeX Gyre Termes Math\"\>",
    StripOnInput->False,
    FontFamily->"TeX Gyre Termes Math"], ",", 
   StyleBox["\<\"Times New Roman\"\>",
    StripOnInput->False,
    FontFamily->"Times New Roman"], ",", 
   StyleBox["\<\"Titillium Web\"\>",
    StripOnInput->False,
    FontFamily->"Titillium Web"], ",", 
   StyleBox["\<\"Trebuchet MS\"\>",
    StripOnInput->False,
    FontFamily->"Trebuchet MS"], ",", 
   StyleBox["\<\"URW Bookman L\"\>",
    StripOnInput->False,
    FontFamily->"URW Bookman L"], ",", 
   StyleBox["\<\"URW Chancery L\"\>",
    StripOnInput->False,
    FontFamily->"URW Chancery L"], ",", 
   StyleBox["\<\"URW Gothic L\"\>",
    StripOnInput->False,
    FontFamily->"URW Gothic L"], ",", 
   StyleBox["\<\"URW Palladio L\"\>",
    StripOnInput->False,
    FontFamily->"URW Palladio L"], ",", 
   StyleBox["\<\"Utopia\"\>",
    StripOnInput->False,
    FontFamily->"Utopia"], ",", 
   StyleBox["\<\"Verdana\"\>",
    StripOnInput->False,
    FontFamily->"Verdana"], ",", 
   StyleBox["\<\"Webdings\"\>",
    StripOnInput->False,
    FontFamily->"Webdings"], ",", 
   StyleBox["\<\"Yanone Kaffeesatz\"\>",
    StripOnInput->False,
    FontFamily->"Yanone Kaffeesatz"], ",", 
   StyleBox["\<\"Yanone Kaffeesatz\"\>",
    StripOnInput->False,
    FontFamily->"Yanone Kaffeesatz"], ",", 
   StyleBox["\<\"Yanone Kaffeesatz\"\>",
    StripOnInput->False,
    FontFamily->"Yanone Kaffeesatz"]}], "}"}]], "Output",
 CellChangeTimes->{{3.6829741007403812`*^9, 3.682974125573694*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
InputText[ ]    ---  using  InputField[ ]  with a newline on Enter\
\>", "Subsection"],

Cell["\<\
The main problem with using   InputField[ ]   it that it is useless.  Cursor \
movement is all wrong with  \\n.  Cursor sees \\n  but not 1st char on 
new line, etc.  The code is also a complete mess. I\[CloseCurlyQuote]ve no \
idea how it works --- just bits stuck together from examples on the web.\
\>", "Text"],

Cell["\<\
For special characters see:  tutorial/StructuralElementsAndKeyboardCharacters \
 (\[LeftArrow] highlight and use F1)
...eg. invisible comma for index lists.\
\>", "Text",
 CellChangeTimes->{{3.682970049231207*^9, 3.682970143583846*^9}, {
  3.682970212190852*^9, 3.682970225006811*^9}, {3.68297028619014*^9, 
  3.6829702984939213`*^9}},
 CellID->1225378313],

Cell[TextData[{
 "We want to use  InputField[ ]   rather than just using quoted strings, \
because then  \[OpenCurlyDoubleQuote]\\\[CloseCurlyDoubleQuote]  can be typed \
easily (rather than \[OpenCurlyDoubleQuote]\\\\\[CloseCurlyDoubleQuote]) for ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " input.\nBut  InputField[ ]   ignores  Enter  ( ReturnKeyDown ).  So it \
needs some work..."
}], "Text",
 CellChangeTimes->{{3.6817006835285473`*^9, 3.6817007999683247`*^9}, {
  3.6828384759313917`*^9, 3.682838483867321*^9}, {3.6828807906757183`*^9, 
  3.682880849506692*^9}}],

Cell["\<\
We put an initial \[OpenCurlyDoubleQuote] \[CloseCurlyDoubleQuote]  in the \
input box and then backwards search for  \[OpenCurlyDoubleQuote] \
\[CloseCurlyDoubleQuote]  to put the cursor in the right place to start \
typing. Then we paste the prompt.
It requires that  the evaluation function not be a module variable (like \
{len,str,ans} ), so we call it  $InputTextCellEval.
When  Shift+Enter  is pressed, the function specified by the 2nd argument is \
applied to the string.  If no 2nd arg, then Print  is assumed.\
\>", "Text",
 CellChangeTimes->{{3.681689594396791*^9, 3.68168959802897*^9}, 
   3.681698181942627*^9, {3.681699286329458*^9, 3.681699419815811*^9}, {
   3.681700102847715*^9, 3.681700150191111*^9}, {3.681700272637597*^9, 
   3.681700309613242*^9}, {3.681700392012291*^9, 3.681700454100113*^9}, 
   3.681700643497121*^9, {3.681701203330309*^9, 3.6817012644820232`*^9}, {
   3.681701761163684*^9, 3.68170183396332*^9}, {3.6817033914643*^9, 
   3.681703521255124*^9}, {3.681703552198368*^9, 3.681703571687316*^9}, {
   3.6828812015325127`*^9, 3.682881225084382*^9}, {3.682881280337739*^9, 
   3.682881283147214*^9}, {3.682881325226366*^9, 3.682881366825886*^9}, {
   3.682887999725142*^9, 3.682888057452407*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InputText", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"InputBackground", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"242", ",", "242", ",", "242"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InputFontSize", "\[Rule]", "13"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InputFontFamily", "\[Rule]", "\"\<Latin Modern Roman\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"InputCellFrame", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InputShowGroupOpener", "\[Rule]", "True"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"InputCellMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"66", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InputCellLabelMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.682968505506742*^9, 3.6829685505802*^9}, {
  3.682968610708116*^9, 3.682968623284425*^9}, {3.6829686992501307`*^9, 
  3.682968716306074*^9}, {3.682968775361239*^9, 3.6829687825215483`*^9}, {
  3.682968813344668*^9, 3.682968813792775*^9}, {3.6829688938558187`*^9, 
  3.682968952608205*^9}, {3.682968986400106*^9, 3.682969043710026*^9}, {
  3.682993908494841*^9, 3.6829939224148397`*^9}, {3.6829939801248817`*^9, 
  3.682994046237421*^9}, {3.6829984521179523`*^9, 3.682998460470029*^9}, {
  3.682998495317563*^9, 3.68299850250169*^9}, {3.6829985520367937`*^9, 
  3.682998565762085*^9}, {3.68299881105764*^9, 3.6829988111375313`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "InputText", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputText", "[", 
   RowBox[{"OptionsPattern", "[", "]"}], "]"}], ":=", 
  RowBox[{"InputText", "[", 
   RowBox[{"\"\<\>\"", ",", "Print", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputText", "[", 
   RowBox[{"prompt_String", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"InputText", "[", 
   RowBox[{"prompt", ",", "Print", ",", "False"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputText", "[", 
   RowBox[{"prompt_String", ",", "f_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"InputText", "[", 
   RowBox[{"prompt", ",", "f", ",", "False"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputText", "[", 
   RowBox[{"prompt_String", ",", "f_", ",", " ", "keepprompt_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len", ",", "str", ",", "ans"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"len", " ", "=", " ", 
      RowBox[{"StringLength", "[", "prompt", "]"}]}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{"keepprompt", ",", 
       RowBox[{"len", "=", "0"}]}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"$InputTextFunction", " ", "=."}], ";", "\[IndentingNewLine]", 
     RowBox[{"$InputTextFunction", " ", "=", " ", "f"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"$InputTextCellEval", "=", 
      RowBox[{
       RowBox[{
       "ToExpression", "[", "\[IndentingNewLine]", 
        "                                             ", 
        RowBox[{
        "RowBox", "[", "\[IndentingNewLine]", 
         "                                                ", 
         RowBox[{"{", 
          RowBox[{
          "\"\<$InputTextFunction[StringDrop[Setting[\>\"", ",", "#", ",", 
           RowBox[{"\"\<], \n                             \>\"", "<>", 
            RowBox[{"ToString", "[", "len", "]"}], "<>", "\"\<]];\>\""}]}], 
          "}"}], "\[IndentingNewLine]", 
         "                                          ", "]"}], 
        "\[IndentingNewLine]", "                                       ", 
        "]"}], "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"CellPrint", "[", "\[IndentingNewLine]", "     ", 
      RowBox[{"Cell", "[", "\[IndentingNewLine]", "         ", 
       RowBox[{
        RowBox[{"BoxData", "[", "\n", "                        ", 
         RowBox[{"TagBox", "[", "\n", "                            ", 
          RowBox[{
           RowBox[{
           "DynamicModuleBox", "[", "\[IndentingNewLine]", "                ", 
            RowBox[{
             RowBox[{"{", 
              RowBox[{"s", " ", "=", " ", "\"\< \[VeryThinSpace]\>\""}], 
              "}"}], ",", " ", "\n", "                                 ", 
             RowBox[{"InputFieldBox", "[", 
              RowBox[{
               RowBox[{"Dynamic", "[", "s", "]"}], ",", " ", "String", ",", 
               RowBox[{"FieldSize", "\[Rule]", " ", "120"}], ",", 
               RowBox[{"Appearance", "\[Rule]", "\"\<Frameless\>\""}]}], 
              "]"}], ",", "\n", "                                 ", 
             RowBox[{"DynamicModuleValues", ":>", 
              RowBox[{"{", "}"}]}]}], "]"}], ",", "\n", 
           "                                 ", 
           RowBox[{
            RowBox[{"InputField", "[", 
             RowBox[{
              RowBox[{"Setting", "[", "#", "]"}], ",", " ", "String"}], 
             "\[IndentingNewLine]", "         ", "]"}], "&"}]}], " ", 
          "\[IndentingNewLine]", "         ", "]"}], "\[IndentingNewLine]", 
         "      ", "]"}], ",", " ", "\[IndentingNewLine]", "        ", 
        "\"\<Input\>\"", ",", "\[IndentingNewLine]", "        ", 
        RowBox[{"CellEventActions", "\[Rule]", 
         RowBox[{"{", "\[IndentingNewLine]", "          ", 
          RowBox[{
           RowBox[{"\"\<ReturnKeyDown\>\"", "\[RuleDelayed]", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Paste", "[", "\"\<\\n\>\"", "]"}], ";", 
              RowBox[{"FrontEndExecute", "[", 
               RowBox[{"FrontEndToken", "[", "\"\<MoveNext\>\"", "]"}], "]"}],
               ";"}], ")"}]}], ",", "\[IndentingNewLine]", "          ", 
           RowBox[{"\"\<LeftArrowKeyDown\>\"", "\[RuleDelayed]", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"Paste", "[", "\"\<Left\>\"", "]"}], ";"}], ")"}]}]}], 
          "\[IndentingNewLine]", "    ", "}"}]}], ",", "\[IndentingNewLine]", 
        "        ", 
        RowBox[{"CellEvaluationFunction", "\[Rule]", "$InputTextCellEval"}], 
        ",", "\[IndentingNewLine]", "        ", 
        RowBox[{"CellFrame", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputCellFrame", "]"}]}], ",", 
        "\[IndentingNewLine]", "        ", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"RGBColor", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "InputBackground", "]"}], "/", 
           "255."}], "]"}]}], ",", "\[IndentingNewLine]", "        ", 
        RowBox[{"FontSize", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputFontSize", "]"}]}], ",", 
        "\[IndentingNewLine]", "        ", 
        RowBox[{"FontFamily", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputFontFamily", "]"}]}], ",", 
        "\[IndentingNewLine]", "        ", 
        RowBox[{"ShowGroupOpener", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputShowGroupOpener", "]"}]}], ",", 
        "\[IndentingNewLine]", "        ", 
        RowBox[{"CellLabel", "\[Rule]", "\"\<\>\""}], ",", 
        "\[IndentingNewLine]", "        ", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputCellMargins", "]"}]}], ",", 
        "\[IndentingNewLine]", "        ", 
        RowBox[{"ShowCellLabel", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", "        ", 
        RowBox[{"CellLabelMargins", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputCellLabelMargins", "]"}]}]}], 
       "\[IndentingNewLine]", "   ", "]"}], "\[IndentingNewLine]", "]"}], ";",
      "\[IndentingNewLine]", 
     RowBox[{"NotebookFind", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\< \>\"", ",", 
       "Previous"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Paste", "[", "prompt", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{
  3.6816968603283577`*^9, {3.681697792691951*^9, 3.6816978628110933`*^9}, {
   3.6816979174026947`*^9, 3.681697969114111*^9}, 3.6816981664556227`*^9, 
   3.681698708497139*^9, {3.6816987538092413`*^9, 3.681698804208418*^9}, {
   3.681698864831292*^9, 3.681698867503499*^9}, {3.681698949486549*^9, 
   3.681698965406452*^9}, {3.68169912922795*^9, 3.681699129520103*^9}, {
   3.681699276859376*^9, 3.681699280007118*^9}, {3.681699528210699*^9, 
   3.68169953943125*^9}, {3.6816997523569927`*^9, 3.6816998254918137`*^9}, {
   3.681699871750064*^9, 3.681699872611697*^9}, {3.6817010842289762`*^9, 
   3.681701084308722*^9}, {3.6817011703237886`*^9, 3.681701170935985*^9}, {
   3.681701276083037*^9, 3.681701318770359*^9}, {3.6817015986866627`*^9, 
   3.681701628318366*^9}, 3.681701706909121*^9, {3.6817018403958282`*^9, 
   3.6817018487876167`*^9}, {3.68170202541751*^9, 3.681702028841724*^9}, {
   3.681702063337385*^9, 3.6817020945527773`*^9}, {3.681702125640551*^9, 
   3.681702125793666*^9}, {3.681702163735969*^9, 3.6817021782796993`*^9}, {
   3.681702669217884*^9, 3.681702730705171*^9}, {3.681702885791703*^9, 
   3.681702913071189*^9}, {3.681702964789687*^9, 3.681703063532979*^9}, {
   3.6817129232062807`*^9, 3.681712970821866*^9}, {3.681713240322517*^9, 
   3.681713344874672*^9}, {3.68171342851223*^9, 3.6817134989116583`*^9}, 
   3.681713534702721*^9, 3.68171357655849*^9, {3.681713637293679*^9, 
   3.681713638989521*^9}, {3.681714382319642*^9, 3.681714399908785*^9}, {
   3.6817144647075577`*^9, 3.68171446486738*^9}, {3.682879112938183*^9, 
   3.682879152345663*^9}, {3.682879213865019*^9, 3.682879224808878*^9}, {
   3.6828796585310163`*^9, 3.6828796681629467`*^9}, {3.682879699650738*^9, 
   3.682879699842683*^9}, {3.682879748489794*^9, 3.682879752946199*^9}, {
   3.6828800603020687`*^9, 3.682880083165749*^9}, {3.682880192668538*^9, 
   3.68288020028426*^9}, {3.6828810915997562`*^9, 3.6828811772938147`*^9}, {
   3.6828814638169327`*^9, 3.68288146717697*^9}, {3.682881759411881*^9, 
   3.6828817603668833`*^9}, {3.68288179507504*^9, 3.682881795346992*^9}, {
   3.682881870083136*^9, 3.682881871505671*^9}, {3.682881985343872*^9, 
   3.682882005423284*^9}, {3.6828821449746943`*^9, 3.682882171964361*^9}, {
   3.6828822186036587`*^9, 3.682882319258189*^9}, {3.6828823634651213`*^9, 
   3.68288241388041*^9}, {3.682882460615571*^9, 3.6828826583887243`*^9}, {
   3.682882708675393*^9, 3.682882746051035*^9}, {3.68288279990586*^9, 
   3.682882879457576*^9}, {3.68288300817446*^9, 3.682883094220798*^9}, 
   3.682883143596459*^9, {3.682883425352643*^9, 3.682883443464204*^9}, {
   3.682883782563496*^9, 3.682883813859213*^9}, {3.682888075836977*^9, 
   3.682888100028653*^9}, {3.682889941799213*^9, 3.682889951991055*^9}, 
   3.682904806528961*^9, {3.682905012574297*^9, 3.682905013806254*^9}, {
   3.682905134444785*^9, 3.682905137036483*^9}, {3.682905351945889*^9, 
   3.682905362345914*^9}, {3.6829055330157337`*^9, 3.6829055505837812`*^9}, {
   3.682905601544222*^9, 3.6829056027751093`*^9}, {3.6829059421147623`*^9, 
   3.682905948050703*^9}, {3.682968826642181*^9, 3.6829688283846493`*^9}, {
   3.6829688596818647`*^9, 3.682968861105874*^9}, {3.6829689223370256`*^9, 
   3.682968926848692*^9}, {3.682968960861677*^9, 3.682968973776904*^9}, {
   3.682969051983365*^9, 3.682969078862852*^9}, {3.682969510042509*^9, 
   3.682969555912897*^9}, {3.68297116322859*^9, 3.6829711787399273`*^9}, {
   3.682971496575585*^9, 3.6829715152155113`*^9}, {3.682993799393681*^9, 
   3.682993841489492*^9}, {3.682998534116321*^9, 3.6829985634144163`*^9}, {
   3.6830008099401817`*^9, 3.683000850089793*^9}, {3.683000880202559*^9, 
   3.683000918952899*^9}, 3.683000950200424*^9, {3.6830011709498053`*^9, 
   3.683001221925465*^9}, {3.683001254997204*^9, 3.6830012935405893`*^9}, {
   3.683002608180086*^9, 3.683002619284069*^9}, {3.683002779825983*^9, 
   3.68300280199091*^9}, 3.68300283204945*^9, {3.683003228012485*^9, 
   3.683003233723921*^9}, {3.683003596728036*^9, 3.6830035979124107`*^9}, {
   3.683003891155197*^9, 3.683003897668232*^9}, {3.683003962179687*^9, 
   3.6830039760673*^9}}],

Cell[BoxData["position"], "Input",
 CellChangeTimes->{{3.6830034933494577`*^9, 3.683003495015626*^9}}],

Cell[BoxData[
 RowBox[{"\"\<LeftArrowKeyDown\>\"", "\[RuleDelayed]", " ", 
  RowBox[{"FrontEndExecute", "[", 
   RowBox[{"FrontEndToken", "[", "\"\<MovePrevious\>\"", "]"}], 
   "]"}]}]], "Input"],

Cell[BoxData[
 RowBox[{"\"\<LeftArrowKeyDown\>\"", "\[RuleDelayed]", " ", 
  RowBox[{"SelectionMove", "[", 
   RowBox[{
    RowBox[{"EvaluationNotebook", "[", "]"}], ","}], "]"}]}]], "Input"],

Cell[BoxData["Selection"], "Input",
 CellChangeTimes->{3.683002891967725*^9}],

Cell[BoxData[
 RowBox[{"EvaluationNotebook", "[", "]"}]], "Input",
 CellChangeTimes->{3.683002826383699*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"{", 
   RowBox[{"240", ",", "240", ",", "240"}], "}"}], "/", "255."}]], "Input",
 CellChangeTimes->{{3.682879994541836*^9, 3.682880037934848*^9}}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
  "0.9411764705882353`", ",", "0.9411764705882353`", ",", 
   "0.9411764705882353`"}], "}"}]], "Output",
 CellChangeTimes->{{3.682880033328577*^9, 3.682880038728293*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Would you like to continue? \>\"", ",", "Print"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.681698317381261*^9, {3.681698985725501*^9, 3.6816989864934673`*^9}, {
   3.681699987057501*^9, 3.68169998720975*^9}, {3.6817000544647903`*^9, 
   3.681700066000618*^9}, {3.6817129924847593`*^9, 3.681713020388446*^9}, {
   3.681713547998192*^9, 3.681713549310322*^9}, 3.6817143576682863`*^9}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? "}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellFrame->False,
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$8571], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.682880087461556*^9},
 Background->
  RGBColor[{0.9411764705882353, 0.9411764705882353, 0.9411764705882353}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$TextBackground", "=", 
   RowBox[{"{", 
    RowBox[{"240", ",", "250", ",", "255"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Would you like to continue? \>\"", ",", "Print"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.681698317381261*^9, {3.681698985725501*^9, 3.6816989864934673`*^9}, {
   3.681699987057501*^9, 3.68169998720975*^9}, {3.6817000544647903`*^9, 
   3.681700066000618*^9}, {3.6817129924847593`*^9, 3.681713020388446*^9}, {
   3.681713547998192*^9, 3.681713549310322*^9}, 3.6817143576682863`*^9, {
   3.682880264021798*^9, 3.6828802998660803`*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? "}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellFrame->False,
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$8601], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.68288030062175*^9},
 Background->RGBColor[{0.9411764705882353, 0.9803921568627451, 1.}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$TextBackground", "=", 
   RowBox[{"{", 
    RowBox[{"242", ",", "242", ",", "242"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Would you like to continue? \>\"", ",", "Print"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.681698317381261*^9, {3.681698985725501*^9, 3.6816989864934673`*^9}, {
   3.681699987057501*^9, 3.68169998720975*^9}, {3.6817000544647903`*^9, 
   3.681700066000618*^9}, {3.6817129924847593`*^9, 3.681713020388446*^9}, {
   3.681713547998192*^9, 3.681713549310322*^9}, 3.6817143576682863`*^9, {
   3.682880264021798*^9, 3.6828802998660803`*^9}, {3.682880366777268*^9, 
   3.6828804561998053`*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? "}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellFrame->False,
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$8632], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.682880456946385*^9},
 Background->
  RGBColor[{0.9490196078431372, 0.9490196078431372, 0.9490196078431372}]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TextBackground", "=", 
   RowBox[{"{", 
    RowBox[{"240", ",", "240", ",", "240"}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? vvxvx\n"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$5372], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6828791651108637`*^9},
 Background->RGBColor[240, 240, 240]],

Cell[BoxData["\<\"vvxvx\\n\"\>"], "Print",
 CellChangeTimes->{3.6828791709453917`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? h"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322850], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681714403218668*^9}],

Cell[BoxData["\<\"h\"\>"], "Print",
 CellChangeTimes->{3.681714406711739*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Would you like to continue? \>\"", ",", "Print", ",", "True"}],
   "]"}]], "Input",
 CellChangeTimes->{
  3.681698317381261*^9, {3.681698985725501*^9, 3.6816989864934673`*^9}, {
   3.681699987057501*^9, 3.68169998720975*^9}, {3.6817000544647903`*^9, 
   3.681700066000618*^9}, {3.6817129924847593`*^9, 3.681713020388446*^9}, {
   3.681713547998192*^9, 3.681713549310322*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? ooo"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322881], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681714508128354*^9}],

Cell[BoxData["\<\"Would you like to continue? ooo\"\>"], "Print",
 CellChangeTimes->{3.681714514187169*^9}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? "}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322878], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681714498072452*^9}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? ggggggg"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322870], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681714469348311*^9}],

Cell[BoxData["\<\"Would you like to continue? ggggggg\"\>"], "Print",
 CellChangeTimes->{3.6817144733437*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = 
   "Would you like to continue? hhhhhhhhhh"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322861], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6817144400439253`*^9}],

Cell[BoxData["\<\"ould you like to continue? hhhhhhhhhh\"\>"], "Print",
 CellChangeTimes->{3.681714451270773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputText", "[", "\"\<> \>\"", "]"}]], "Input",
 CellChangeTimes->{{3.681701395776305*^9, 3.681701420687997*^9}, {
   3.6817014764153357`*^9, 3.681701479359483*^9}, 3.681701716364593*^9, {
   3.6817022063430643`*^9, 3.681702211638843*^9}, 3.681702787391902*^9, 
   3.681703619877927*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "> a\nb\nc"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$37558], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6817036728897953`*^9}],

Cell[BoxData["\<\"a\\nb\\nc\"\>"], "Print",
 CellChangeTimes->{3.6817036870621557`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_String", "]"}], ":=", " ", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<*******  \>\"", "<>", "x", "<>", "\"\<  *******\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681703733636592*^9, 3.681703752861837*^9}}],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Highlight it: \>\"", ",", "g"}], "]"}]], "Input",
 CellChangeTimes->{{3.681703080412414*^9, 3.6817030815644693`*^9}, {
  3.6817037613322773`*^9, 3.6817037846119947`*^9}}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Highlight it: Some stuff here."}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$37596], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681703786665447*^9}],

Cell[BoxData["\"\<*******  Some stuff heren>   *******\>\""], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6817038049381943`*^9, 3.6817139137247868`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"InputText", "[", 
   RowBox[{"\"\<: \>\"", ",", " ", 
    RowBox[{
     RowBox[{"Set", "[", 
      RowBox[{"x1", ",", "#"}], " ", "]"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.681703995041638*^9, 3.68170407396883*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = ": 3 4 5"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$39022], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681707652112208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x1"], "Input",
 CellChangeTimes->{{3.6817040889562063`*^9, 3.6817040891525993`*^9}}],

Cell[BoxData["\<\"3 4 5\"\>"], "Output",
 CellChangeTimes->{3.681704090313931*^9, 3.681707667031249*^9}]
}, Open  ]],

Cell["This is what we really want,", "Text",
 CellChangeTimes->{{3.681703833586915*^9, 3.681703844131214*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDFViewer", "[", "]"}]], "Input",
 CellChangeTimes->{{3.681706157124901*^9, 3.681706162065132*^9}}],

Cell[BoxData["\<\"oku \
/home/andrewn/Mirror_leo/Mathematica_files/2015/Project-tpTensor/tpTensor-0.5/\
OptionalPackages/TeXit_TeXit/main.pdf &\"\>"], "Output",
 CellChangeTimes->{3.6817061626438437`*^9, 3.68170768808146*^9, 
  3.681709248912078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<\>\"", ",", "TeXit"}], "]"}]], "Input",
 CellChangeTimes->{{3.681704157007428*^9, 3.681704170655612*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "jnvlj\nkvsknv"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$39063], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6817086815857153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<\>\"", ",", "TeXit"}], "]"}]], "Input",
 CellChangeTimes->{{3.681704157007428*^9, 3.681704170655612*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = 
   "The contents of this cell is sent to TeXit as a string every time \n\
shift-enter is pressed in this cell. It will get \nappended to the file \
body.tex, then TeXed, and then displayed."}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$38010], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6817041771721973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDFViewer", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6817094565098133`*^9, 3.6817094622397327`*^9}}],

Cell[BoxData["\<\"oku \
/home/andrewn/Mirror_leo/Mathematica_files/2015/Project-tpTensor/tpTensor-0.5/\
OptionalPackages/TeXit_TeXit/main.pdf &\"\>"], "Output",
 CellChangeTimes->{{3.6817094628771553`*^9, 3.681709477529217*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["InputText[ ]    ---  new code based on text cell.", "Subsection"],

Cell["\<\
For special characters see:  tutorial/StructuralElementsAndKeyboardCharacters \
 (\[LeftArrow] highlight and use F1)
...eg. invisible comma for index lists.\
\>", "Text",
 CellChangeTimes->{{3.682970049231207*^9, 3.682970143583846*^9}, {
  3.682970212190852*^9, 3.682970225006811*^9}, {3.68297028619014*^9, 
  3.6829702984939213`*^9}},
 CellID->928141244],

Cell[TextData[{
 "We want to use  InputField[ ]   rather than just using quoted strings, \
because then  \[OpenCurlyDoubleQuote]\\\[CloseCurlyDoubleQuote]  can be typed \
easily (rather than \[OpenCurlyDoubleQuote]\\\\\[CloseCurlyDoubleQuote]) for ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 " input.\nBut  InputField[ ]   ignores  Enter  ( ReturnKeyDown ).  So it \
needs some work..."
}], "Text",
 CellChangeTimes->{{3.6817006835285473`*^9, 3.6817007999683247`*^9}, {
  3.6828384759313917`*^9, 3.682838483867321*^9}, {3.6828807906757183`*^9, 
  3.682880849506692*^9}}],

Cell["\<\
We put an initial \[OpenCurlyDoubleQuote] \[CloseCurlyDoubleQuote]  in the \
input box and then backwards search for  \[OpenCurlyDoubleQuote] \
\[CloseCurlyDoubleQuote]  to put the cursor in the right place to start \
typing. Then we paste the prompt.
It requires that  the evaluation function not be a module variable (like \
{len,str,ans} ), so we call it  $InputTextCellEval.
When  Shift+Enter  is pressed, the function specified by the 2nd argument is \
applied to the string and the result is returned.  
If no 2nd arg is given, then the assumed function is Print.
If no output is wanted from a function  f  that usually gives output, then \
use   ( f [#] ; ) &   as the 2nd argument instead of  f.\
\>", "Text"],

Cell["\<\
The default is to keep prompts (True), in which case the prompt is just \
initial text. 
Discardable prompts, like  \[OpenCurlyDoubleQuote]Enter a value of x :\
\[CloseCurlyDoubleQuote]   should be done as cell labels,  so that one can \
not type over them.
Disappearing prompts like  \[OpenCurlyDoubleQuote]Type your name in this box\
\[CloseCurlyDoubleQuote]  should listen for the first character typed and \
then re-draw as empty. \
\>", "Text"],

Cell[BoxData[{
 RowBox[{"Clear", "[", "InputText", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InputText", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"InputBackground", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"242", ",", "242", ",", "242"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"FontSize", "\[Rule]", "18"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InputFontFamily", "\[Rule]", "\"\<Utopia\>\""}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InputCellFrame", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InputShowGroupOpener", "\[Rule]", "True"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"InputCellMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"66", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InputCellLabelMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]}], "Input",
 InitializationCell->True],

Cell[BoxData[{
 RowBox[{
  RowBox[{"InputText", "[", 
   RowBox[{"p", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"InputText", "[", 
   RowBox[{"\"\<\>\"", ",", "Print", ",", "True", ",", "p"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputText", "[", 
   RowBox[{"prompt_String", ",", 
    RowBox[{"p", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"InputText", "[", 
   RowBox[{"prompt", ",", "Print", ",", "True", ",", "p"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputText", "[", 
   RowBox[{"prompt_String", ",", "f_", ",", 
    RowBox[{"p", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"InputText", "[", 
   RowBox[{"prompt", ",", "f", ",", "True", ",", "p"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputText", "[", 
   RowBox[{"prompt_String", ",", "f_", ",", " ", "keepprompt_", ",", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"Module", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"len", ",", "str", ",", "ans", ",", "fEval"}], "}"}], ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"If", "[", 
      RowBox[{"keepprompt", ",", 
       RowBox[{"len", ":=", "0"}], ",", 
       RowBox[{"len", " ", ":=", " ", 
        RowBox[{"StringLength", "[", "prompt", "]"}]}]}], "]"}], ";", 
     "\[IndentingNewLine]", 
     RowBox[{"fEval", " ", ":=", " ", 
      RowBox[{
       RowBox[{"f", "[", 
        RowBox[{"StringDrop", "[", 
         RowBox[{
          RowBox[{"First", "[", 
           RowBox[{"List", "[", "#", "]"}], "]"}], ",", "len"}], "]"}], "]"}],
        "&"}]}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", "Next", ",", "Cell"}],
         "]"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"NotebookDelete", "[", 
      RowBox[{"NextCell", "[", "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"CellPrint", "[", 
      RowBox[{"Cell", "[", "\[IndentingNewLine]", 
       RowBox[{
       "\"\< \>\"", ",", "\[IndentingNewLine]", "\"\<Text\>\"", ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Evaluatable", "\[Rule]", "True"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"CellEvaluationFunction", "\[Rule]", "fEval"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"CellAutoOverwrite", "\[Rule]", "True"}], ","}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{"CellFrame", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputCellFrame", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"Background", "\[Rule]", 
         RowBox[{"RGBColor", "[", 
          RowBox[{
           RowBox[{"OptionValue", "[", "InputBackground", "]"}], "/", 
           "255."}], "]"}]}], ",", "\[IndentingNewLine]", 
        RowBox[{"FontSize", "\[Rule]", 
         RowBox[{"OptionValue", "[", "FontSize", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"FontFamily", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputFontFamily", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ShowGroupOpener", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputShowGroupOpener", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"CellLabel", "\[Rule]", "\"\<\>\""}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"CellMargins", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputCellMargins", "]"}]}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"ShowCellLabel", "\[Rule]", "False"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"CellLabelMargins", "\[Rule]", 
         RowBox[{"OptionValue", "[", "InputCellLabelMargins", "]"}]}]}], 
       "\[IndentingNewLine]", "]"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"NotebookFind", "[", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", "\"\< \>\"", ",", 
         "Previous"}], "]"}], ";"}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{"SelectionMove", "[", 
      RowBox[{
       RowBox[{"EvaluationNotebook", "[", "]"}], ",", "Previous", ",", 
       "Cell"}], "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"Paste", "[", "prompt", "]"}], ";"}]}], "\[IndentingNewLine]", 
   "]"}]}]}], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Would you like to continue? \>\"", ",", "Print"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.681698317381261*^9, {3.681698985725501*^9, 3.6816989864934673`*^9}, {
   3.681699987057501*^9, 3.68169998720975*^9}, {3.6817000544647903`*^9, 
   3.681700066000618*^9}, {3.6817129924847593`*^9, 3.681713020388446*^9}, {
   3.681713547998192*^9, 3.681713549310322*^9}, 3.6817143576682863`*^9}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? "}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellFrame->False,
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$8571], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.682880087461556*^9},
 Background->
  RGBColor[{0.9411764705882353, 0.9411764705882353, 0.9411764705882353}]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$TextBackground", "=", 
   RowBox[{"{", 
    RowBox[{"240", ",", "250", ",", "255"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Would you like to continue? \>\"", ",", "Print"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.681698317381261*^9, {3.681698985725501*^9, 3.6816989864934673`*^9}, {
   3.681699987057501*^9, 3.68169998720975*^9}, {3.6817000544647903`*^9, 
   3.681700066000618*^9}, {3.6817129924847593`*^9, 3.681713020388446*^9}, {
   3.681713547998192*^9, 3.681713549310322*^9}, 3.6817143576682863`*^9, {
   3.682880264021798*^9, 3.6828802998660803`*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? "}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellFrame->False,
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$8601], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.68288030062175*^9},
 Background->RGBColor[{0.9411764705882353, 0.9803921568627451, 1.}]]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"$TextBackground", "=", 
   RowBox[{"{", 
    RowBox[{"242", ",", "242", ",", "242"}], "}"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Would you like to continue? \>\"", ",", "Print"}], 
  "]"}]}], "Input",
 CellChangeTimes->{
  3.681698317381261*^9, {3.681698985725501*^9, 3.6816989864934673`*^9}, {
   3.681699987057501*^9, 3.68169998720975*^9}, {3.6817000544647903`*^9, 
   3.681700066000618*^9}, {3.6817129924847593`*^9, 3.681713020388446*^9}, {
   3.681713547998192*^9, 3.681713549310322*^9}, 3.6817143576682863`*^9, {
   3.682880264021798*^9, 3.6828802998660803`*^9}, {3.682880366777268*^9, 
   3.6828804561998053`*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? "}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellFrame->False,
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$8632], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.682880456946385*^9},
 Background->
  RGBColor[{0.9490196078431372, 0.9490196078431372, 0.9490196078431372}]]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"$TextBackground", "=", 
   RowBox[{"{", 
    RowBox[{"240", ",", "240", ",", "240"}], "}"}]}], ";"}]], "Input"],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? vvxvx\n"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$5372], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6828791651108637`*^9},
 Background->RGBColor[240, 240, 240]],

Cell[BoxData["\<\"vvxvx\\n\"\>"], "Print",
 CellChangeTimes->{3.6828791709453917`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? h"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322850], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681714403218668*^9}],

Cell[BoxData["\<\"h\"\>"], "Print",
 CellChangeTimes->{3.681714406711739*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Would you like to continue? \>\"", ",", "Print", ",", "True"}],
   "]"}]], "Input",
 CellChangeTimes->{
  3.681698317381261*^9, {3.681698985725501*^9, 3.6816989864934673`*^9}, {
   3.681699987057501*^9, 3.68169998720975*^9}, {3.6817000544647903`*^9, 
   3.681700066000618*^9}, {3.6817129924847593`*^9, 3.681713020388446*^9}, {
   3.681713547998192*^9, 3.681713549310322*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? ooo"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322881], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681714508128354*^9}],

Cell[BoxData["\<\"Would you like to continue? ooo\"\>"], "Print",
 CellChangeTimes->{3.681714514187169*^9}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? "}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322878], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681714498072452*^9}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Would you like to continue? ggggggg"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322870], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681714469348311*^9}],

Cell[BoxData["\<\"Would you like to continue? ggggggg\"\>"], "Print",
 CellChangeTimes->{3.6817144733437*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = 
   "Would you like to continue? hhhhhhhhhh"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$322861], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6817144400439253`*^9}],

Cell[BoxData["\<\"ould you like to continue? hhhhhhhhhh\"\>"], "Print",
 CellChangeTimes->{3.681714451270773*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputText", "[", "\"\<> \>\"", "]"}]], "Input",
 CellChangeTimes->{{3.681701395776305*^9, 3.681701420687997*^9}, {
   3.6817014764153357`*^9, 3.681701479359483*^9}, 3.681701716364593*^9, {
   3.6817022063430643`*^9, 3.681702211638843*^9}, 3.681702787391902*^9, 
   3.681703619877927*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "> a\nb\nc"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$37558], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6817036728897953`*^9}],

Cell[BoxData["\<\"a\\nb\\nc\"\>"], "Print",
 CellChangeTimes->{3.6817036870621557`*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"g", "[", "x_String", "]"}], ":=", " ", 
  RowBox[{"Print", "[", 
   RowBox[{"\"\<*******  \>\"", "<>", "x", "<>", "\"\<  *******\>\""}], 
   "]"}]}]], "Input",
 CellChangeTimes->{{3.681703733636592*^9, 3.681703752861837*^9}}],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<Highlight it: \>\"", ",", "g"}], "]"}]], "Input",
 CellChangeTimes->{{3.681703080412414*^9, 3.6817030815644693`*^9}, {
  3.6817037613322773`*^9, 3.6817037846119947`*^9}}]
}, Open  ]],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "Highlight it: Some stuff here."}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$37596], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681703786665447*^9}],

Cell[BoxData["\<\"*******  Some stuff heren>   *******\"\>"], "Print",
 GeneratedCell->False,
 CellAutoOverwrite->False,
 CellChangeTimes->{3.6817038049381943`*^9, 3.6817139137247868`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"\[IndentingNewLine]", 
  RowBox[{"InputText", "[", 
   RowBox[{"\"\<: \>\"", ",", " ", 
    RowBox[{
     RowBox[{"Set", "[", 
      RowBox[{"x1", ",", "#"}], " ", "]"}], "&"}]}], "]"}]}]], "Input",
 CellChangeTimes->{{3.681703995041638*^9, 3.68170407396883*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = ": 3 4 5"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$39022], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.681707652112208*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["x1"], "Input",
 CellChangeTimes->{{3.6817040889562063`*^9, 3.6817040891525993`*^9}}],

Cell[BoxData["\<\"3 4 5\"\>"], "Output",
 CellChangeTimes->{3.681704090313931*^9, 3.681707667031249*^9}]
}, Open  ]],

Cell["This is what we really want,", "Text",
 CellChangeTimes->{{3.681703833586915*^9, 3.681703844131214*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDFViewer", "[", "]"}]], "Input",
 CellChangeTimes->{{3.681706157124901*^9, 3.681706162065132*^9}}],

Cell[BoxData["\<\"oku \
/home/andrewn/Mirror_leo/Mathematica_files/2015/Project-tpTensor/tpTensor-0.5/\
OptionalPackages/TeXit_TeXit/main.pdf &\"\>"], "Output",
 CellChangeTimes->{3.6817061626438437`*^9, 3.68170768808146*^9, 
  3.681709248912078*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<\>\"", ",", "TeXit"}], "]"}]], "Input",
 CellChangeTimes->{{3.681704157007428*^9, 3.681704170655612*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = "jnvlj\nkvsknv"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$39063], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6817086815857153`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<\>\"", ",", "TeXit"}], "]"}]], "Input",
 CellChangeTimes->{{3.681704157007428*^9, 3.681704170655612*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = 
   "The contents of this cell is sent to TeXit as a string every time \n\
shift-enter is pressed in this cell. It will get \nappended to the file \
body.tex, then TeXed, and then displayed."}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$38010], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6817041771721973`*^9}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"PDFViewer", "[", "]"}]], "Input",
 CellChangeTimes->{{3.6817094565098133`*^9, 3.6817094622397327`*^9}}],

Cell[BoxData["\<\"oku \
/home/andrewn/Mirror_leo/Mathematica_files/2015/Project-tpTensor/tpTensor-0.5/\
OptionalPackages/TeXit_TeXit/main.pdf &\"\>"], "Output",
 CellChangeTimes->{{3.6817094628771553`*^9, 3.681709477529217*^9}}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["ClearTeX[ ]", "Subsection",
 CellChangeTimes->{{3.681163255251027*^9, 3.681163273922697*^9}, 
   3.681169212248848*^9, {3.6811925129702053`*^9, 3.6811926003182087`*^9}, {
   3.68119406772783*^9, 3.681194103983041*^9}, {3.681273383418953*^9, 
   3.6812734032747087`*^9}, {3.681520786982711*^9, 3.681520810310327*^9}, {
   3.681524032782124*^9, 3.6815240694536657`*^9}, {3.681701037473804*^9, 
   3.681701043893569*^9}, {3.6817104993306103`*^9, 3.681710516994328*^9}, {
   3.682838620441584*^9, 3.682838621321508*^9}}],

Cell["\<\
We don\[CloseCurlyQuote]t want to delete main.tex or main-fragment.tex \
because they are only generated when the package starts and they never \
change, \
\>", "Text",
 CellChangeTimes->{{3.681718247443879*^9, 3.681718303315856*^9}, {
  3.68296752350193*^9, 3.682967579503868*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ClearTeX", "[", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<body0.tex\>\""}], "}"}], "]"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<body.tex\>\""}], "}"}], "]"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<main.log\>\""}], "}"}], "]"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<main.aux\>\""}], "}"}], "]"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<main.out\>\""}], "}"}], "]"}], "]"}], 
     "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<fragment.tex\>\""}], "}"}], "]"}], 
      "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<main-fragment.log\>\""}], "}"}], "]"}],
       "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<main-fragment.aux\>\""}], "}"}], "]"}],
       "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Quiet", "[", 
     RowBox[{"DeleteFile", "[", 
      RowBox[{"FileNameJoin", "[", 
       RowBox[{"{", 
        RowBox[{"$TeXitDir", ",", "\"\<main-fragment.out\>\""}], "}"}], "]"}],
       "]"}], "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"$LastType", "=", "\"\<text\>\""}], ";", "\[IndentingNewLine]", 
    RowBox[{"TeXit", "[", "]"}], ";"}], ")"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
How to remove an input cell and replace it with its output   ---  nothing \
initialized\
\>", "Subsection",
 CellChangeTimes->{{3.681163255251027*^9, 3.681163273922697*^9}, 
   3.681169212248848*^9, {3.6811925129702053`*^9, 3.6811926003182087`*^9}, {
   3.68119406772783*^9, 3.681194103983041*^9}, {3.681273383418953*^9, 
   3.6812734032747087`*^9}, {3.681520786982711*^9, 3.681520810310327*^9}, {
   3.681712483898603*^9, 3.6817125453697147`*^9}, {3.681712587337414*^9, 
   3.6817125908097763`*^9}, {3.6817282106818027`*^9, 3.681728230652974*^9}, 
   3.681729564617216*^9, {3.6818789382047443`*^9, 3.6818789454526443`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  "\"\<http://stackoverflow.com/questions/5908111/how-to-delete-the-input-\
cell-upon-evaluation\>\"", "]"}]], "Input",
 CellChangeTimes->{{3.681711444913583*^9, 3.681711457063343*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{
    False->"\<\"http://stackoverflow.com/questions/5908111/how-to-delete-the-\
input-cell-upon-evaluation\"\>", True->
    StyleBox["\<\"http://stackoverflow.com/questions/5908111/how-to-delete-\
the-input-cell-upon-evaluation\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Hyperlink",
   ButtonData->{
     URL["http://stackoverflow.com/questions/5908111/how-to-delete-the-input-\
cell-upon-evaluation"], None},
   ButtonNote->
    "http://stackoverflow.com/questions/5908111/how-to-delete-the-input-cell-\
upon-evaluation"],
  Annotation[#, 
   "http://stackoverflow.com/questions/5908111/how-to-delete-the-input-cell-\
upon-evaluation", "Hyperlink"]& ]], "Output",
 CellChangeTimes->{{3.6817114494719763`*^9, 3.6817114577222633`*^9}}]
}, Open  ]],

Cell["\<\
Evaluating  2+3 // SelfDestruct  outputs  5 and deletes the input cell,\
\>", "Text",
 CellChangeTimes->{{3.681520825158146*^9, 3.6815208538486137`*^9}, {
  3.681521057965575*^9, 3.681521072485281*^9}, {3.6817107560795383`*^9, 
  3.681710774764141*^9}, {3.68171142549542*^9, 3.681711438519333*^9}, {
  3.681711787988171*^9, 3.681711821186829*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"SetAttributes", "[", 
   RowBox[{"SelfDestruct", ",", " ", "HoldAllComplete"}], "]"}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"SelfDestruct", "[", "e_", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"$FrontEnd", " ", "=!=", " ", "$Failed"}], ",", "\n", "   ", 
      RowBox[{
       RowBox[{"SelectionMove", "[", 
        RowBox[{
         RowBox[{"EvaluationNotebook", "[", "]"}], ",", " ", "All", ",", " ", 
         "EvaluationCell"}], "]"}], ";", " ", "\n", "   ", 
       RowBox[{"NotebookDelete", "[", "]"}]}]}], "]"}], ";", " ", "e"}], 
   ")"}]}]}], "Input",
 CellChangeTimes->{{3.681710626275113*^9, 3.68171062627559*^9}}],

Cell["\<\
....but it only works in the right place if you are at the end of the \
notebook.\
\>", "Text",
 CellChangeTimes->{{3.681711740211615*^9, 3.681711762707753*^9}}],

Cell[BoxData["\[IndentingNewLine]"], "Input",
 CellChangeTimes->{3.681729629008278*^9}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell[BoxData[
 RowBox[{"NotebookDelete", "[", 
  RowBox[{"PreviousCell", "[", "]"}], "]"}]], "Input",
 CellChangeTimes->{{3.681711613361252*^9, 3.681711613361627*^9}, {
  3.681711693581025*^9, 3.68171169974874*^9}},
 CellID->1829249673],

Cell["\<\
....use this to delete the cell above it.
\
\>", "Text",
 CellChangeTimes->{{3.681711883122037*^9, 3.681711913153431*^9}, 
   3.681729626920362*^9}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell["A cell you can delete.", "Text",
 CellChangeTimes->{{3.6817118476342688`*^9, 3.68171186697859*^9}}],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<> \>\"", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", "#", "]"}], ";", 
      RowBox[{"NotebookDelete", "[", 
       RowBox[{"PreviousCell", "[", "]"}], "]"}], ";"}], ")"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.68171200300856*^9, 3.6817120768156757`*^9}, {
  3.681712123599419*^9, 3.681712131407166*^9}}],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<> \>\"", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", "#", "]"}], ";", 
      RowBox[{"NotebookDelete", "[", 
       RowBox[{"PreviousCell", "[", "]"}], "]"}], ";"}], ")"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.68171200300856*^9, 3.6817120768156757`*^9}, {
  3.681712123599419*^9, 3.681712131407166*^9}}],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<> \>\"", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", "#", "]"}], ";", 
      RowBox[{"NotebookDelete", "[", 
       RowBox[{"PreviousCell", "[", "]"}], "]"}], ";"}], ")"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.68171200300856*^9, 3.6817120768156757`*^9}, {
  3.681712123599419*^9, 3.681712131407166*^9}}],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<> \>\"", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", "#", "]"}], ";", 
      RowBox[{"NotebookDelete", "[", 
       RowBox[{"PreviousCell", "[", "]"}], "]"}], ";"}], ")"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.68171200300856*^9, 3.6817120768156757`*^9}, {
  3.681712123599419*^9, 3.681712131407166*^9}}],

Cell[BoxData[
 RowBox[{"InputText", "[", 
  RowBox[{"\"\<> \>\"", ",", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"Print", "[", "#", "]"}], ";", 
      RowBox[{"NotebookDelete", "[", 
       RowBox[{"PreviousCell", "[", "]"}], "]"}], ";"}], ")"}], "&"}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.68171200300856*^9, 3.6817120768156757`*^9}, {
  3.681712123599419*^9, 3.681712131407166*^9}}],

Cell["\<\

Copy these and then try them....\
\>", "Text",
 CellChangeTimes->{{3.6817178503289022`*^9, 3.681717859869935*^9}, 
   3.681732023899186*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"DeleteInputCell", "[", "x_", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"NotebookDelete", "[", 
     RowBox[{"EvaluationCell", "[", "]"}], "]"}], ";", "x"}], 
   ")"}]}]], "Input",
 CellChangeTimes->{{3.6817176233560133`*^9, 3.681717626492606*^9}, {
  3.681717662939404*^9, 3.681717668676468*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "2"], "//", "Expand"}], "//", 
  "DeleteInputCell"}]], "Input",
 CellChangeTimes->{{3.681717471088645*^9, 3.6817174804787827`*^9}, {
  3.681717764778224*^9, 3.681717821769597*^9}, {3.681717906200563*^9, 
  3.681717908345007*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"], "//", "Expand"}], "//", 
  "DeleteInputCell"}]], "Input",
 CellChangeTimes->{{3.681717471088645*^9, 3.6817174804787827`*^9}, {
   3.6817177671302843`*^9, 3.681717788948174*^9}, {3.681717824793449*^9, 
   3.681717833177415*^9}, 3.681717872588081*^9, 3.681717912794826*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "4"], "//", "Expand"}], "//", 
  "DeleteInputCell"}]], "Input",
 CellChangeTimes->{{3.681717770482255*^9, 3.681717792827325*^9}, {
   3.681717825916863*^9, 3.681717839178906*^9}, 3.6817178719803057`*^9, 
   3.681717913713517*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "5"], "//", "Expand"}], "//", 
  "DeleteInputCell"}]], "Input",
 CellChangeTimes->{{3.6817177764579268`*^9, 3.681717796377488*^9}, {
   3.68171782690585*^9, 3.681717871388191*^9}, 3.681717914609622*^9}],

Cell["This is what you get...", "Text",
 CellChangeTimes->{{3.681717880232449*^9, 3.6817178852109213`*^9}}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.6817179266980467`*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", "x"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{3.681717930129436*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"4", " ", "x"}], "+", 
  RowBox[{"6", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"4", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  SuperscriptBox["x", "4"]}]], "Output",
 CellChangeTimes->{3.681717931300185*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"5", " ", "x"}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  RowBox[{"10", " ", 
   SuperscriptBox["x", "3"]}], "+", 
  RowBox[{"5", " ", 
   SuperscriptBox["x", "4"]}], "+", 
  SuperscriptBox["x", "5"]}]], "Output",
 CellChangeTimes->{3.681717932506751*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "3"], "//", "Expand"}], "//", 
  "DeleteInputCell"}]], "Input",
 CellChangeTimes->{{3.681717471088645*^9, 3.6817174804787827`*^9}, {
   3.6817177671302843`*^9, 3.681717788948174*^9}, {3.681717824793449*^9, 
   3.681717833177415*^9}, 3.681717872588081*^9, 3.681717912794826*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "4"], "//", "Expand"}], "//", 
  "DeleteInputCell"}]], "Input",
 CellChangeTimes->{{3.681717770482255*^9, 3.681717792827325*^9}, {
   3.681717825916863*^9, 3.681717839178906*^9}, 3.6817178719803057`*^9, 
   3.681717913713517*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   SuperscriptBox[
    RowBox[{"(", 
     RowBox[{"1", "+", "x"}], ")"}], "5"], "//", "Expand"}], "//", 
  "DeleteInputCell"}]], "Input",
 CellChangeTimes->{{3.6817177764579268`*^9, 3.681717796377488*^9}, {
   3.68171782690585*^9, 3.681717871388191*^9}, 3.681717914609622*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"2", " ", "x"}], "+", 
  SuperscriptBox["x", "2"]}]], "Output",
 CellChangeTimes->{3.6817179526919117`*^9}],

Cell[BoxData[
 RowBox[{"1", "+", 
  RowBox[{"3", " ", "x"}], "+", 
  RowBox[{"3", " ", 
   SuperscriptBox["x", "2"]}], "+", 
  SuperscriptBox["x", "3"]}]], "Output",
 CellChangeTimes->{3.681717975834305*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["InputTeXit[ ] ,   InputTeXitFromFile[ ]", "Subsection"],

Cell[CellGroupData[{

Cell["\<\
These do not clean up after themselves by deleting the calling cell because \
the argument might be useful info.  
This is the function that the user most often uses to generate an   InputText \
  box that sends its contents to get  TeXed  and displayed,\
\>", "Text",
 CellChangeTimes->{{3.68172967605582*^9, 3.6817298278066053`*^9}, {
   3.681730992759821*^9, 3.68173100271159*^9}, {3.681732116426188*^9, 
   3.681732117594179*^9}, {3.682878231908907*^9, 3.682878236069322*^9}, 
   3.6829719801503267`*^9}],

Cell["\<\
The default option values are the same as those for InputText,\
\>", "Text",
 CellChangeTimes->{{3.682975526967979*^9, 3.682975547112928*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "InputTeXit", "]"}], "=", 
   RowBox[{"Options", "[", "InputText", "]"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.682972052502434*^9, 3.6829720941503153`*^9}}],

Cell["Here  p  is assigned the sequence of options,", "Text",
 CellChangeTimes->{{3.682976205983198*^9, 3.682976221358554*^9}, {
  3.682976563002247*^9, 3.6829765715462723`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "InputTeXit", "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"InputTeXit", "[", 
   RowBox[{"p", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"InputText", "[", 
   RowBox[{"\"\<\>\"", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"TeXit", "[", "#", "]"}], ";"}], ")"}], "&"}], ",", "True", 
    ",", "p"}], "]"}]}]}], "Input",
 InitializationCell->True],

Cell[CellGroupData[{

Cell["Check the above use of  OptionsPattern[ ]", "Text",
 CellChangeTimes->{{3.682976646473051*^9, 3.682976693512576*^9}, {
  3.682990209596422*^9, 3.6829902249820347`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"p", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", "p"}]], "Input",
 CellChangeTimes->{{3.682976689798626*^9, 3.6829767180885057`*^9}, 
   3.6829767512559834`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682976730620139*^9, 3.68297675258397*^9}}],

Cell[BoxData[
 RowBox[{"Sequence", "[", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}]}], "]"}]], "Output",
 CellChangeTimes->{{3.682976745176964*^9, 3.682976757934537*^9}}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"p", ":", 
    RowBox[{"OptionsPattern", "[", "InputText", "]"}]}], "]"}], ":=", 
  RowBox[{"{", "p", "}"}]}]], "Input",
 CellChangeTimes->{{3.682977082643587*^9, 3.6829771013953333`*^9}}],

Cell["\<\
If  OptionsPattern[ g ]  has an argument  g, then if  OptionValue[ ]  is used \
on the rhs, it will check that the options given are all options of the \
function g.
If  OptionValue[ ]  is not used (eg, only p is used) then this check is not \
done,\
\>", "Text",
 CellChangeTimes->{{3.682977156050186*^9, 3.68297729358468*^9}, {
  3.6829773318879023`*^9, 3.68297737977559*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"f", "[", 
   RowBox[{"p", ":", 
    RowBox[{"OptionsPattern", "[", "InputText", "]"}]}], "]"}], ":=", 
  RowBox[{"{", 
   RowBox[{"p", ",", 
    RowBox[{"OptionValue", "[", "InputFontSize", "]"}]}], "}"}]}]], "Input",
 CellChangeTimes->{{3.682976689798626*^9, 3.6829767180885057`*^9}, 
   3.6829767512559834`*^9, 3.682976793924549*^9, {3.68297692227769*^9, 
   3.682976944853537*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"f", "[", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"InputCellFrame", "\[Rule]", "False"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.682976807727919*^9, 3.6829768392237787`*^9}, 
   3.682976952197674*^9, {3.6829770597014713`*^9, 3.68297706155585*^9}}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"a\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"InputText\\\"}]\\).\"",2,101,12,28387963945627072980,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.682977126993223*^9}],

Cell[BoxData[
 TemplateBox[{
  "OptionValue","nodef",
   "\"Unknown option \\!\\(\\*RowBox[{\\\"\\\\\\\"b\\\\\\\"\\\"}]\\) for \
\\!\\(\\*RowBox[{\\\"InputText\\\"}]\\).\"",2,101,13,28387963945627072980,
   "Local"},
  "MessageTemplate"]], "Message", "MSG",
 CellChangeTimes->{3.6829771269988728`*^9}],

Cell[BoxData[
 RowBox[{"{", 
  RowBox[{
   RowBox[{"a", "\[Rule]", "1"}], ",", 
   RowBox[{"b", "\[Rule]", "2"}], ",", 
   RowBox[{"InputCellFrame", "\[Rule]", "False"}], ",", "14"}], 
  "}"}]], "Output",
 CellChangeTimes->{
  3.682976810117684*^9, 3.682976840254137*^9, {3.682976958894437*^9, 
   3.682976982034309*^9}, {3.6829770639544563`*^9, 3.682977127000599*^9}}]
}, Open  ]]
}, Open  ]],

Cell["\<\
These are similar, but allow for a pre-filled text input box.
The user can delete the calling cell by using the mouse.  The text input box \
will still keep working....  each time a 
Shift-Enter is done the text will get  TeXed  and displayed,\
\>", "Text",
 CellChangeTimes->{{3.68172967605582*^9, 3.6817298278066053`*^9}, {
   3.681730992759821*^9, 3.68173100271159*^9}, {3.6817310571070633`*^9, 
   3.6817313878351088`*^9}, 3.682971993463382*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InputTeXit", "[", 
   RowBox[{"text_String", ",", 
    RowBox[{"p", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"InputText", "[", 
   RowBox[{"text", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"TeXit", "[", "#", "]"}], ";"}], ")"}], "&"}], ",", "True", 
    ",", "p"}], "]"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
.....if present, the string argument is used as initial content of the input \
box. 
Instead of passing a string, the initial content could come from a file using \
this,\
\>", "Text",
 CellChangeTimes->{{3.681730293120347*^9, 3.681730427534828*^9}, {
  3.681730550825809*^9, 3.6817305707329597`*^9}, {3.681730888793209*^9, 
  3.6817308938254843`*^9}, {3.681731409058902*^9, 3.681731425426564*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InputTeXitFromFile", "[", 
   RowBox[{"f_String", ",", 
    RowBox[{"p", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", " ", 
  RowBox[{"InputTeXit", "[", 
   RowBox[{
    RowBox[{"ReadFile", "[", "f", "]"}], ",", "p"}], "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681719321462965*^9, 3.68171941189468*^9}, 
   3.6817200201905203`*^9, {3.681730608524784*^9, 3.681730619641255*^9}, {
   3.682990251816228*^9, 3.6829902670380096`*^9}}],

Cell["\<\

Since the user will want to call   InputTeXit [ ]  for every block of text to \
be TeXed, we want a convenient alias. 
We also want to clean up by deleting the cell that we used to start  \
InputTeXit[ ]. 

If you need to use the letters  o  or  iota  (Esc i Esc)  for something else \
just clear them,\
\>", "Text",
 CellChangeTimes->{{3.681154630279324*^9, 3.681154650343099*^9}, {
  3.6811551427364483`*^9, 3.681155143072254*^9}, {3.681709599389513*^9, 
  3.681709604125407*^9}, {3.681710098903233*^9, 3.6817101008713627`*^9}, {
  3.681712374987977*^9, 3.681712424667745*^9}, {3.6817183532666817`*^9, 
  3.6817183592345657`*^9}, {3.68171910268132*^9, 3.681719176664556*^9}, {
  3.681729843637898*^9, 3.681729954420535*^9}, {3.681730247574862*^9, 
  3.681730266080817*^9}, {3.681927597811893*^9, 3.681927610707659*^9}, {
  3.68287827746036*^9, 3.6828783039481707`*^9}, {3.682878337827458*^9, 
  3.682878360515193*^9}, {3.682878484785843*^9, 3.682878582704372*^9}, {
  3.682878613327827*^9, 3.6828786227037907`*^9}}],

Cell[BoxData[{
 RowBox[{"Clear", "[", "o", "]"}], "\[IndentingNewLine]", 
 RowBox[{"o", ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"InputTeXit", "[", "]"}], ";", 
    RowBox[{"NotebookDelete", "[", 
     RowBox[{"EvaluationCell", "[", "]"}], "]"}], ";"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.681719018490713*^9, 3.681719057514406*^9}, {
  3.6819274538781757`*^9, 3.6819274672378807`*^9}}]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"Clear", "[", "\[Iota]", "]"}], "\[IndentingNewLine]", 
 RowBox[{"\[Iota]", ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"InputTeXit", "[", "]"}], ";", 
    RowBox[{"NotebookDelete", "[", 
     RowBox[{"EvaluationCell", "[", "]"}], "]"}], ";"}], ")"}]}]}], "Input",
 CellChangeTimes->{{3.681719018490713*^9, 3.681719057514406*^9}, {
  3.6819274538781757`*^9, 3.6819274672378807`*^9}, {3.682878592160515*^9, 
  3.682878597126018*^9}}],

Cell["\<\
.... the proper Mathematica way to do this is to have,  e.g.,  right-click \
menu items for inserting cells of non-default type. 
We do that later.\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["InputTextFromFile[ ]   and   EditFile[ ]", "Subsection",
 CellChangeTimes->{{3.681163255251027*^9, 3.681163273922697*^9}, 
   3.681169212248848*^9, {3.6811925129702053`*^9, 3.6811926003182087`*^9}, {
   3.68119406772783*^9, 3.681194103983041*^9}, {3.681273383418953*^9, 
   3.6812734032747087`*^9}, {3.681520786982711*^9, 3.681520810310327*^9}, {
   3.681712483898603*^9, 3.6817125453697147`*^9}, {3.681712587337414*^9, 
   3.6817125908097763`*^9}, {3.6817282106818027`*^9, 3.681728230652974*^9}, 
   3.681729449130554*^9, {3.6817295475453453`*^9, 3.681729556137227*^9}, {
   3.681730672747726*^9, 3.681730692899444*^9}}],

Cell["\<\
This is a version of   InputText   that initially fills its box with the \
contents of a file,\
\>", "Text",
 CellChangeTimes->{{3.681717114818286*^9, 3.681717161282125*^9}, 
   3.681729967348432*^9, 3.681731556144918*^9, {3.681731588816571*^9, 
   3.681731656847777*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"InputTextFromFile", "[", 
   RowBox[{"f_String", ",", "g_"}], "]"}], ":=", " ", 
  RowBox[{"InputText", "[", 
   RowBox[{
    RowBox[{"ReadFile", "[", "f", "]"}], ",", "g", ",", "True"}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681716709063291*^9, 3.681716743767308*^9}, {
   3.6817170428192377`*^9, 3.68171704496314*^9}, {3.681717075394693*^9, 
   3.68171707726016*^9}, {3.681719254711815*^9, 3.68171927640807*^9}, {
   3.6817193984543123`*^9, 3.681719406367346*^9}, 3.681719524356588*^9, 
   3.6817199933589687`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"InputTextFromFile", "[", 
  RowBox[{
   RowBox[{"$TeXitDir", "<>", "\"\</postamble\>\""}], ",", "Print"}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.681717205921228*^9, 3.6817172292814903`*^9}, {
  3.68171943301366*^9, 3.681719434598092*^9}, {3.681719472661313*^9, 
  3.681719473253584*^9}, {3.681719732258082*^9, 3.681719739329618*^9}}],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = 
   "StringDrop[                                                           , \
len$16074]\n           %\n           %  Any changes to this file will be \
lost.\n           %  This file is recre  ated when the TeXit package is \
loaded.\n           %\n           %  See:  ? PostambleFile\n           %\n    \
       \\end{document}\n"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$16150], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.6818797948716383`*^9}],

Cell["\<\
A simple file editor. Every time Shift-Enter is done, the text will get saved \
back to the file that it originally came from,\
\>", "Text",
 CellChangeTimes->{{3.681717114818286*^9, 3.681717161282125*^9}, 
   3.681729967348432*^9, 3.681731556144918*^9, {3.681731588816571*^9, 
   3.681731656847777*^9}, {3.681731808509815*^9, 3.6817318783170424`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"EditFile", "[", "f_String", "]"}], ":=", " ", 
  RowBox[{"InputTextFromFile", "[", 
   RowBox[{"f", ",", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"WriteString", "[", 
        RowBox[{"f", ",", "#"}], "]"}], ";", 
       RowBox[{"Close", "[", "f", "]"}], ";"}], ")"}], "&"}]}], 
   "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.681719601347271*^9, 3.681719635011238*^9}, {
  3.68171985264047*^9, 3.681719897360963*^9}}]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"EditFile", "[", 
  RowBox[{"$TeXitDir", "<>", "\"\</postamble\>\""}], "]"}]], "Input"],

Cell[BoxData[
 TagBox[
  DynamicModuleBox[{$CellContext`s = 
   "\n%\n%  Any changes to thi  s file will be lost.\n%  This file is es t \
thi  s file will be lost.\n%  This file is es to thi  s file will be lost.\n% \
 This file is recreo thi  s file will be lost.\n%  This file is recre thi  s \
file will be lost.\n%  This file is es to thi  s file will be lost.\n%  This \
file is recreated when the TeXit package is loaded.\n%\n%  See:  ? \
Postarecreated when the TeXit package is loaded.\n%\n%  See:  ? PostambleFile\
\n%\n\\end{document}\n"}, 
   InputFieldBox[Dynamic[$CellContext`s], String,
    Appearance->"Frameless",
    FieldSize->120],
   DynamicModuleValues:>{}],
  InputField[
   Setting[#], String]& ]], "Input",
 CellEvaluationFunction->(ToExpression[
   RowBox[{"$InputTextFunction[StringDrop[Setting[", #, 
     StringJoin["], ", 
      ToString[$CellContext`len$4504], "]];"]}]]& ),
 GeneratedCell->True,
 CellAutoOverwrite->True,
 CellEventActions->{"ReturnKeyDown" :> Paste["\n"]},
 CellChangeTimes->{3.682839493006757*^9}]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["TeXitSection[ ]   --- first idea, nothing initialized. ", "Subsection"],

Cell["\<\
The idea was to provide a   Section[ label ]   command that would output a \
text box, wrap its output with \\section{ } , followed by \\label{ }.
The   Section[ label ]   command would not be cleaned-up  (cell deleted on \
Shift-Enter) so that one could see the  label.
However, this only works on 1st pass. On a 2nd run  (eg. to get a nice \
tex-file)  the command would generate another text-box, so would
first have to delete the next (old) cell, in which case we loose the text \
that we typed in as section title. So it would have to read the title and 
put it in, or have a run-only-once attribute, or something. It\
\[CloseCurlyQuote]s messy. 

It is better that any commands that generate text boxes get cleaned-up, in \
which case they can have no arguments like tex labels.
If they are cleaned-up, then they might as well not exist as type-in \
functions (?)  and just appear as menu items for cell intertions.
I.e., this should be done using a style sheet and new cell styles.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TeXitSection", "]"}], "=", 
   RowBox[{"Options", "[", "InputText", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"SetOptions", "[", 
   RowBox[{"TeXitSection", ",", 
    RowBox[{"FontSize", "\[Rule]", "48"}]}], "]"}], ";", 
  RowBox[{"SetOptions", "[", 
   RowBox[{"TeXitSection", ",", 
    RowBox[{"InputFontFamily", "\[Rule]", "\"\<Lato\>\""}]}], "]"}], 
  ";"}]}], "Input"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"Options", "[", "TeXitSection", "]"}], "//", "Column"}]], "Input"],

Cell[BoxData[
 TagBox[GridBox[{
    {
     RowBox[{"InputBackground", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"242", ",", "242", ",", "242"}], "}"}]}]},
    {
     RowBox[{"FontSize", "\[Rule]", "48"}]},
    {
     RowBox[{"InputFontFamily", "\[Rule]", "\<\"Lato\"\>"}]},
    {
     RowBox[{"InputCellFrame", "\[Rule]", "False"}]},
    {
     RowBox[{"InputShowGroupOpener", "\[Rule]", "True"}]},
    {
     RowBox[{"InputCellMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"66", ",", "2"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}]},
    {
     RowBox[{"InputCellLabelMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"0", ",", "0"}], "}"}]}], "}"}]}]}
   },
   DefaultBaseStyle->"Column",
   GridBoxAlignment->{"Columns" -> {{Left}}},
   GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}],
  "Column"]], "Output",
 FontFamily->"Courier"]
}, Open  ]],

Cell["Default options for TeXitSection,", "Text",
 CellChangeTimes->{{3.68299182060039*^9, 3.682991840104163*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Options", "[", "TeXitSection", "]"}], "=", 
   RowBox[{"{", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"InputBackground", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{"242", ",", "242", ",", "242"}], "}"}]}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InputFontSize", "\[Rule]", "28"}], ",", "\[IndentingNewLine]", 
     RowBox[{"InputFontFamily", "\[Rule]", "\"\<Latin Modern Roman\>\""}], 
     ",", "\[IndentingNewLine]", 
     RowBox[{"InputCellFrame", "\[Rule]", "False"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"InputShowGroupOpener", "\[Rule]", "True"}], ",", " ", 
     "\[IndentingNewLine]", 
     RowBox[{"InputCellMargins", "\[Rule]", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"200", ",", "10"}], "}"}], ",", 
        RowBox[{"{", 
         RowBox[{"2", ",", "1"}], "}"}]}], "}"}]}]}], "\[IndentingNewLine]", 
    "}"}]}], ";"}]], "Input"],

Cell["\<\
This looks like normal editable text in a TeXitInput box, but it displays in \
a larger font. Before it gets sent to TeXit, we wrap  \\section{ } around it,\
\
\>", "Text",
 CellChangeTimes->{{3.682991866711817*^9, 3.6829919778786793`*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"TeXitSection", "[", 
   RowBox[{"p", ":", 
    RowBox[{"OptionsPattern", "[", "]"}]}], "]"}], ":=", 
  RowBox[{"TeXitSection", "[", 
   RowBox[{"\"\<\>\"", ",", "\"\<\>\"", ",", "p"}], 
   "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"TeXitSection", "[", 
   RowBox[{"s_String", ",", 
    RowBox[{"p", ":", 
     RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
  RowBox[{"TeXitSection", "[", 
   RowBox[{"s", ",", "\"\<\>\"", ",", "p"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"TeXitSection", "[", 
    RowBox[{"s_String", ",", "label_String", ",", 
     RowBox[{"p", ":", 
      RowBox[{"OptionsPattern", "[", "]"}]}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"label", "===", "\"\<\>\""}], ",", "\[IndentingNewLine]", 
     RowBox[{"InputText", "[", 
      RowBox[{"s", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"TeXit", "[", 
           RowBox[{"\"\<\\\\section{\>\"", "<>", "#", "<>", "\"\<}\>\""}], 
           "]"}], ";"}], ")"}], "&"}], ",", "True", ",", "p", ",", 
       RowBox[{"Apply", "[", 
        RowBox[{"Sequence", ",", 
         RowBox[{"Options", "[", "TeXitSection", "]"}]}], "]"}]}], "]"}], ",",
      "\[IndentingNewLine]", 
     RowBox[{"InputText", "[", 
      RowBox[{"s", ",", 
       RowBox[{
        RowBox[{"(", 
         RowBox[{
          RowBox[{"TeXit", "[", 
           RowBox[{
           "\"\<\\\\section{\>\"", "<>", "#", "<>", "\"\<}\\n\\\\label{\>\"", 
            "<>", "label", "<>", "\"\<}\>\""}], "]"}], ";"}], ")"}], "&"}], 
       ",", "True", ",", "p", ",", 
       RowBox[{"Apply", "[", 
        RowBox[{"Sequence", ",", 
         RowBox[{"Options", "[", "TeXitSection", "]"}]}], "]"}]}], "]"}]}], 
    "]"}]}], ";"}]}], "Input"],

Cell["\<\
.....any given options  p  come before (and hence over-ride)  the default \
options of   InputTeXitSection.\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Section", "[", "]"}], ":=", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"TeXitSection", "[", "]"}], ";", 
    RowBox[{"NotebookDelete", "[", 
     RowBox[{"EvaluationCell", "[", "]"}], "]"}], ";"}], 
   ")"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Section", "[", "label_String", "]"}], ":=", 
  RowBox[{"TeXitSection", "[", 
   RowBox[{"\"\<\>\"", ",", "label"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Section", "[", 
   RowBox[{"label_String", ",", "s_String"}], "]"}], ":=", 
  RowBox[{"TeXitSection", "[", 
   RowBox[{"s", ",", "label"}], "]"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Section", "[", "x__", "]"}], ":=", 
  RowBox[{
  "Print", "[", 
   "\"\<Section[\[VeryThinSpace]] takes at most 2 arguments, and all \
arguments must be strings.\>\"", "  ", "]"}]}]}], "Input"],

Cell["\<\
.... the 2- argument form is of no use for interactive work. May be of some \
use for programming?\
\>", "Text"],

Cell["Alias,", "Text"],

Cell[BoxData[
 RowBox[{"\[Iota]s", "=", "Section"}]], "Input"]
}, Closed]],

Cell[CellGroupData[{

Cell["Cell evaluation functions for new cell styles", "Subsection"],

Cell["These could be useful :    ShowCellTags", "Text",
 CellID->951052887],

Cell["", "Text"],

Cell[CellGroupData[{

Cell[TextData[{
 "By using an undefined   CellEvaluationFunction  \[Rule] TeXEval,  ( in file \
 ",
 Cell[BoxData[
  FormBox[
   StyleBox["TeX",
    SingleLetterItalics->False], TraditionalForm]]],
 "itStyle.nb )   one sees that what the cell sends to \nget evaluated on \
Shift-Enter is:     TeXEval[  \[OpenCurlyDoubleQuote]string\
\[CloseCurlyDoubleQuote] ,  TextForm ]   where \[OpenCurlyDoubleQuote]string\
\[CloseCurlyDoubleQuote]  is the contents of the cell.\nIn the following,  \
First[List[#]]  is the  \[OpenCurlyDoubleQuote]string\[CloseCurlyDoubleQuote],"
}], "Text"],

Cell[BoxData[
 RowBox[{"TeXEvalText", " ", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"TeXit", "[", 
      RowBox[{"First", "[", 
       RowBox[{"List", "[", "#", "]"}], "]"}], "]"}], ";"}], ")"}], 
   "&"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"TeXEvalCommand", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"TeXit", "[", 
      RowBox[{"First", "[", 
       RowBox[{"List", "[", "#", "]"}], "]"}], "]"}], ";"}], ")"}], 
   "&"}]}]], "Input",
 InitializationCell->True],

Cell["\<\
If we want the notebook url as a header, then it needs to come after  \\title \
\\maketitle,\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"TeXEvalTitle", " ", "=", 
   RowBox[{
    RowBox[{"(", 
     RowBox[{
      RowBox[{"TeXit", "[", 
       RowBox[{"\"\< \n\\\\title{\>\"", "<>", 
        RowBox[{"First", "[", 
         RowBox[{"List", "[", "#", "]"}], "]"}], "<>", "\"\<}\n\\\\date{\>\"",
         "<>", 
        RowBox[{"DateString", "[", "]"}], "<>", "\"\<}\n\\\\author{\>\"", "<>",
         "$TeXitAuthor", "<>", 
        "\"\<}\n\\\\maketitle\n\n\\\\thispagestyle{myheadings}\n\
\\\\markright{\\\\small\\\\url{\>\"", "<>", 
        RowBox[{"AbbreviatedPath", "[", 
         RowBox[{
          RowBox[{"NotebookFileName", "[", "]"}], ",", "$TeXitBaseurl"}], 
         "]"}], "<>", "\"\<}}\n\n\\\\medskip\n\>\""}], "]"}], ";"}], ")"}], 
    "&"}]}], ";"}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"TeXEvalSection", "        ", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"TeXit", "[", 
      RowBox[{
      "\"\<\\n% \
******************************************************************************\
***************************************************\\n\>\"", "<>", "\n", 
       "                                                      ", 
       "\"\<\\\\section{\>\"", "<>", 
       RowBox[{"First", "[", 
        RowBox[{"List", "[", "#", "]"}], "]"}], "<>", "\"\<}\\n\\n\>\""}], 
      "]"}], ";"}], ")"}], "&"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"TeXEvalSubsection", " ", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"TeXit", "[", 
      RowBox[{
      "\"\<\\n% \
------------------------------------------------------------------------------\
---------------------------------------------------\\n\>\"", "<>", "\n", 
       "                                                            ", 
       "\"\<\\\\subsection{\>\"", "<>", 
       RowBox[{"First", "[", 
        RowBox[{"List", "[", "#", "]"}], "]"}], "<>", "\"\<}\\n\\n\>\""}], 
      "]"}], ";"}], ")"}], "&"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"TeXEvalSubsubsection", " ", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"TeXit", "[", 
      RowBox[{
      "\"\<\\n% \
..............................................................................\
...................................................\\n\>\"", "<>", "\n", 
       "                                                                   ", 
       "\"\<\\\\subsubsection{\>\"", "<>", 
       RowBox[{"First", "[", 
        RowBox[{"List", "[", "#", "]"}], "]"}], "<>", "\"\<}\\n\\n\>\""}], 
      "]"}], ";"}], ")"}], "&"}]}]], "Input",
 InitializationCell->True],

Cell[TextData[{
 "A   ",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 ": Label   cell is just a command cell with some text already put into it.  \
But I how do I get the text in ?\nInstead, use a cell label  \
\[OpenCurlyDoubleQuote]\\label\[CloseCurlyDoubleQuote]  and then wrap the \
entered value,"
}], "Text",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{"TeXEvalLabel", " ", "=", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{
     RowBox[{"TeXit", "[", 
      RowBox[{"\"\<\\\\label{\>\"", "<>", 
       RowBox[{"First", "[", 
        RowBox[{"List", "[", "#", "]"}], "]"}], "<>", "\"\<}\\n\>\""}], "]"}],
      ";"}], ")"}], "&"}]}]], "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Cell insertion menu", "Subsection"],

Cell["\<\
The horizontal cell insertion line (clicking beteen cells) has a  \
\[OpenCurlyDoubleQuote]+\[OpenCurlyDoubleQuote]  at its left end. That pulls \
down the \[OpenCurlyDoubleQuote]Cell insertion menu\[CloseCurlyDoubleQuote].

To add  TeXit  cells to the options listed:

      http://mathematica.stackexchange.com/questions/33833/possible-to-\
include-additional-styles-in-context-menu
    
 Includes discussion of keyboard short-cuts, palettes, etc,
    
      http://mathematica.stackexchange.com/questions/64218/frontend-adding-\
cell-type-choices-to-the-choose-how-to-enter-input-drop-down/64226#64226
    
keyboard short-cuts:     MenuCommandKey    in stylesheet
    
\
\>", "Text"],

Cell["\<\
Displaying  tex output in mathematica Notebooks by snippets of PDF generated \
by pdflatex,

          http://szhorvat.net/pelican/latex-typesetting-in-mathematica.html\
\>", "Text"],

Cell["\<\

For adding captions, and auto numbering cells using style,

    http://mathematica.stackexchange.com/questions/19757/centered-automatic-\
numbering-of-figures\
\>", "Text"]
}, Closed]],

Cell[CellGroupData[{

Cell["ReTeXit[ ]   until here", "Subsection"],

Cell["\<\
Re-evaluating the notebook up to one\[CloseCurlyQuote]s current position can \
be sped up by making just a few calls to pdflatex at the end.\
\>", "Text"],

Cell[TextData[{
 "ReTeXit[ ]  can be used as is.  However,  code will often  not run the same \
way a 2nd time,  e.g.,   If [ !ValueQ[x], x=0] .\n\nIf in doubt, the best way \
to  re-",
 Cell[BoxData[
  FormBox[
   StyleBox[
    RowBox[{"T", 
     AdjustmentBox["E",
      BoxBaselineShift->0.5,
      BoxMargins->{{-0.3, 0}, {0, 0}}], "X"}],
    SingleLetterItalics->False], TraditionalForm]]],
 "  is to  Quit[ ]  the kernel then do    \
Needs[\[OpenCurlyDoubleQuote]tpTensor`\[CloseCurlyDoubleQuote]]   ( or at \
least   Needs[\[OpenCurlyDoubleQuote]TeXit`\[CloseCurlyDoubleQuote]] ),\nthen \
do   ReTeXit[ ]   from the position in the file that you want to run until. \
The advantage of doing this rather than just \nevaluating a mouse selection \
is that the PDF is generated only at the end, not for every cell,\n"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"ReTeXit", "[", "]"}], ":=", 
  RowBox[{"EvaluateUntilHere", "[", "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ClearTeX", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TeXit", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"$pdflatexLater", "=", "True"}], ";", "\[IndentingNewLine]", 
     RowBox[{"$realtime", "=", 
      RowBox[{"SessionTime", "[", "]"}]}]}], "\[IndentingNewLine]", ",", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"$pdflatexLater", "=", "False"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TeXit", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{"TeXit", "[", "]"}], ";", "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"SessionTime", "[", "]"}], "-", "$realtime"}]}]}], 
   "\[IndentingNewLine]", "]"}]}]], "Input",
 InitializationCell->True]
}, Closed]],

Cell[CellGroupData[{

Cell["StartTeXit[ ] ,  ContinueTeXit[]", "Subsection"],

Cell["\<\
We can not run  TeXit[ ]  on a pre-exiting body here because a corrupt  \
body.tex would  abort reading this file.\
\>", "Text"],

Cell["\<\
The functions  StartAutoTeXit[ ]  and  StopAutoTeXit[ ]   are defined in the  \
Eqn[ ]  section (Part 5) of the tpTensor package.  
If  tpTensor  (or a separate  Eqn package yet to be written) is not loaded, \
then they will do nothing,\
\>", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"StartTeXit", "[", "]"}], " ", ":=", " ", 
  RowBox[{"(", "\[IndentingNewLine]", "  ", 
   RowBox[{
    RowBox[{"StartAutoTeXit", "[", "]"}], ";", "\[IndentingNewLine]", "  ", 
    RowBox[{"ClearTeX", "[", "]"}], ";", "\[IndentingNewLine]", "  ", 
    RowBox[{"$LastType", "=", "\"\<text\>\""}], ";", "\[IndentingNewLine]", 
    "  ", 
    RowBox[{"TeXit", "[", "]"}], ";", "\[IndentingNewLine]", "  ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{
        RowBox[{"ProcessStatus", "[", "$PDFViewerProcess", "]"}], "===", 
        "\"\<Running\>\""}]}], ",", " ", 
      RowBox[{"PDFViewer", "[", "]"}]}], "]"}], ";"}], " ", 
   "\[IndentingNewLine]", ")"}]}]], "Input",
 InitializationCell->True],

Cell[BoxData[
 RowBox[{
  RowBox[{"ContinueTeXit", "[", "]"}], " ", ":=", " ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"TeXit", "[", "]"}], ";", " ", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{"!", 
       RowBox[{
        RowBox[{"ProcessStatus", "[", "$PDFViewerProcess", "]"}], "===", 
        "\"\<Running\>\""}]}], ",", " ", 
      RowBox[{"PDFViewer", "[", "]"}]}], "]"}], ";"}], ")"}]}]], "Input",
 InitializationCell->True],

Cell["For timing with/without  TeXit  this can be used (once),", "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"KillTeXit", "[", "]"}], ":=", 
  RowBox[{"(", "\[IndentingNewLine]", " ", 
   RowBox[{
    RowBox[{"StopAutoTeXit", "[", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{"Clear", "[", "TeXit", "]"}], ";", "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TeXit", "[", "]"}], ":=", "\"\<\>\""}], ";", 
    "\[IndentingNewLine]", 
    RowBox[{
     RowBox[{"TeXit", "[", 
      RowBox[{"x_", ",", "___"}], "]"}], ":=", "x"}], ";"}], ")"}]}]], "Input",\

 InitializationCell->True]
}, Closed]]
}, Open  ]]
}, Open  ]],

Cell[BoxData[{
 RowBox[{"End", "[", "]"}], "\[IndentingNewLine]", 
 RowBox[{"EndPackage", "[", "]"}]}], "Input",
 CellChangeTimes->{{3.681707252714169*^9, 3.681707259562105*^9}}]
},
CellGrouping->Manual,
WindowSize->{1968, 1282},
WindowMargins->{{Automatic, -294}, {39, Automatic}},
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"TeXitStyle.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info133681825806-6846560"->{
  Cell[17445, 500, 477, 8, 164, "Print",
   CellTags->"Info133681825806-6846560"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info133681825806-6846560", 257792, 7138}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 89, 1, 61, "Input"],
Cell[650, 23, 597, 11, 77, "Input",
 InitializationCell->True],
Cell[1250, 36, 623, 10, 62, "Text"],
Cell[1876, 48, 71, 0, 36, "Text"],
Cell[CellGroupData[{
Cell[1972, 52, 202, 3, 86, "Input"],
Cell[2177, 57, 56, 0, 35, "Output"],
Cell[2236, 59, 66, 0, 35, "Output"],
Cell[2305, 61, 50, 0, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[2392, 66, 419, 17, 107, "Title"],
Cell[2814, 85, 274, 7, 61, "Text"],
Cell[CellGroupData[{
Cell[3113, 96, 119, 1, 51, "Subsection"],
Cell[3235, 99, 942, 21, 344, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4214, 125, 249, 3, 51, "Subsection"],
Cell[4466, 130, 171, 7, 61, "Text"]
}, Open  ]],
Cell[CellGroupData[{
Cell[4674, 142, 195, 3, 75, "Section"],
Cell[4872, 147, 749, 17, 163, "Text"],
Cell[CellGroupData[{
Cell[5646, 168, 279, 7, 35, "Input"],
Cell[5928, 177, 557, 13, 61, "Output"]
}, Open  ]],
Cell[6500, 193, 923, 25, 88, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7426, 220, 420, 8, 35, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[7849, 230, 237, 5, 35, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[8089, 237, 233, 3, 35, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[8325, 242, 120, 1, 36, "Text"],
Cell[8448, 245, 249, 5, 35, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[8700, 252, 163, 2, 35, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[8866, 256, 98, 1, 36, "Text"],
Cell[8967, 259, 348, 7, 35, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[9318, 268, 335, 6, 36, "Text"],
Cell[9656, 276, 344, 7, 35, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10003, 285, 239, 3, 35, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[10245, 290, 1223, 29, 140, "Text"],
Cell[11471, 321, 138, 3, 36, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[11646, 329, 171, 2, 61, "Section"],
Cell[CellGroupData[{
Cell[11842, 335, 125, 1, 51, "Subsection"],
Cell[11970, 338, 1151, 22, 236, "Text"],
Cell[13124, 362, 185, 3, 61, "Input",
 CellID->111578629],
Cell[CellGroupData[{
Cell[13334, 369, 152, 2, 35, "Input"],
Cell[13489, 373, 73, 1, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[13599, 379, 282, 6, 35, "Input"],
Cell[13884, 387, 240, 5, 35, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[14161, 397, 142, 3, 35, "Input"],
Cell[14306, 402, 1582, 45, 111, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[15937, 453, 148, 2, 43, "Subsection"],
Cell[16088, 457, 139, 3, 35, "Input"],
Cell[16230, 462, 205, 4, 35, "Input"],
Cell[16438, 468, 134, 3, 35, "Input"],
Cell[16575, 473, 140, 3, 35, "Input"],
Cell[16718, 478, 136, 3, 35, "Input"],
Cell[16857, 483, 442, 9, 211, "Input"],
Cell[CellGroupData[{
Cell[17324, 496, 118, 2, 35, "Input"],
Cell[17445, 500, 477, 8, 164, "Print",
 CellTags->"Info133681825806-6846560"]
}, Open  ]]
}, Closed]]
}, Open  ]],
Cell[17961, 513, 167, 6, 35, "Input",
 CellID->782891883],
Cell[CellGroupData[{
Cell[18153, 523, 160, 2, 75, "Section"],
Cell[CellGroupData[{
Cell[18338, 529, 307, 4, 51, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[18648, 535, 226, 3, 36, "Text"],
Cell[18877, 540, 248, 4, 50, "Input",
 InitializationCell->True],
Cell[19128, 546, 111, 2, 50, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[19276, 553, 53, 0, 43, "Subsection"],
Cell[CellGroupData[{
Cell[19354, 557, 237, 7, 50, "Input",
 InitializationCell->True],
Cell[19594, 566, 1666, 49, 34, "Output"]
}, Open  ]],
Cell[21275, 618, 106, 3, 36, "Text"],
Cell[21384, 623, 1140, 25, 321, "Code",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[22549, 652, 140, 4, 34, "Input"],
Cell[22692, 658, 193, 7, 76, "Output"]
}, Open  ]],
Cell[22900, 668, 71, 1, 34, "Input"],
Cell[CellGroupData[{
Cell[22996, 673, 75, 1, 34, "Input"],
Cell[23074, 676, 157, 5, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[23268, 686, 63, 1, 34, "Input"],
Cell[23334, 689, 64, 1, 34, "Output"]
}, Open  ]],
Cell[23413, 693, 513, 10, 111, "Text"],
Cell[23929, 705, 1126, 25, 321, "Code",
 InitializationCell->True],
Cell[25058, 732, 540, 10, 111, "Text"],
Cell[CellGroupData[{
Cell[25623, 746, 244, 8, 44, "Input",
 InitializationCell->True],
Cell[25870, 756, 38, 0, 34, "Input"],
Cell[25911, 758, 1682, 45, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[27642, 809, 368, 5, 43, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[28013, 816, 583, 15, 38, "Text"],
Cell[28599, 833, 343, 9, 52, "Input",
 InitializationCell->True],
Cell[28945, 844, 315, 9, 50, "Input",
 InitializationCell->True],
Cell[29263, 855, 360, 9, 50, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[29660, 869, 348, 12, 46, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[30011, 883, 714, 16, 63, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[30728, 901, 210, 5, 61, "Text"],
Cell[30941, 908, 319, 9, 51, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[31263, 919, 201, 3, 36, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[31467, 924, 1248, 29, 161, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[32718, 955, 131, 3, 36, "Text"],
Cell[32852, 960, 132, 3, 51, "Input",
 InitializationCell->True],
Cell[32987, 965, 888, 24, 152, "Input",
 InitializationCell->True],
Cell[33878, 991, 608, 16, 38, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[34489, 1009, 306, 5, 35, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[34798, 1016, 358, 6, 35, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[35159, 1024, 454, 9, 61, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[CellGroupData[{
Cell[35638, 1037, 360, 5, 61, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[36001, 1044, 523, 10, 35, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[36527, 1056, 458, 7, 35, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Open  ]],
Cell[37000, 1066, 245, 3, 36, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[37248, 1071, 1043, 25, 149, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 InitializationCell->True],
Cell[38294, 1098, 296, 5, 59, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[38593, 1105, 299, 5, 34, "Output",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[38895, 1112, 228, 3, 36, "Text"],
Cell[39126, 1117, 220, 6, 50, "Input",
 InitializationCell->True],
Cell[39349, 1125, 287, 5, 36, "Text"],
Cell[39639, 1132, 513, 15, 75, "Input",
 InitializationCell->True],
Cell[40155, 1149, 529, 17, 63, "Text"],
Cell[40687, 1168, 182, 5, 52, "Input",
 InitializationCell->True],
Cell[40872, 1175, 316, 11, 38, "Text"],
Cell[CellGroupData[{
Cell[41213, 1190, 479, 14, 83, "Input"],
Cell[41695, 1206, 135, 1, 155, "Output"],
Cell[41833, 1209, 57, 0, 34, "Output"],
Cell[41893, 1211, 48, 0, 34, "Output"]
}, Open  ]],
Cell[41956, 1214, 316, 11, 38, "Text"],
Cell[CellGroupData[{
Cell[42297, 1229, 582, 17, 83, "Input"],
Cell[42882, 1248, 260, 8, 34, "Output"],
Cell[43145, 1258, 178, 6, 34, "Output"],
Cell[43326, 1266, 169, 6, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[43544, 1278, 322, 5, 43, "Subsection",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[43869, 1285, 996, 35, 65, "Text"],
Cell[44868, 1322, 963, 19, 138, "Text"],
Cell[45834, 1343, 231, 5, 61, "Text"],
Cell[46068, 1350, 970, 28, 152, "Input",
 InitializationCell->True],
Cell[47041, 1380, 106, 1, 36, "Text"],
Cell[47150, 1383, 450, 14, 102, "Input",
 InitializationCell->True],
Cell[47603, 1399, 249, 5, 61, "Text"],
Cell[CellGroupData[{
Cell[47877, 1408, 43, 0, 38, "Subsubsection"],
Cell[47923, 1410, 151, 4, 61, "Text"],
Cell[48077, 1416, 395, 12, 76, "Input",
 InitializationCell->True],
Cell[48475, 1430, 563, 10, 111, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[49075, 1445, 70, 0, 32, "Subsubsection"],
Cell[49148, 1447, 176, 4, 61, "Text"],
Cell[CellGroupData[{
Cell[49349, 1455, 138, 4, 34, "Input"],
Cell[49490, 1461, 167, 6, 34, "Output"]
}, Open  ]],
Cell[49672, 1470, 207, 4, 36, "Text"],
Cell[CellGroupData[{
Cell[49904, 1478, 255, 7, 34, "Input"],
Cell[50162, 1487, 163, 6, 34, "Output"]
}, Open  ]],
Cell[50340, 1496, 113, 3, 36, "Text"],
Cell[CellGroupData[{
Cell[50478, 1503, 260, 7, 34, "Input"],
Cell[50741, 1512, 168, 6, 34, "Output"]
}, Open  ]],
Cell[50924, 1521, 243, 4, 36, "Text"],
Cell[51170, 1527, 535, 14, 52, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[51730, 1545, 183, 5, 34, "Input"],
Cell[51916, 1552, 107, 2, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[52060, 1559, 61, 1, 34, "Input"],
Cell[52124, 1562, 240, 8, 48, "Output"]
}, Open  ]],
Cell[52379, 1573, 198, 5, 52, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[52602, 1582, 79, 1, 34, "Input"],
Cell[52684, 1585, 85, 1, 34, "Output"]
}, Open  ]],
Cell[52784, 1589, 39, 0, 36, "Text"],
Cell[CellGroupData[{
Cell[52848, 1593, 308, 8, 36, "Input"],
Cell[53159, 1603, 112, 3, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[53308, 1611, 92, 2, 34, "Input"],
Cell[53403, 1615, 202, 5, 34, "Output"]
}, Open  ]],
Cell[53620, 1623, 470, 12, 36, "Input"],
Cell[CellGroupData[{
Cell[54115, 1639, 141, 3, 34, "Input"],
Cell[54259, 1644, 98, 1, 34, "Output"]
}, Open  ]],
Cell[54372, 1648, 242, 5, 61, "Text"],
Cell[54617, 1655, 545, 14, 53, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[55187, 1673, 152, 3, 34, "Input"],
Cell[55342, 1678, 109, 1, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[55500, 1685, 49, 0, 32, "Subsubsection"],
Cell[CellGroupData[{
Cell[55574, 1689, 34, 0, 34, "Input"],
Cell[55611, 1691, 87, 1, 34, "Output"]
}, Open  ]],
Cell[55713, 1695, 635, 16, 64, "Text"],
Cell[56351, 1713, 405, 12, 52, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[56781, 1729, 135, 3, 34, "Input"],
Cell[56919, 1734, 78, 0, 34, "Output"]
}, Open  ]],
Cell[57012, 1737, 92, 2, 36, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[57141, 1744, 43, 0, 32, "Subsubsection"],
Cell[57187, 1746, 733, 14, 161, "Text"],
Cell[57923, 1762, 169, 4, 61, "Text"],
Cell[58095, 1768, 111, 3, 36, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[58243, 1776, 46, 0, 32, "Subsubsection"],
Cell[58292, 1778, 625, 12, 161, "Text"],
Cell[58920, 1792, 305, 6, 61, "Text"],
Cell[59228, 1800, 220, 7, 52, "Input",
 InitializationCell->True],
Cell[59451, 1809, 111, 3, 36, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[59599, 1817, 181, 7, 32, "Subsubsection"],
Cell[59783, 1826, 849, 24, 88, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[60669, 1855, 58, 0, 32, "Subsubsection"],
Cell[60730, 1857, 1193, 32, 636, "Text"],
Cell[61926, 1891, 65, 0, 36, "Text"],
Cell[61994, 1893, 92, 3, 36, "Text"],
Cell[62089, 1898, 116, 3, 36, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[62242, 1906, 60, 0, 32, "Subsubsection"],
Cell[62305, 1908, 102, 2, 36, "Text"],
Cell[62410, 1912, 579, 15, 211, "Text"],
Cell[62992, 1929, 210, 5, 111, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[63239, 1939, 55, 0, 32, "Subsubsection"],
Cell[63297, 1941, 339, 6, 61, "Text"],
Cell[CellGroupData[{
Cell[63661, 1951, 332, 8, 60, "Input"],
Cell[63996, 1961, 57, 0, 59, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64090, 1966, 215, 4, 59, "Input"],
Cell[64308, 1972, 190, 2, 107, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[64535, 1979, 663, 17, 132, "Input"],
Cell[65201, 1998, 229, 2, 83, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[65479, 2006, 30, 0, 32, "Subsubsection"],
Cell[65512, 2008, 2381, 46, 736, "Text"],
Cell[CellGroupData[{
Cell[67918, 2058, 729, 19, 155, "Input"],
Cell[68650, 2079, 53, 0, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[68740, 2084, 754, 20, 179, "Input"],
Cell[69497, 2106, 46, 0, 34, "Output"],
Cell[69546, 2108, 54, 0, 34, "Output"]
}, Open  ]],
Cell[69615, 2111, 420, 7, 86, "Text"]
}, Closed]],
Cell[70050, 2121, 665, 13, 108, "Text"],
Cell[70718, 2136, 232, 7, 51, "Input",
 InitializationCell->True],
Cell[70953, 2145, 50, 0, 36, "Text"],
Cell[71006, 2147, 901, 15, 161, "Text"],
Cell[71910, 2164, 26, 0, 35, "Input"],
Cell[71939, 2166, 15790, 359, 2107, "Code",
 InitializationCell->True],
Cell[87732, 2527, 120, 3, 36, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[87889, 2535, 327, 4, 43, "Subsection"],
Cell[88219, 2541, 227, 5, 36, "Text"],
Cell[CellGroupData[{
Cell[88471, 2550, 380, 9, 291, "Input",
 InitializationCell->True],
Cell[88854, 2561, 157, 2, 34, "Input"],
Cell[89014, 2565, 377, 5, 227, "Output"]
}, Open  ]],
Cell[89406, 2573, 371, 9, 50, "Input",
 InitializationCell->True],
Cell[89780, 2584, 1206, 24, 99, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[91023, 2613, 440, 6, 43, "Subsection"],
Cell[91466, 2621, 900, 25, 60, "Text"],
Cell[CellGroupData[{
Cell[92391, 2650, 290, 7, 195, "Input",
 InitializationCell->True],
Cell[92684, 2659, 206, 3, 34, "Input"],
Cell[92893, 2664, 353, 5, 155, "Output"]
}, Open  ]],
Cell[93261, 2672, 487, 11, 50, "Input",
 InitializationCell->True],
Cell[93751, 2685, 1375, 26, 99, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[95163, 2716, 225, 3, 43, "Subsection"],
Cell[95391, 2721, 380, 6, 61, "Text"],
Cell[95774, 2729, 2480, 49, 196, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[98279, 2782, 138, 2, 34, "Input"],
Cell[98420, 2786, 187, 3, 25, "Print"]
}, Open  ]],
Cell[98622, 2792, 232, 3, 36, "Text"],
Cell[98857, 2797, 863, 22, 123, "Input",
 InitializationCell->True],
Cell[99723, 2821, 62, 0, 36, "Text"],
Cell[CellGroupData[{
Cell[99810, 2825, 80, 1, 34, "Input"],
Cell[99893, 2828, 81, 1, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[100011, 2834, 57, 1, 34, "Input"],
Cell[100071, 2837, 297, 4, 48, "Print"]
}, Open  ]],
Cell[100383, 2844, 186, 4, 36, "Text"],
Cell[100572, 2850, 725, 12, 61, "Text"],
Cell[101300, 2864, 799, 25, 99, "Input",
 InitializationCell->True],
Cell[102102, 2891, 174, 2, 36, "Text"],
Cell[CellGroupData[{
Cell[102301, 2897, 96, 1, 59, "Input"],
Cell[102400, 2900, 231, 3, 34, "Output"]
}, Open  ]],
Cell[102646, 2906, 167, 4, 50, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[102850, 2915, 64, 0, 43, "Subsection"],
Cell[102917, 2917, 257, 5, 61, "Text"],
Cell[103177, 2924, 205, 4, 36, "Text"],
Cell[103385, 2930, 220, 5, 61, "Text"],
Cell[103608, 2937, 751, 21, 124, "Input",
 InitializationCell->True],
Cell[104362, 2960, 92, 2, 36, "Text"],
Cell[104457, 2964, 236, 7, 50, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[104718, 2975, 137, 3, 34, "Input"],
Cell[104858, 2980, 122, 1, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[105017, 2986, 195, 5, 36, "Input"],
Cell[105215, 2993, 69, 0, 34, "Output"]
}, Open  ]],
Cell[105299, 2996, 30, 0, 36, "Text"],
Cell[105332, 2998, 312, 10, 50, "Input",
 InitializationCell->True],
Cell[105647, 3010, 50, 0, 36, "Text"],
Cell[105700, 3012, 235, 7, 50, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[105960, 3023, 35, 0, 34, "Input"],
Cell[105998, 3025, 42, 0, 34, "Output"]
}, Open  ]],
Cell[106055, 3028, 1460, 35, 219, "Input",
 InitializationCell->True],
Cell[107518, 3065, 1074, 19, 557, "Input",
 InitializationCell->True],
Cell[108595, 3086, 69, 0, 36, "Text"],
Cell[108667, 3088, 222, 6, 52, "Input",
 InitializationCell->True],
Cell[108892, 3096, 428, 12, 99, "Input",
 InitializationCell->True],
Cell[109323, 3110, 944, 17, 747, "Input",
 InitializationCell->True],
Cell[110270, 3129, 864, 16, 52, "Input",
 InitializationCell->True],
Cell[111137, 3147, 1092, 22, 99, "Input",
 InitializationCell->True],
Cell[112232, 3171, 727, 12, 36, "Text"],
Cell[112962, 3185, 2380, 46, 220, "Input",
 InitializationCell->True],
Cell[115345, 3233, 112, 1, 36, "Text"],
Cell[115460, 3236, 367, 7, 50, "Input",
 InitializationCell->True],
Cell[115830, 3245, 375, 9, 50, "Input",
 InitializationCell->True],
Cell[116208, 3256, 344, 5, 36, "Text"],
Cell[116555, 3263, 213, 4, 52, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[116793, 3271, 185, 3, 59, "Input"],
Cell[116981, 3276, 495, 7, 34, "Output"],
Cell[117479, 3285, 1167, 17, 755, "Output"]
}, Open  ]],
Cell[118661, 3305, 104, 1, 36, "Text"],
Cell[CellGroupData[{
Cell[118790, 3310, 295, 4, 34, "Input"],
Cell[119088, 3316, 384, 6, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[119521, 3328, 253, 3, 43, "Subsection"],
Cell[119777, 3333, 206, 4, 36, "Text"],
Cell[119986, 3339, 1446, 25, 267, "Input",
 InitializationCell->True],
Cell[121435, 3366, 936, 17, 52, "Input",
 InitializationCell->True],
Cell[122374, 3385, 1144, 22, 99, "Input",
 InitializationCell->True],
Cell[123521, 3409, 774, 12, 36, "Text"],
Cell[124298, 3423, 2483, 47, 220, "Input",
 InitializationCell->True],
Cell[126784, 3472, 112, 1, 36, "Text"],
Cell[126899, 3475, 415, 7, 50, "Input",
 InitializationCell->True],
Cell[127317, 3484, 426, 9, 50, "Input",
 InitializationCell->True],
Cell[127746, 3495, 344, 5, 36, "Text"],
Cell[128093, 3502, 293, 6, 52, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[128411, 3512, 236, 4, 59, "Input"],
Cell[128650, 3518, 573, 9, 34, "Output"],
Cell[129226, 3529, 608, 9, 227, "Output"]
}, Open  ]],
Cell[129849, 3541, 206, 3, 36, "Text"],
Cell[CellGroupData[{
Cell[130080, 3548, 272, 4, 34, "Input"],
Cell[130355, 3554, 412, 6, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[130816, 3566, 381, 5, 43, "Subsection"],
Cell[131200, 3573, 801, 21, 46, "Text"],
Cell[CellGroupData[{
Cell[132026, 3598, 142, 2, 47, "Input"],
Cell[132171, 3602, 182, 4, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132390, 3611, 167, 3, 47, "Input"],
Cell[132560, 3616, 84, 1, 47, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[132681, 3622, 172, 4, 47, "Input",
 CellID->1858495399],
Cell[132856, 3628, 147, 4, 50, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[133040, 3637, 156, 3, 47, "Input",
 CellID->1832812651],
Cell[133199, 3642, 5770, 174, 4505, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[139006, 3821, 264, 8, 37, "Input",
 CellID->1495848898],
Cell[139273, 3831, 17689, 501, 487, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[157011, 4338, 96, 2, 43, "Subsection"],
Cell[157110, 4342, 324, 5, 61, "Text"],
Cell[157437, 4349, 366, 8, 61, "Text",
 CellID->1225378313],
Cell[157806, 4359, 740, 17, 63, "Text"],
Cell[158549, 4378, 1242, 19, 86, "Text"],
Cell[159794, 4399, 1896, 42, 243, "Input",
 InitializationCell->True],
Cell[161693, 4443, 10719, 195, 1158, "Input",
 InitializationCell->True],
Cell[172415, 4640, 102, 1, 34, "Input"],
Cell[172520, 4643, 196, 4, 34, "Input"],
Cell[172719, 4649, 191, 4, 34, "Input"],
Cell[172913, 4655, 77, 1, 34, "Input"],
Cell[172993, 4658, 108, 2, 34, "Input"],
Cell[CellGroupData[{
Cell[173126, 4664, 181, 4, 34, "Input"],
Cell[173310, 4670, 210, 5, 34, "Output"]
}, Open  ]],
Cell[173535, 4678, 443, 8, 34, "Input"],
Cell[173981, 4688, 697, 19, 54, "Input"],
Cell[CellGroupData[{
Cell[174703, 4711, 647, 14, 59, "Input"],
Cell[175353, 4727, 677, 18, 54, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[176067, 4750, 699, 15, 59, "Input"],
Cell[176769, 4767, 697, 19, 54, "Input"]
}, Open  ]],
Cell[177481, 4789, 146, 4, 34, "Input"],
Cell[177630, 4795, 637, 17, 62, "Input"],
Cell[178270, 4814, 86, 1, 48, "Print"],
Cell[CellGroupData[{
Cell[178381, 4819, 593, 16, 38, "Input"],
Cell[178977, 4837, 77, 1, 25, "Print"]
}, Open  ]],
Cell[179069, 4841, 432, 8, 34, "Input"],
Cell[179504, 4851, 595, 16, 38, "Input"],
Cell[180102, 4869, 107, 1, 25, "Print"],
Cell[180212, 4872, 592, 16, 38, "Input"],
Cell[180807, 4890, 599, 16, 38, "Input"],
Cell[181409, 4908, 109, 1, 25, "Print"],
Cell[CellGroupData[{
Cell[181543, 4913, 608, 17, 38, "Input"],
Cell[182154, 4932, 113, 1, 25, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[182304, 4938, 311, 5, 34, "Input"],
Cell[CellGroupData[{
Cell[182640, 4947, 574, 16, 86, "Input"],
Cell[183217, 4965, 87, 1, 70, "Print"]
}, Open  ]],
Cell[183319, 4969, 260, 6, 36, "Input"],
Cell[183582, 4977, 227, 4, 34, "Input"]
}, Open  ]],
Cell[183824, 4984, 593, 16, 38, "Input"],
Cell[184420, 5002, 188, 3, 25, "Print"],
Cell[CellGroupData[{
Cell[184633, 5009, 287, 7, 59, "Input"],
Cell[184923, 5018, 570, 16, 38, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[185530, 5039, 98, 1, 34, "Input"],
Cell[185631, 5042, 104, 1, 34, "Output"]
}, Open  ]],
Cell[185750, 5046, 110, 1, 36, "Text"],
Cell[CellGroupData[{
Cell[185885, 5051, 123, 2, 34, "Input"],
Cell[186011, 5055, 250, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[186298, 5064, 162, 3, 34, "Input"],
Cell[186463, 5069, 578, 16, 62, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[187078, 5090, 162, 3, 34, "Input"],
Cell[187243, 5095, 754, 19, 86, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[188034, 5119, 127, 2, 34, "Input"],
Cell[188164, 5123, 228, 3, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[188441, 5132, 71, 0, 43, "Subsection"],
Cell[188515, 5134, 365, 8, 61, "Text",
 CellID->928141244],
Cell[188883, 5144, 740, 17, 63, "Text"],
Cell[189626, 5163, 727, 12, 136, "Text"],
Cell[190356, 5177, 459, 9, 86, "Text"],
Cell[190818, 5188, 1294, 34, 267, "Input",
 InitializationCell->True],
Cell[192115, 5224, 4478, 108, 702, "Input",
 InitializationCell->True],
Cell[196596, 5334, 443, 8, 34, "Input"],
Cell[197042, 5344, 697, 19, 54, "Input"],
Cell[CellGroupData[{
Cell[197764, 5367, 647, 14, 59, "Input"],
Cell[198414, 5383, 677, 18, 54, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[199128, 5406, 699, 15, 59, "Input"],
Cell[199830, 5423, 697, 19, 54, "Input"]
}, Open  ]],
Cell[200542, 5445, 146, 4, 34, "Input"],
Cell[200691, 5451, 637, 17, 62, "Input"],
Cell[201331, 5470, 86, 1, 48, "Print"],
Cell[CellGroupData[{
Cell[201442, 5475, 593, 16, 38, "Input"],
Cell[202038, 5493, 77, 1, 25, "Print"]
}, Open  ]],
Cell[202130, 5497, 432, 8, 34, "Input"],
Cell[202565, 5507, 595, 16, 38, "Input"],
Cell[203163, 5525, 107, 1, 25, "Print"],
Cell[203273, 5528, 592, 16, 38, "Input"],
Cell[203868, 5546, 599, 16, 38, "Input"],
Cell[204470, 5564, 109, 1, 25, "Print"],
Cell[CellGroupData[{
Cell[204604, 5569, 608, 17, 38, "Input"],
Cell[205215, 5588, 113, 1, 25, "Print"]
}, Open  ]],
Cell[CellGroupData[{
Cell[205365, 5594, 311, 5, 34, "Input"],
Cell[CellGroupData[{
Cell[205701, 5603, 574, 16, 86, "Input"],
Cell[206278, 5621, 87, 1, 70, "Print"]
}, Open  ]],
Cell[206380, 5625, 260, 6, 36, "Input"],
Cell[206643, 5633, 227, 4, 34, "Input"]
}, Open  ]],
Cell[206885, 5640, 593, 16, 38, "Input"],
Cell[207481, 5658, 188, 3, 25, "Print"],
Cell[CellGroupData[{
Cell[207694, 5665, 287, 7, 59, "Input"],
Cell[207984, 5674, 570, 16, 38, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[208591, 5695, 98, 1, 34, "Input"],
Cell[208692, 5698, 104, 1, 34, "Output"]
}, Open  ]],
Cell[208811, 5702, 110, 1, 36, "Text"],
Cell[CellGroupData[{
Cell[208946, 5707, 123, 2, 34, "Input"],
Cell[209072, 5711, 250, 4, 34, "Output"]
}, Open  ]],
Cell[CellGroupData[{
Cell[209359, 5720, 162, 3, 34, "Input"],
Cell[209524, 5725, 578, 16, 62, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[210139, 5746, 162, 3, 34, "Input"],
Cell[210304, 5751, 754, 19, 86, "Input"]
}, Open  ]],
Cell[CellGroupData[{
Cell[211095, 5775, 127, 2, 34, "Input"],
Cell[211225, 5779, 228, 3, 34, "Output"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[211502, 5788, 522, 7, 43, "Subsection"],
Cell[212027, 5797, 292, 6, 36, "Text"],
Cell[212322, 5805, 2438, 61, 315, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[214797, 5871, 634, 10, 43, "Subsection"],
Cell[CellGroupData[{
Cell[215456, 5885, 227, 4, 34, "Input"],
Cell[215686, 5891, 909, 22, 34, "Output"]
}, Open  ]],
Cell[216610, 5916, 357, 6, 36, "Text"],
Cell[216970, 5924, 723, 19, 108, "Input"],
Cell[217696, 5945, 171, 4, 36, "Text"],
Cell[217870, 5951, 87, 1, 59, "Input"],
Cell[217960, 5954, 105, 1, 36, "Text"],
Cell[218068, 5957, 105, 1, 36, "Text"],
Cell[218176, 5960, 105, 1, 36, "Text"],
Cell[218284, 5963, 105, 1, 36, "Text"],
Cell[218392, 5966, 105, 1, 36, "Text"],
Cell[218500, 5969, 105, 1, 36, "Text"],
Cell[218608, 5972, 236, 5, 34, "Input",
 CellID->1829249673],
Cell[218847, 5979, 158, 5, 61, "Text"],
Cell[219008, 5986, 105, 1, 36, "Text"],
Cell[219116, 5989, 105, 1, 36, "Text"],
Cell[219224, 5992, 105, 1, 36, "Text"],
Cell[219332, 5995, 105, 1, 36, "Text"],
Cell[219440, 5998, 105, 1, 36, "Text"],
Cell[219548, 6001, 408, 11, 34, "Input"],
Cell[219959, 6014, 408, 11, 34, "Input"],
Cell[220370, 6027, 408, 11, 34, "Input"],
Cell[220781, 6040, 408, 11, 34, "Input"],
Cell[221192, 6053, 408, 11, 34, "Input"],
Cell[221603, 6066, 151, 5, 61, "Text"],
Cell[221757, 6073, 343, 9, 36, "Input"],
Cell[222103, 6084, 338, 9, 36, "Input"],
Cell[222444, 6095, 386, 9, 36, "Input"],
Cell[222833, 6106, 338, 9, 36, "Input"],
Cell[223174, 6117, 311, 8, 36, "Input"],
Cell[223488, 6127, 107, 1, 36, "Text"],
Cell[223598, 6130, 151, 4, 34, "Output"],
Cell[223752, 6136, 207, 6, 34, "Output"],
Cell[223962, 6144, 265, 8, 34, "Output"],
Cell[224230, 6154, 325, 10, 34, "Output"],
Cell[224558, 6166, 386, 9, 36, "Input"],
Cell[224947, 6177, 338, 9, 36, "Input"],
Cell[225288, 6188, 311, 8, 36, "Input"],
Cell[225602, 6198, 151, 4, 34, "Output"],
Cell[225756, 6204, 207, 6, 34, "Output"]
}, Closed]],
Cell[CellGroupData[{
Cell[226000, 6215, 61, 0, 43, "Subsection"],
Cell[CellGroupData[{
Cell[226086, 6219, 518, 9, 61, "Text"],
Cell[226607, 6230, 152, 3, 36, "Text"],
Cell[226762, 6235, 249, 6, 50, "Input",
 InitializationCell->True],
Cell[227014, 6243, 178, 2, 36, "Text"],
Cell[227195, 6247, 446, 13, 75, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[227666, 6264, 174, 2, 36, "Text"],
Cell[227843, 6268, 236, 6, 34, "Input"],
Cell[CellGroupData[{
Cell[228104, 6278, 202, 5, 34, "Input"],
Cell[228309, 6285, 211, 5, 34, "Output"]
}, Open  ]],
Cell[228535, 6293, 244, 6, 34, "Input"],
Cell[228782, 6301, 388, 8, 61, "Text"],
Cell[229173, 6311, 419, 10, 34, "Input"],
Cell[CellGroupData[{
Cell[229617, 6325, 335, 7, 34, "Input"],
Cell[229955, 6334, 299, 7, 23, "Message"],
Cell[230257, 6343, 301, 7, 23, "Message"],
Cell[230561, 6352, 369, 9, 34, "Output"]
}, Open  ]]
}, Open  ]],
Cell[230957, 6365, 459, 8, 86, "Text"],
Cell[231419, 6375, 408, 13, 52, "Input",
 InitializationCell->True],
Cell[231830, 6390, 408, 8, 61, "Text"],
Cell[232241, 6400, 511, 12, 52, "Input",
 InitializationCell->True],
Cell[232755, 6414, 1028, 19, 136, "Text"],
Cell[233786, 6435, 398, 9, 59, "Input"]
}, Open  ]],
Cell[234199, 6447, 459, 10, 59, "Input"],
Cell[234661, 6459, 171, 4, 61, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[234869, 6468, 627, 8, 43, "Subsection"],
Cell[235499, 6478, 282, 6, 36, "Text"],
Cell[235784, 6486, 585, 13, 52, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[236394, 6503, 361, 7, 34, "Input"],
Cell[236758, 6512, 896, 21, 230, "Input"],
Cell[237657, 6535, 362, 6, 36, "Text"],
Cell[238022, 6543, 497, 14, 52, "Input",
 InitializationCell->True]
}, Open  ]],
Cell[CellGroupData[{
Cell[238556, 6562, 110, 2, 34, "Input"],
Cell[238669, 6566, 1047, 23, 398, "Input"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[239765, 6595, 77, 0, 43, "Subsection"],
Cell[239845, 6597, 1012, 17, 236, "Text"],
Cell[240860, 6616, 455, 12, 83, "Input"],
Cell[CellGroupData[{
Cell[241340, 6632, 100, 2, 34, "Input"],
Cell[241443, 6636, 1077, 35, 158, "Output"]
}, Open  ]],
Cell[242535, 6674, 114, 1, 36, "Text"],
Cell[242652, 6677, 956, 24, 203, "Input"],
Cell[243611, 6703, 250, 5, 36, "Text"],
Cell[243864, 6710, 1841, 50, 157, "Input"],
Cell[245708, 6762, 131, 3, 36, "Text"],
Cell[245842, 6767, 847, 23, 110, "Input"],
Cell[246692, 6792, 122, 3, 36, "Text"],
Cell[246817, 6797, 22, 0, 36, "Text"],
Cell[246842, 6799, 62, 1, 34, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[246941, 6805, 67, 0, 43, "Subsection"],
Cell[247011, 6807, 75, 1, 36, "Text",
 CellID->951052887],
Cell[247089, 6810, 16, 0, 36, "Text"],
Cell[CellGroupData[{
Cell[247130, 6814, 580, 12, 86, "Text"],
Cell[247713, 6828, 264, 9, 50, "Input",
 InitializationCell->True],
Cell[247980, 6839, 262, 9, 50, "Input",
 InitializationCell->True],
Cell[248245, 6850, 116, 3, 36, "Text"],
Cell[248364, 6855, 797, 20, 291, "Input",
 InitializationCell->True],
Cell[249164, 6877, 597, 15, 147, "Input",
 InitializationCell->True],
Cell[249764, 6894, 602, 15, 147, "Input",
 InitializationCell->True],
Cell[250369, 6911, 615, 15, 147, "Input",
 InitializationCell->True],
Cell[250987, 6928, 507, 15, 63, "Text",
 InitializationCell->True],
Cell[251497, 6945, 336, 10, 50, "Input",
 InitializationCell->True]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[251882, 6961, 41, 0, 43, "Subsection"],
Cell[251926, 6963, 696, 18, 336, "Text"],
Cell[252625, 6983, 192, 5, 86, "Text"],
Cell[252820, 6990, 183, 6, 111, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[253040, 7001, 45, 0, 43, "Subsection"],
Cell[253088, 7003, 164, 3, 36, "Text"],
Cell[253255, 7008, 832, 18, 163, "Text"],
Cell[254090, 7028, 853, 19, 291, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[254980, 7052, 54, 0, 43, "Subsection"],
Cell[255037, 7054, 138, 3, 36, "Text"],
Cell[255178, 7059, 260, 5, 61, "Text"],
Cell[255441, 7066, 760, 18, 195, "Input",
 InitializationCell->True],
Cell[256204, 7086, 442, 13, 50, "Input",
 InitializationCell->True],
Cell[256649, 7101, 72, 0, 36, "Text"],
Cell[256724, 7103, 513, 14, 148, "Input",
 InitializationCell->True]
}, Closed]]
}, Open  ]]
}, Open  ]],
Cell[257276, 7122, 178, 3, 61, "Input"]
}
]
*)

