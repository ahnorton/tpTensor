(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[         0,          0]
NotebookDataLength[    272082,       5736]
NotebookOptionsPosition[    245857,       4973]
NotebookOutlinePosition[    251808,       5121]
CellTagsIndexPosition[    251315,       5107]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{

Cell[CellGroupData[{
Cell["Part0:  Setup and Usage", "Section",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119352821146*^9}, {
   3.471552225395822*^9, 3.471552280586513*^9}, {3.479562697916323*^9, 
   3.479562749011466*^9}, {3.479562836251296*^9, 3.479562837450955*^9}, {
   3.479563039322941*^9, 3.479563043217465*^9}, {3.479640398403575*^9, 
   3.479640442237991*^9}, {3.615250343945717*^9, 3.615250345847904*^9}, {
   3.649818752958714*^9, 3.6498187530384073`*^9}, {3.652922573085692*^9, 
   3.6529225731651773`*^9}, {3.65422008493299*^9, 3.654220085845105*^9}, {
   3.654908667026458*^9, 3.6549088313601933`*^9}, {3.655173214698143*^9, 
   3.655173236313908*^9}, {3.6551735519097757`*^9, 3.655173578645134*^9}, 
   3.655237767800765*^9, {3.655318594851457*^9, 3.655318612995058*^9}, 
   3.655318967918749*^9}],

Cell[CellGroupData[{

Cell["Changes", "Subsection",
 CellChangeTimes->{
  3.479670483383071*^9, {3.479670540308536*^9, 3.479670559137392*^9}, {
   3.5276270090411997`*^9, 3.5276270164505167`*^9}, {3.655173357192357*^9, 
   3.655173392567836*^9}, 3.6553191223807163`*^9}],

Cell[CellGroupData[{

Cell["Versions 0.1 and 0.2", "Subsubsection",
 CellChangeTimes->{{3.6152504629520063`*^9, 3.615250470760065*^9}, {
  3.6551732536096992`*^9, 3.655173257497238*^9}}],

Cell[TextData[{
 "15/10/2011   ---   Working on extension package  Clifford.nb.  Had usable \
code from Dec 2011, but it was a big mess:\n                             ---  \
 added  deg[ ]  code for hyperbolic fns.\n                             ---   \
redefined  rev[ ] .   Got into infinite loop when Clifford relation is used.\n\
                             ---   Let   j = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SubscriptBox["e", "0"], "\[CircleTimes]", 
    SubscriptBox["e", "1"], "\[CircleTimes]", 
    SubscriptBox["e", "2"], "\[CircleTimes]", 
    SubscriptBox["e", "3"]}], TraditionalForm]]],
 "   then calculating     j \[CircleTimes] j = -1   was taking 6sec !   Now \
takes about  0.0013 sec.\n                                      Did a \
complete re-write of the  \[CircleTimes] code.\n                             \
---   Redefined code for  struts[ ]  etc.  to work with Clifford expressions.\
\n                             ---   Made  deg[ ]   Listable  for use in new  \
struts[ ]  code.      \n                             ---   Allow  deg[ ]   to \
return the value Indeterminate.    \n                      \n4/4/2012        \
---   Added commutation rule for  \[Del]\[Del]\[Phi]   for  \[Phi]  a scalar  \
(  deg[ \[Phi] ] = 1 ).   It is in the  mvToLast[ ]  code section.\n          \
                ---   Fixed major bug in SimplifyTensor:  costruts[ ]  was \
not working as it should.  The bug would have been \n                         \
          introduced when I made changes for Clifford, to have a \
\[OpenCurlyDoubleQuote]1\[CloseCurlyDoubleQuote] strut for scalar parts. \n\
5/4/2012         ---   Wrote   SeriesProduct[ ]   to replace old series code  \
(which just converted to/from normal).                \n                      \
     ---   Added series rules for    rev[ ]   sym[ ]   alt[ ]   mvToLast[ ]  \
.\n12/4/2012       ---   Fixed major bug in code for D[ ] written 27/06/2011. \
 Had  D[ a_ \[CircleTimes] b_, s_]  instead of   D[ a_ \[CircleTimes] b_,  \
s_Symbol ] ,  and s_   \n                                   matches, for \
example,  {s, 2}.  Don\[CloseCurlyQuote]t think I\[CloseCurlyQuote]ve ever \
used it until now ( for s-deriv of angular velocity  ",
 Cell[BoxData[
  FormBox[
   SuperscriptBox["\[CapitalOmega]", 
    RowBox[{" ", "\[Prime]"}]], TraditionalForm]]],
 " ).                  \n18/4/2012       ---   Added defn for   \
\[LeftAngleBracket] x_List ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[RightAngleBracket]", 
    RowBox[{"i", ",", "j"}]], TraditionalForm]]],
 " .         \n                                   Added   mvToLast [n_, 0] = \
0     so that it would work on series with zero coefficients.      \n\
19/4/2012       ---   Fixed factor ordering for  SeriesProduct[ ].\n25/4/2012 \
      ---   Changed rules for  D[ ]  so that it works more generally (this \
bug would have been noticed if encountered before).\n23/5/2014       ---   \
Fixed  sym[ ]  and  alt[ ].  These were giving wrong answers when applied to \
any tensor product with any factors\n                                   with \
deg >1.  Defined them for products of a deg=1 and a deg=2  (total deg =3). \n\
23/5/2014       ---   Added a rule for   mvToLast[ 2,  a \[CircleTimes] b ]   \
where  deg[a]=2  and  a = rev[a].\n                                   Added a \
rule  for  mvToLast[ 1,  a  ]  where  deg[a]=2  (same as rev[a]).        \n   \
                                Added a rule for  \
\[LeftAngleBracket]mvToLast[ 1,  a  ], v\[RightAngleBracket]  where  deg[v]=1 \
  (v can be put at front).\n31/5/2014       ---   Defined  deg[ ]  for \
SeriesData, so that  div[ ]  will work on series. \n03/6/2014       ---   \
Re-defined  deg[ ]  so that degree checking for sums is optional, via \
variable  degFullCheck = True or False (default is True).    \n06/06/2014     \
---   Wrote code for direct calc of  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", "   ", "\[RightAngleBracket]"}], 
    RowBox[{"a", ",", "b"}]], TraditionalForm]]],
 "  for the case that slots a,b are both vector slots.  This code is not \
being used\n                                    because it is actually a bit \
slower than the existing code. But for large tensor products (100s of \
factors) it might be quicker. \n06/06/2014     ---   Fixed code for  \
SeriesData \[CircleTimes]  SeriesData   so that it does not slow down \
\[CircleTimes]  for many factors ( eg. > 8 factors). \n                       \
            Made similar changes for  \[LeftAngleBracket] SeriesData ,  \
SeriesData \[RightAngleBracket].     \n06/06/2014     ---   Added the \
identites  sym[\[Eta]] = \[Eta],  alt[\[Eta]] = 0.\n                          \
          Extended defn of sym to deg 4, all possible args.\n08/06/2014     \
---   Added a few untangling relations for \[LeftAngleBracket] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[RightAngleBracket]", 
    RowBox[{"a", ",", "b"}]], TraditionalForm]]],
 " .                  \n08/06/2014     ---   Extended defns of   NewField[ ]  \
etc. to take lists of field names. \n\n23/06/2014     ---   Version 0.2 \
started. \n                                   New package name.\n             \
                      Removed relns involving \[LeftAngleBracket] , \
\[RightAngleBracket]  to get  mv[ ]  code going.  \n30/06/2014     ---   \
Copied code from file  mvRules_theory.nb  to here, into section \
\[OpenCurlyDoubleQuote]Package code new in vesion 0.2\[CloseCurlyDoubleQuote]\
\n                                   Wrote doc section for the new code.\n    \
                               Now using Private context --  if anything is \
missing, that\[CloseCurlyQuote]s why! \n                                   \
Wrote package  Backup  and added code to use it."
}], "Text",
 CellChangeTimes->{{3.527627027108408*^9, 3.5276271675069437`*^9}, {
   3.5276274218601522`*^9, 3.527627454707616*^9}, {3.527627490531898*^9, 
   3.527627625844708*^9}, {3.527636654411702*^9, 3.527636799499662*^9}, {
   3.5276368402058268`*^9, 3.527636865530725*^9}, {3.527637652784244*^9, 
   3.5276377065421333`*^9}, {3.527638474336524*^9, 3.527638474832076*^9}, {
   3.5276549736407948`*^9, 3.527655033604569*^9}, {3.527656310714676*^9, 
   3.5276563214656067`*^9}, {3.5276693232092943`*^9, 
   3.5276693528992023`*^9}, {3.542512209009325*^9, 3.5425123150844097`*^9}, {
   3.5425129691524773`*^9, 3.542513002537384*^9}, {3.542537235051633*^9, 
   3.5425374017822657`*^9}, {3.542605744998864*^9, 3.5426059293658667`*^9}, {
   3.542606917965888*^9, 3.542606949754808*^9}, {3.542608808275168*^9, 
   3.542608819969582*^9}, 3.542622283411907*^9, {3.543178013303269*^9, 
   3.543178013606472*^9}, {3.543178045824019*^9, 3.543178385345443*^9}, {
   3.543178920701404*^9, 3.543178934835133*^9}, {3.5437121839008102`*^9, 
   3.543712228428966*^9}, {3.543720510910718*^9, 3.543720558678145*^9}, {
   3.543723939927621*^9, 3.5437239433662786`*^9}, {3.543803470279929*^9, 
   3.543803528493965*^9}, {3.544321090056221*^9, 3.544321261609786*^9}, {
   3.5443212925555153`*^9, 3.5443212962018213`*^9}, {3.609829449170041*^9, 
   3.609829536996689*^9}, {3.609829579941206*^9, 3.609829757475914*^9}, {
   3.6098313853271914`*^9, 3.6098314609115467`*^9}, {3.6098323326129513`*^9, 
   3.609832430324438*^9}, {3.6098342315481787`*^9, 3.6098342880925207`*^9}, 
   3.6098350144330063`*^9, {3.6098363558299303`*^9, 3.6098364117653103`*^9}, {
   3.6104977772580976`*^9, 3.610497872984518*^9}, {3.610707404039764*^9, 
   3.61070751463522*^9}, {3.611031764319831*^9, 3.611031883407892*^9}, {
   3.611038177777109*^9, 3.611038367567555*^9}, {3.6110384075240088`*^9, 
   3.611038449630951*^9}, {3.611051429864917*^9, 3.611051493574161*^9}, {
   3.611052048773419*^9, 3.61105207029781*^9}, {3.611192755244009*^9, 
   3.611192835948103*^9}, {3.611203280892651*^9, 3.611203337064419*^9}, {
   3.6124892567981443`*^9, 3.6124893727339907`*^9}, {3.612489403073794*^9, 
   3.612489414845708*^9}, {3.613097962235606*^9, 3.613098242876915*^9}, {
   3.615250416941896*^9, 3.61525045201407*^9}, {3.64946411593723*^9, 
   3.6494643519006968`*^9}, {3.6494690531395407`*^9, 
   3.6494690952826567`*^9}, {3.649536266487574*^9, 3.649536330071705*^9}, {
   3.649702906026232*^9, 3.649703268723592*^9}, {3.649703600032132*^9, 
   3.6497036025449753`*^9}, {3.64970364409305*^9, 3.6497037037739*^9}, {
   3.6497039443785343`*^9, 3.649703948683885*^9}, {3.649706007404455*^9, 
   3.649706442421739*^9}, {3.649734052601636*^9, 3.649734093812056*^9}, {
   3.649734157897607*^9, 3.649734411951808*^9}, {3.64981879956581*^9, 
   3.649818806989643*^9}, {3.655173313371772*^9, 3.655173326090777*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Version 0.3", "Subsubsection",
 CellChangeTimes->{{3.6152504862319727`*^9, 3.615250488408039*^9}, {
  3.655173262617371*^9, 3.655173284088763*^9}}],

Cell["\<\
25/07/2014    Started version 3.  Introduced multi-subscripted bracket.

06/10/2014    Part 4, differential geometry, is usable.     

25/08/2015   ---  Flattened   \[LeftAngleBracket] , ... , \
\[RightAngleBracket]   for arbitrary degree.  Not sure if there were earlier \
problems doing so ???   
                                    If it goes wrong, this is probably why.  \
The new code is in Section:        
                                                    The special contraction \
bracket  \[LeftAngleBracket] x, y, z, ... \[RightAngleBracket]   
                                                     \[Rule]    \
\[LeftAngleBracket] ,  ,  , \[RightAngleBracket]   is almost flat             \
                                                       
                                   
                                   Added rules:   \[GothicCapitalD][\[Eta]] = \
0,  pD[\[Eta]] = 0.  \
\>", "Text",
 CellChangeTimes->{{3.6152505037357492`*^9, 3.6152505597688437`*^9}, {
   3.62158609811909*^9, 3.621586184455208*^9}, {3.649818777245986*^9, 
   3.649818793490055*^9}, 3.649818825485505*^9, {3.6498190986019783`*^9, 
   3.649819099770602*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Version 0.4", "Subsubsection",
 CellChangeTimes->{{3.6152504862319727`*^9, 3.615250488408039*^9}, {
  3.649819087737914*^9, 3.6498190879299583`*^9}, {3.655173267753448*^9, 
  3.655173281225051*^9}}],

Cell[TextData[{
 "29/08/2015    Started version 4.  \n                             Re-wrote  \
code involving  rev[ ]. \n                             \n10/09/2015    Could \
aim for canonical terms at given levels of complexity, and apply rules in \
complexity order:\n                             complexity class  =  \
{n=degree of expression,   j=number of fields involved in the expression,  \
k=highest deg of any factor}\n                             class {0, 1, 4}:   \
",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"X_", "?", "deg2Q"}], "\[RightAngleBracket]"}], 
     "\[RightAngleBracket]"}], 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]], TraditionalForm]]],
 " ,  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"X_", "?", "deg4Q"}], "\[RightAngleBracket]"}], 
     "\[RightAngleBracket]"}], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"3", ",", "4"}], "}"}]}]], TraditionalForm]]],
 " ,  ....\n                             class {0, 2, 1}:   \
\[LeftAngleBracket]v1,v2\[RightAngleBracket]\n                             \
class {0, 3}:        \[LeftAngleBracket]v1,X,v2\[RightAngleBracket],  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"v1", "\[CircleTimes]", "v2", "\[CircleTimes]", "X"}], 
     "\[RightAngleBracket]"}], 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"1", ",", "3"}], "}"}], ",", " ", 
     RowBox[{"{", 
      RowBox[{"2", ",", "4"}], "}"}]}]], TraditionalForm]]],
 " , ....                       \n                             ....\n         \
                    Loop over  j, k, for all possible compositions of  \
\[LeftAngleBracket] ,, \[RightAngleBracket] , \[LeftAngleBracket] ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[RightAngleBracket]", "ab"], TraditionalForm]]],
 " , \[CircleTimes], rev, and symmetry declaration of factors.  Sort on  n.\n \
                            Could substitute frame components to generate \
equivalence classes, then select a canonical rep from each class.\n           \
                  \n10/09/2015    Finally got  tpTensorVer4  and  \
dipole_electron_model_v8.nb  running together  (have been working on this \
since 25/08/2015).\n                             Have also switched over to  ",
 StyleBox["Mathematica",
  FontSlant->"Italic"],
 " 10.1.0. "
}], "Text",
 CellChangeTimes->{{3.6152505037357492`*^9, 3.6152505597688437`*^9}, {
   3.62158609811909*^9, 3.621586184455208*^9}, {3.649818777245986*^9, 
   3.649818793490055*^9}, 3.649818825485505*^9, {3.649819126697915*^9, 
   3.649819262952351*^9}, {3.649819392091223*^9, 3.649819678084919*^9}, 
   3.6502256152640257`*^9, {3.650837033703911*^9, 3.6508371750144367`*^9}, {
   3.650837210933177*^9, 3.650837367683104*^9}, {3.650837398147279*^9, 
   3.650837537313635*^9}, {3.650837571440363*^9, 3.650837699294887*^9}, {
   3.65083773031872*^9, 3.650837732718357*^9}, {3.650837789790164*^9, 
   3.6508378673725233`*^9}, {3.650838698610099*^9, 3.6508388024868107`*^9}, {
   3.650838842143655*^9, 3.6508388628475533`*^9}, {3.650838905663047*^9, 
   3.650838939214245*^9}, {3.65083902463734*^9, 3.6508391118358173`*^9}, {
   3.6509153523265743`*^9, 3.650915599714737*^9}, {3.650915662837268*^9, 
   3.650915706673511*^9}}],

Cell[TextData[{
 "11/09/2015     Added general rules to simplify     \[LeftAngleBracket]\
\[LeftAngleBracket] Shat,  \[CurlyEpsilon]4,  u\[RightAngleBracket],  \
\[CurlyEpsilon]4,  u\[RightAngleBracket]    and  ",
 Cell[BoxData[
  RowBox[{"\[LeftAngleBracket]", 
   RowBox[{
    SubscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"Stensor", ",", "\[CurlyEpsilon]4", ",", "u"}], 
       "\[RightAngleBracket]"}], "\[RightAngleBracket]"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]], ",", " ", "\[CurlyEpsilon]4", ",", " ",
     "u"}], "\[RightAngleBracket]"}]],
  CellChangeTimes->{{3.650918397219698*^9, 3.650918401821677*^9}}],
 "  \n                              ",
 Cell[BoxData[
  RowBox[{"AddRule", "[", 
   RowBox[{
    SubscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"S_", "?", "deg2Q"}], ",", "\[CurlyEpsilon]4", ",", 
        RowBox[{"u_", "?", "deg1Q"}]}], "\[RightAngleBracket]"}], 
      "\[RightAngleBracket]"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]], ":=", 
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{
      SubscriptBox[
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{"\[LeftAngleBracket]", 
         RowBox[{"S", ",", "\[CurlyEpsilon]4"}], "\[RightAngleBracket]"}], 
        "\[RightAngleBracket]"}], 
       RowBox[{"{", 
        RowBox[{"1", ",", "2"}], "}"}]], ",", "u"}], 
     "\[RightAngleBracket]"}]}], "]"}]], "Input",
  CellChangeTimes->{{3.650925982440502*^9, 3.650926014569273*^9}, {
   3.65092604847272*^9, 3.650926080217662*^9}, {3.6509261332075253`*^9, 
   3.650926138887044*^9}, {3.65092618808502*^9, 3.650926191093128*^9}, {
   3.6509263010915747`*^9, 3.65092630712335*^9}}],
 "   in section on shrinking  \[LeftAngleBracket]  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[RightAngleBracket]", "ab"], TraditionalForm]]],
 "  into  \[LeftAngleBracket] ,, \[RightAngleBracket].\n                      \
        \n                              Perhaps all simplifications should be \
via a canonical form  \[LeftAngleBracket] X1_?FieldQ \[CircleTimes] ... \
\[CircleTimes] Xn_?FieldQ ",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[RightAngleBracket]", "ab__"], TraditionalForm]]],
 " ?  Ie,    expression \[Rule] canonical \[Rule] simplified. "
}], "Text",
 CellChangeTimes->{{3.650915726320903*^9, 3.650915790095969*^9}, {
  3.6509183383656273`*^9, 3.6509183464431267`*^9}, {3.650918378642551*^9, 
  3.6509184542198*^9}, {3.650926246066619*^9, 3.650926249470167*^9}, {
  3.650926319476787*^9, 3.650926335510324*^9}, {3.650927377907633*^9, 
  3.650927519569708*^9}, {3.650927661007876*^9, 3.650927685919505*^9}, {
  3.650928670274075*^9, 3.650928698689865*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Version 0.5", "Subsubsection",
 CellChangeTimes->{{3.6152504862319727`*^9, 3.615250488408039*^9}, {
  3.649819087737914*^9, 3.6498190879299583`*^9}, {3.6538612161154833`*^9, 
  3.65386121621128*^9}, {3.65517327229739*^9, 3.655173282472762*^9}}],

Cell["\<\
15/10/2015   TensorType[ ]  and updated  NewField[ ]  are going.
\
\>", "Text",
 CellChangeTimes->{{3.653861235507248*^9, 3.6538612816668386`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["To do", "Subsubsection",
 CellChangeTimes->{{3.6152504862319727`*^9, 3.615250488408039*^9}, {
  3.649819087737914*^9, 3.6498190879299583`*^9}, {3.6538612161154833`*^9, 
  3.65386121621128*^9}, {3.6538613260980787`*^9, 3.653861331601972*^9}, {
  3.6551733791279182`*^9, 3.655173396359384*^9}}],

Cell[TextData[{
 "CyclicSum \n",
 Cell[BoxData[
  FormBox[
   SubscriptBox["\[Delta]", "n"], TraditionalForm]]],
 "\nSection  \[OpenCurlyDoubleQuote]\[Eta] as contraction\
\[CloseCurlyDoubleQuote]   replace  \[Eta]  by  g  and use  metricQ[g].  Get  \
\[LeftAngleBracket] \[RightAngleBracket]  to check types of adjacent slots.\n\
Canonical testing.\nReplace  d[ ]  and  pd[ ]  by  CoordCovector[  ]   and  \
CoordVector[  ]"
}], "Text",
 CellChangeTimes->{{3.653861346305788*^9, 3.6538613743854733`*^9}, {
  3.653878351639577*^9, 3.653878388519185*^9}, {3.653878780130665*^9, 
  3.6538788237620163`*^9}, {3.65387886491355*^9, 3.653878894449285*^9}, {
  3.654032402046404*^9, 3.654032409566669*^9}, {3.654129827316712*^9, 
  3.654129874774157*^9}}]
}, Closed]]
}, Open  ]],

Cell["New in Version 0.6.0", "Subsubsection"],

Cell[TextData[{
 "\nNov 2016:   Wedge code is now usable.\n                    Clifford \
algebra is now usable.\n                    \n                    Added rule: \
  alt[][X_?AntisymQ]:=X\n                    \n2016/11/20     New functions:  \
    Permuted,  AlternatingSum,  SymmetricSum,  CyclicSum       \n2016/11/22   \
  Removed declaration of  f\[ThinSpace][ _ _ ]  when declaring  f.   Changes \
to:   NewField,  ClearField,  SymQ,  AntisymQ\n2016/11/22     New functions:  \
    NewOrthonormalFrame[ ] ,   IndexString[ ] ,   WedgeToIndexed[ ] ,   \
IndexedToWedge[ ]\n\n2017/05/04     Added a few simplification rules in Part \
3  (search on date if necessary),\n\n                         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"M1_", "?", "deg2Q"}], ",", 
        RowBox[{"M2_", "?", "deg2Q"}], ",", 
        RowBox[{"M3_", "?", "deg2Q"}]}], "\[RightAngleBracket]"}], 
      "\[RightAngleBracket]"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]], "/;", 
    RowBox[{
     RowBox[{"HasSymQ", "[", 
      RowBox[{"M1", ",", "M2", ",", "M3"}], "]"}], "&&", 
     RowBox[{"!", 
      RowBox[{"OrderedAkaQ", "[", 
       RowBox[{"{", 
        RowBox[{"M1", ",", "M2"}], "}"}], "]"}]}]}]}], ":=", 
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", 
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{
       RowBox[{"rev", "[", "M2", "]"}], ",", 
       RowBox[{"rev", "[", "M1", "]"}], ",", 
       RowBox[{"rev", "[", "M3", "]"}]}], "\[RightAngleBracket]"}], 
     "\[RightAngleBracket]"}], 
    RowBox[{"{", 
     RowBox[{"1", ",", "2"}], "}"}]]}]], "Input"],
 "\n",
 Cell[BoxData[
  RowBox[{"                          ", 
   RowBox[{
    RowBox[{
     SubscriptBox[
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{"\[LeftAngleBracket]", 
        RowBox[{
         RowBox[{"M1_", "?", "deg2Q"}], ",", 
         RowBox[{"M2_", "?", "deg2Q"}], ",", 
         RowBox[{"M3_", "?", "deg2Q"}]}], "\[RightAngleBracket]"}], 
       "\[RightAngleBracket]"}], 
      RowBox[{"{", 
       RowBox[{"1", ",", "2"}], "}"}]], "/;", 
     RowBox[{
      RowBox[{"HasSymQ", "[", 
       RowBox[{"M1", ",", "M2", ",", "M3"}], "]"}], "&&", 
      RowBox[{"!", 
       RowBox[{"OrderedAkaQ", "[", 
        RowBox[{"{", 
         RowBox[{"M2", ",", "M3"}], "}"}], "]"}]}]}]}], ":=", 
    SubscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"rev", "[", "M1", "]"}], ",", 
        RowBox[{"rev", "[", "M3", "]"}], ",", 
        RowBox[{"rev", "[", "M2", "]"}]}], "\[RightAngleBracket]"}], 
      "\[RightAngleBracket]"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]]}]}]], "Input"],
 "\n                         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"M1_", "?", "deg2Q"}], ",", 
        RowBox[{"M2_", "?", "deg2Q"}], ",", 
        RowBox[{"M2_", "?", "deg2Q"}]}], "\[RightAngleBracket]"}], 
      "\[RightAngleBracket]"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]], "/;", 
    RowBox[{
     RowBox[{"AntisymQ", "[", "M1", "]"}], "&&", 
     RowBox[{"HasSymQ", "[", "M2", "]"}]}]}], ":=", "0"}]], "Input"],
 "\n                         ",
 Cell[BoxData[
  RowBox[{
   RowBox[{
    SubscriptBox[
     RowBox[{"\[LeftAngleBracket]", 
      RowBox[{"\[LeftAngleBracket]", 
       RowBox[{
        RowBox[{"M1_", "?", "deg2Q"}], ",", 
        RowBox[{"M1_", "?", "deg2Q"}], ",", 
        RowBox[{"M2_", "?", "deg2Q"}]}], "\[RightAngleBracket]"}], 
      "\[RightAngleBracket]"}], 
     RowBox[{"{", 
      RowBox[{"1", ",", "2"}], "}"}]], "/;", 
    RowBox[{
     RowBox[{"AntisymQ", "[", "M2", "]"}], "&&", 
     RowBox[{"HasSymQ", "[", "M1", "]"}]}]}], ":=", "0"}]], "Input"],
 "\n                         \n 2107/05/31   Complete re-write of all  \
\[CurlyEpsilon]4  rules.\n                        Added some rules for  SymQ  \
and AntisymQ  (in \[CurlyEpsilon]4 section).               \n                 \
       \n 2017/06/06   Code for  grad[ X ] = ",
 Cell[BoxData[
  FormBox[
   RowBox[{
    SuperscriptBox["\[Del]", "\[Sharp]"], "X"}], TraditionalForm]],
  FormatType->"TraditionalForm"],
 "  added.  Full set of rules, only uses \[Del] for any final assigned \
values.                             "
}], "Text"],

Cell[CellGroupData[{

Cell["Setup", "Subsection",
 CellChangeTimes->{{3.6551730630199757`*^9, 3.655173064283948*^9}}],

Cell["\<\
The package   RuleNumbers`   provides some really neat debugging:    Wrap   \
AddRule[ ]   around any  SetDelayed  ( := )  statement and its usage will be \
logged.
It is very easy to write a set of simplification rules that go around in \
circles.  It wasn\[CloseCurlyQuote]t long before I realised that I needed \
something like  RuleNumbers.

The debugging facilities provided by   RuleNumbers`  can be used from this \
Notebook  and also from any Notebook using tpTensor. (You can also use  \
RuleNumbers`  
for your own software -  see the  RuleNumbers`  package for details ).\
\>", "Text"],

Cell["\<\
Unfortunately, the  RuleNumbers`  package is more-or-less unusable when  \
tpTensor  is made a true package.  Any variables that appear in the rules are \
output prefixed 
by  tpTensor`Private`  which makes the rules almost unreadable.  Switching to \
context    tpTensor`Private`   does not help because any shadowed variables \
still get 
prefixed on output.  So  tpTensor  is not a  true package.  Instead, we just \
try to write clean code and not leave anything around with obvious names that \
would better
be Private.  To make  tptensor  behave like a package (so that it loads just \
once via Needs[ \[VeryThinSpace]]),\
\>", "Text"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"BeginPackage", "[", "\"\<tpTensor`\>\"", "]"}], ";"}], "\n", 
 RowBox[{"EndPackage", "[", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.654857470351177*^9, 3.6548575010643787`*^9}, {
  3.654884870254821*^9, 3.654884874030057*^9}, {3.654908419607689*^9, 
  3.654908420118203*^9}, {3.682823935846368*^9, 3.682823936101955*^9}}],

Cell[TextData[{
 "If the above Package statements were not included, then   Needs[ ",
 Cell[BoxData["\"\<tpTensor`\>\""], "Input",
  CellChangeTimes->{{3.655197596644383*^9, 3.655197602372306*^9}}],
 " ]   would still find and load the  .m  file, but would issue a warning \
message\nto say that   \[OpenCurlyDoubleQuote]Context  tpTensor` was not \
created when Needs was evaluated.\[CloseCurlyDoubleQuote]"
}], "Text"],

Cell[BoxData[
 RowBox[{
  RowBox[{"Needs", "[", "\"\<RuleNumbers`\>\"", "]"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.654857470351177*^9, 3.6548575010643787`*^9}, {
   3.654884870254821*^9, 3.654884874030057*^9}, 3.6549084792057447`*^9, {
   3.655175476131691*^9, 3.655175478604706*^9}, 3.655175583355012*^9}],

Cell["Click on a function name to get info:", "Text"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "RuleNumbers`*"}]], "Input"],

Cell[BoxData[
 DynamicModuleBox[{Typeset`open$$ = True}, 
  PaneSelectorBox[{False->
   RowBox[{
    OpenerBox[Dynamic[Typeset`open$$],
     ImageSize->Small], 
    StyleBox["RuleNumbers`", "InfoHeading"]}], True->GridBox[{
     {
      RowBox[{
       OpenerBox[Dynamic[Typeset`open$$],
        ImageSize->Small], 
       StyleBox["RuleNumbers`", "InfoHeading"]}]},
     {GridBox[{
        {
         ButtonBox["AbortAtMessage",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"AbortAtMessage", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["LogAsUsed",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"LogAsUsed", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["PrintRulesUsed",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"PrintRulesUsed", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["RuleStats",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"RuleStats", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["SaveDebugOutput",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"SaveDebugOutput", "RuleNumbers`"}},
          
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["Snoopr",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"Snoopr", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["UnsetRule",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"UnsetRule", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"]},
        {
         ButtonBox["AddRule",
          BaseStyle->"InformationLink",
          ButtonData:>{
           "Info15303705140420-6522965", {"AddRule", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["PrintDebugOutput",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"PrintDebugOutput", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["ResetRule",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"ResetRule", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["RulesUsed",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"RulesUsed", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["Snoop",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"Snoop", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["StartDebug",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"StartDebug", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["$DebugDelay",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"$DebugDelay", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"]},
        {
         ButtonBox["ClearRuleStats",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"ClearRuleStats", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["PrintRules",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"PrintRules", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["rule",
          BaseStyle->"InformationLink",
          ButtonData:>{"Info15303705140420-6522965", {"rule", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["RulesUsedList",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"RulesUsedList", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["snoopedExpression",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {
            "snoopedExpression", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["StepRule",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"StepRule", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["$Snooping",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"$Snooping", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"]},
        {
         ButtonBox["LengthRulesUsedList",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {
            "LengthRulesUsedList", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["PrintRuleStats",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"PrintRuleStats", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["RuleNumbers",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"RuleNumbers", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["ruleTag",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"ruleTag", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["snoopedRuleNumber",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {
            "snoopedRuleNumber", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], 
         ButtonBox["StopDebug",
          BaseStyle->"InformationLink",
          
          ButtonData:>{
           "Info15303705140420-6522965", {"StopDebug", "RuleNumbers`"}},
          ButtonNote->"RuleNumbers`"], ""}
       },
       DefaultBaseStyle->"InfoGrid",
       GridBoxItemSize->{"Columns" -> {{
            Scaled[0.1357142857142857]}}}]}
    },
    GridBoxAlignment->{"Columns" -> {{Left}}, "Rows" -> {{Baseline}}}]}, 
   Dynamic[Typeset`open$$],
   ImageSize->Automatic]]], "Print", "InfoCell"]
}, Open  ]],

Cell["\<\
Turning off the debugging capability of   RuleNumbers`  makes almost no \
difference to speed (about 1% ?).  
If you want to check that this is the case, then you can make  AddRule[ ]  do \
nothing at all by executing the following statement (this is not initialized),\
\>", "Text",
 CellChangeTimes->{
  3.65485756858283*^9, 3.654890234627262*^9, {3.654908540435874*^9, 
   3.6549085421960783`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"AddRule", " ", "=", " ", "Identity"}], ";"}]], "Input",
 CellChangeTimes->{{3.6548575808434*^9, 3.654857593079069*^9}}],

Cell["Load the other RequiredPackages,", "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.65490842682143*^9, 3.654908523828136*^9}, {
  3.6551755548275642`*^9, 3.6551755752109833`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"Needs", "[", "\"\<LeviCivitaMTW`\>\"", "]"}], "\n", 
 RowBox[{"Needs", "[", "\"\<PartialDerivative`\>\"", 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"Needs", "[", "\"\<TeXit`\>\"", "]"}]}], "Input",
 InitializationCell->True],

Cell[BoxData["\<\"TeXit version 0.1.0.\"\>"], "Output"]
}, Open  ]],

Cell["\<\
tpTensor functions can be written so as to do optional argument checking:

        o   Argument checking is useful for learners starting with  tpTensor  \
and can also help track down bugs (in both the user\[CloseCurlyQuote]s code \
and in tpTensor).          
        o   tpTensor will run faster by factor of about  2/3  when there is \
no argument checking.  
        o   Argument checking can easily be turned off, but not so easily \
turned back on  (the rules for checking are then applied last rather than \
first, so may not work as well as they should).  
        o  Therefore, the default is   ArgumentChecking = True,  and we let \
the user turn them off.   

If the default is changed to   ArgumentChecking = False,  then all rules \
wrapped with   ArgumentCheck[  ]   will have   UnsetRule[  ]   applied to \
them in the last Notebook part of tpTensor,\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.654857622486478*^9, 3.654857660213665*^9}, {
  3.6809019920354443`*^9, 3.680901992611423*^9}, {3.682829307351241*^9, 
  3.682829325639134*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"ArgumentChecking", " ", "=", " ", "True"}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.615257106324017*^9, 3.615257106330637*^9}, {
   3.6161141397787848`*^9, 3.6161142114427137`*^9}, {3.616222445543585*^9, 
   3.616222589435251*^9}, {3.616225281487726*^9, 3.616225344463428*^9}, {
   3.6162405643461733`*^9, 3.616240565608377*^9}, {3.6499033118895073`*^9, 
   3.649903399397748*^9}, {3.649903473155888*^9, 3.649903725570724*^9}, {
   3.649903757027944*^9, 3.6499040189913673`*^9}, {3.650078154663241*^9, 
   3.650078158278788*^9}, {3.650078331876357*^9, 3.650078335492424*^9}, {
   3.650085602771667*^9, 3.65008566398662*^9}, {3.65008571291187*^9, 
   3.650085831087274*^9}, {3.650085864638941*^9, 3.650086043965205*^9}, {
   3.650086092206201*^9, 3.650086285851678*^9}, {3.6500863227327623`*^9, 
   3.6500863345393953`*^9}, {3.6500865322662*^9, 3.6500866144878807`*^9}, {
   3.6500866615611343`*^9, 3.650086674028348*^9}, {3.650087221119574*^9, 
   3.650087252159584*^9}, {3.6500872862951593`*^9, 3.6500875107318373`*^9}, {
   3.650087557678933*^9, 3.65008755807585*^9}, {3.650088535905094*^9, 
   3.650088548140419*^9}, {3.650571199069069*^9, 3.650571227724861*^9}, {
   3.65057130123355*^9, 3.6505716436033173`*^9}, {3.6505716761091967`*^9, 
   3.650571705329425*^9}, {3.650571753009426*^9, 3.6505718137033052`*^9}, 
   3.650571853117276*^9, {3.650571939406592*^9, 3.650572190552335*^9}, {
   3.654890799967935*^9, 3.654890802829159*^9}}],

Cell["Some unused messages,", "Text",
 CellChangeTimes->{{3.654890818043406*^9, 3.654890838587119*^9}, 
   3.654891057320609*^9, 3.654891419235786*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "messageArgumentCheck", " ", "=", " ", 
   "\"\<tpTensor is currently configured to do argument-checking and will run \
30% slower than normal.\nTurn argument-checking off/on using  \
NoArgumentChecking[ ], DoArgumentChecking[ ].  \nTo change this default \
configuration, edit the tpTensor source notebook.\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.615257106324017*^9, 3.615257106330637*^9}, {
   3.6161141397787848`*^9, 3.6161142114427137`*^9}, {3.616222445543585*^9, 
   3.616222589435251*^9}, {3.616225281487726*^9, 3.616225344463428*^9}, {
   3.6162405643461733`*^9, 3.616240565608377*^9}, {3.6499033118895073`*^9, 
   3.649903399397748*^9}, {3.649903473155888*^9, 3.649903725570724*^9}, {
   3.649903757027944*^9, 3.6499040189913673`*^9}, {3.650078154663241*^9, 
   3.650078158278788*^9}, {3.650078331876357*^9, 3.650078335492424*^9}, {
   3.650085602771667*^9, 3.65008566398662*^9}, {3.65008571291187*^9, 
   3.650085831087274*^9}, {3.650085864638941*^9, 3.650086043965205*^9}, {
   3.650086092206201*^9, 3.650086285851678*^9}, {3.6500863227327623`*^9, 
   3.6500863345393953`*^9}, {3.6500865322662*^9, 3.6500866144878807`*^9}, {
   3.6500866615611343`*^9, 3.650086674028348*^9}, {3.650087221119574*^9, 
   3.650087252159584*^9}, {3.6500872862951593`*^9, 3.6500875107318373`*^9}, {
   3.650087557678933*^9, 3.65008755807585*^9}, {3.650088535905094*^9, 
   3.650088548140419*^9}, {3.650571199069069*^9, 3.650571227724861*^9}, {
   3.65057130123355*^9, 3.6505716436033173`*^9}, {3.6505716761091967`*^9, 
   3.650571705329425*^9}, {3.650571753009426*^9, 3.6505718137033052`*^9}, 
   3.650571853117276*^9, {3.650571939406592*^9, 3.650572190552335*^9}, 
   3.654890812450738*^9, {3.654890862210163*^9, 3.654890883605754*^9}, {
   3.654890918417461*^9, 3.654890956815082*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
  "messageNoArgumentCheck", " ", "=", " ", 
   "\"\<Live fast die young... \n   tpTensor has been configured with no \
argument-checking.\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.615257106324017*^9, 3.615257106330637*^9}, {
   3.6161141397787848`*^9, 3.6161142114427137`*^9}, {3.616222445543585*^9, 
   3.616222589435251*^9}, {3.616225281487726*^9, 3.616225344463428*^9}, {
   3.6162405643461733`*^9, 3.616240565608377*^9}, {3.6499033118895073`*^9, 
   3.649903399397748*^9}, {3.649903473155888*^9, 3.649903725570724*^9}, {
   3.649903757027944*^9, 3.6499040189913673`*^9}, {3.650078154663241*^9, 
   3.650078158278788*^9}, {3.650078331876357*^9, 3.650078335492424*^9}, {
   3.650085602771667*^9, 3.65008566398662*^9}, {3.65008571291187*^9, 
   3.650085831087274*^9}, {3.650085864638941*^9, 3.650086043965205*^9}, {
   3.650086092206201*^9, 3.650086285851678*^9}, {3.6500863227327623`*^9, 
   3.6500863345393953`*^9}, {3.6500865322662*^9, 3.6500866144878807`*^9}, {
   3.6500866615611343`*^9, 3.650086674028348*^9}, {3.650087221119574*^9, 
   3.650087252159584*^9}, {3.6500872862951593`*^9, 3.6500875107318373`*^9}, {
   3.650087557678933*^9, 3.65008755807585*^9}, {3.650088535905094*^9, 
   3.650088548140419*^9}, {3.650571199069069*^9, 3.650571227724861*^9}, {
   3.65057130123355*^9, 3.6505716436033173`*^9}, {3.6505716761091967`*^9, 
   3.650571705329425*^9}, {3.650571753009426*^9, 3.6505718137033052`*^9}, 
   3.650571853117276*^9, {3.650571939406592*^9, 3.650572190552335*^9}, 
   3.654890812450738*^9, {3.654890862210163*^9, 3.654890883605754*^9}, {
   3.654890918417461*^9, 3.654891034730137*^9}, {3.6548911962801847`*^9, 
   3.654891303158576*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"TrueQ", "[", "ArgumentChecking", "]"}], ",", " ", 
   "messageArgumentCheck", ",", "messageNoArgumentCheck"}], "]"}]], "Input",
 CellChangeTimes->{{3.6548910797533607`*^9, 3.65489111824854*^9}, {
  3.654891148282263*^9, 3.654891153177197*^9}}],

Cell["\<\
The normalization for expanding wedge products to tensor products:    \
\[Wedge]  \[Rule]  \[CircleTimes].  

Example:
    \[OpenCurlyDoubleQuote]Standard\[CloseCurlyDoubleQuote] :            a\
\[Wedge]b = a\[CircleTimes]b - b\[CircleTimes]a
    \[OpenCurlyDoubleQuote]NonStandard\[CloseCurlyDoubleQuote]  :    \
a\[Wedge]b =  1/2! (a\[CircleTimes]b - b\[CircleTimes]a)
 
The startup value for an unmodified  tpTensor  installation is \
\[OpenCurlyDoubleQuote]Standard\[CloseCurlyDoubleQuote], \
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"$WedgeNormStartup", "=", " ", "\"\<Standard\>\""}], ";"}]], "Input",\

 InitializationCell->True],

Cell["\<\
degChecking  =  True  will force  deg[ ]  to check that when applied to a sum \
(ie., x_Plus), all terms in the sum are of the same degree. 
Since the default is to expand everything,  deg[ ]  is very rarely (?) \
applied to sums so might as well be True.

For Clifford algebra (using \[CircleTimes] for the Clifford product), this \
needs to be set to False,\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.6500782759800177`*^9, 3.650078292971341*^9}, {
   3.6500783438187113`*^9, 3.6500783962507668`*^9}, {3.650078476137154*^9, 
   3.650078562343671*^9}, {3.650078668998066*^9, 3.650078819636375*^9}, {
   3.6500788610131063`*^9, 3.650078898179298*^9}, 3.650088729963682*^9, {
   3.654891477955105*^9, 3.654891506738524*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"degChecking", " ", "=", " ", "False"}], ";"}]], "Input",
 InitializationCell->True],

Cell["For slideshow presentation,", "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.654123384610098*^9, 3.654123395442238*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{"tpQuiet", "=", "True"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"degChecking", "=", "False"}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.654123250138632*^9, 3.654123268662114*^9}}],

Cell["\<\
This function can be used to find the code in this  Notebook  where  rule[ n \
]   has been defined   (if it is in this part),\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.6139798425279493`*^9, 3.61397995619237*^9}, {
  3.614127802666292*^9, 3.614128022776366*^9}, {3.614128075817279*^9, 
  3.614128105926771*^9}, {3.614128472026587*^9, 3.614128570491885*^9}, {
  3.6143042156692247`*^9, 3.614304232899938*^9}, {3.614475749857141*^9, 
  3.614475780115171*^9}, {3.6144759967856092`*^9, 3.6144760212029*^9}, {
  3.6152564065185957`*^9, 3.615256472470867*^9}, {3.615256521846912*^9, 
  3.6152565929511538`*^9}, {3.654890729580654*^9, 3.65489074082868*^9}, {
  3.655177232198131*^9, 3.655177274692514*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"FindRule", "[", "n_", "]"}], " ", ":=", 
  RowBox[{"(", " ", 
   RowBox[{
    RowBox[{"NotebookFind", "[", 
     RowBox[{
      RowBox[{"EvaluationNotebook", "[", "]"}], ",", 
      RowBox[{"\"\<rule[\>\"", "<>", 
       RowBox[{"ToString", "[", "n", "]"}], "<>", "\"\<]\>\""}]}], "]"}], 
    ";"}], ")"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.614128109148184*^9, 3.6141281131955748`*^9}, {
   3.6141284053728228`*^9, 3.614128465518734*^9}, {3.614128616721567*^9, 
   3.6141286606072283`*^9}, {3.6141297795237637`*^9, 3.614129779875991*^9}, {
   3.614158026924925*^9, 3.614158027017251*^9}, {3.61430176255266*^9, 
   3.61430176459814*^9}, {3.6143040246677437`*^9, 3.614304029530868*^9}, {
   3.614320644052004*^9, 3.6143206452808657`*^9}, {3.614383899452674*^9, 
   3.614383900060285*^9}, {3.6143996971047087`*^9, 3.6143996983194237`*^9}, 
   3.614400061234789*^9, 3.61440049488736*^9, {3.614400554149211*^9, 
   3.614400555939972*^9}, {3.614402045439375*^9, 3.614402046774105*^9}, {
   3.6144028966289167`*^9, 3.614402897441601*^9}, {3.614425270275937*^9, 
   3.614425271475471*^9}, {3.614456176984797*^9, 3.614456178260151*^9}, {
   3.614460891771303*^9, 3.614460892450932*^9}, {3.61446880265156*^9, 
   3.614468803594089*^9}, {3.61446973579285*^9, 3.6144697376791887`*^9}, {
   3.614472366873269*^9, 3.614472368010602*^9}, {3.614477084691945*^9, 
   3.6144770848634977`*^9}, {3.6144790661397047`*^9, 3.614479066969347*^9}, {
   3.614633761256089*^9, 3.6146337626158857`*^9}, {3.614936690966894*^9, 
   3.614936692230398*^9}, {3.615023424728841*^9, 3.615023425638307*^9}, {
   3.615092526750008*^9, 3.615092527338863*^9}, {3.615256501162685*^9, 
   3.615256514508065*^9}, {3.615256607116742*^9, 3.615256632013357*^9}, {
   3.61525673796666*^9, 3.615256744862199*^9}}],

Cell["For example,", "Text",
 CellChangeTimes->{{3.65008877325876*^9, 3.650088776458914*^9}}],

Cell[BoxData[
 RowBox[{"FindRule", "[", "96", "]"}]], "Input",
 CellChangeTimes->CompressedData["
1:eJwdyE1I03EYwPHhQU2nGSq+5ChLQT1ME11pHvptZRRbDEFF3OYbKquDYJIe
/uIcw0P8GaFuHVwgo8RRh2oqKkOtgyhMfIP5MjEZQbE/uJeGB9taz/Mcvnzg
W9jZ19CdIBKJiiHU92cq2RzwM/vz8iuoxXCUWhP0M4UnRtaPc+dacNw9TWr0
k3PDYJJ8m1zLuLNlAheHYqTl48WiGUw3S5bQWwuv1tGDb+/J3LP9qmVwzBUg
OTb86Tc4VDZK1l71PqsI+dmpL0auv5hR6UH7nESNnmxO2dBrfVtkyUZu9gmo
O3xMRp3ns1GQCxY4UOtAQ2Na2M8GbCYyfGp/owHTJ0QW1J1nFbeDpvJdUuIK
3kCNmTk30XvNMima79SQjsG/D9BeXwGjL5e6UK28n3z35JGuA/y+bSPdFh3f
CUbajOTt1aUI+nTES2r3Vip6QK4qRvb8OqpFw46M+2ipsuwhqvAwUnzZqkY/
ZPJkkzKrFeVddeSeQdqlB0c/d5BFr4uXlZUCm4irSN9g5F8I3JmPky1f5lPi
IDfzg1Tzxx57tcAS+QA5G1UY62UC+xkykLa31ye77grs4tJKyitHXspqBPY1
1Uz+B5z3TaI=
  "]],

Cell["\<\
For info about available characters see:    guide/ListingOfNamedCharacters    \
 \[LeftArrow]  highlight then F1, or click on the following link,\
\>", "Text",
 CellFrame->{{0, 0}, {0, 0.5}},
 CellChangeTimes->{{3.621023107399118*^9, 3.62102315658554*^9}, {
  3.621023968495131*^9, 3.6210239875972843`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Hyperlink", "[", 
  RowBox[{
  "\"\<Available characters\>\"", ",", 
   "\"\<paclet:guide/ListingOfNamedCharacters\>\""}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.621023570336549*^9, 3.621023573151165*^9}, {
  3.6210236208207417`*^9, 3.621023664960177*^9}, {3.6210239914738894`*^9, 
  3.6210240403536882`*^9}}],

Cell[BoxData[
 TagBox[
  ButtonBox[
   PaneSelectorBox[{False->"\<\"Available characters\"\>", True->
    StyleBox["\<\"Available characters\"\>", "HyperlinkActive"]}, Dynamic[
     CurrentValue["MouseOver"]],
    BaseStyle->{"Hyperlink"},
    FrameMargins->0,
    ImageSize->Automatic],
   BaseStyle->"Link",
   ButtonData->"paclet:guide/ListingOfNamedCharacters",
   ButtonNote->"paclet:guide/ListingOfNamedCharacters"],
  Annotation[#, "paclet:guide/ListingOfNamedCharacters", 
   "Hyperlink"]& ]], "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],

Cell[CellGroupData[{

Cell[TextData[{
 "Usage statements   ---  ",
 StyleBox["incomplete ",
  FontColor->RGBColor[1, 0, 0]]
}], "Section",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119352821146*^9}, {
  3.471552225395822*^9, 3.471552280586513*^9}, {3.471552344722408*^9, 
  3.47155236558601*^9}, {3.476993956223936*^9, 3.476993958302959*^9}, {
  3.477150561775244*^9, 3.477150564188088*^9}, {3.479730856233528*^9, 
  3.479730859476696*^9}, {3.479750523435896*^9, 3.479750528520037*^9}, {
  3.655172934733838*^9, 3.655172949357164*^9}, {3.655198267723145*^9, 
  3.655198286058901*^9}, {3.655319193131691*^9, 3.6553192351151943`*^9}}],

Cell[CellGroupData[{

Cell["The list of tpTensor functions", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119352821146*^9}, {
   3.476693637814482*^9, 3.476693639510118*^9}, {3.478635035907522*^9, 
   3.478635074317131*^9}, 3.478677199671947*^9, {3.479720032782098*^9, 
   3.479720041791068*^9}, {3.479721708422789*^9, 3.479721712614642*^9}, {
   3.479732349456088*^9, 3.479732349607409*^9}, {3.479842043248694*^9, 
   3.479842093384487*^9}, {3.47984287551043*^9, 3.479842943222314*^9}, {
   3.518091017202176*^9, 3.518091045539674*^9}}],

Cell["\<\
This list is used by the documentation functions.  Add to it as required  (do \
not include aliases)...\
\>", "Text",
 CellChangeTimes->{{3.479730807261138*^9, 3.479730838247997*^9}, {
  3.479841971520099*^9, 3.479841997148328*^9}, {3.479843007861961*^9, 
  3.479843045536533*^9}, {3.479843085913086*^9, 3.479843104932147*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{"tpTensorFunctions", " ", "=", " ", 
   RowBox[{
   "{", "\[IndentingNewLine]", "                                        ", 
    RowBox[{
    "\"\<    ? help                  \>\"", ",", 
     "                                         ", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? about                 \>\"", ",", " ", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? man                   \>\"", ",", " ", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? deg                   \>\"", ",", " ", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? degCheck              \>\"", ",", " ", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? NewConstant           \>\"", ",", " ", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? ClearConstant         \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? NewField              \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? ClearField            \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? FieldQ                \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? ConstantQ             \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? AngleBracket          \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? CircleTimes           \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? DependsQ              \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? SeriesProduct         \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? StrutedTensor         \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? SimplifyTensor        \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? FullSimplifyTensor    \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? ExpandTensor          \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? ExpandAllTensor       \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? struts                \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? costruts              \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? strutPair             \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? gradient              \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? Del                   \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? rev                   \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? CyclicSum             \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? div                   \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? curl                  \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? TraceFreeSquare       \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? LeviCivita            \>\"", " ", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? LeviCivitaUp          \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? mv                    \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? mvInverse             \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? mvCyclic              \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? mvSignature           \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? SquareBracket         \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? SetmvArgLengthFixed   \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? SetmvArgLengthVariable\>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? sym                   \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? Sym                   \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? EvaluateSym           \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? alt                   \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? AssumeSymmetric       \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? ForgetAssumeSymmetric \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", "\"\<    ? SymQ      \>\"", 
     ",", "\[IndentingNewLine]", "                                        ", 
     "\"\<    ? AssumeAntisymmetric       \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? ForgetAssumeAntisymmetric \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? AntisymQ      \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? \[Eta]mat                  \>\"", ",", "\[IndentingNewLine]", 
     "                                        ", 
     "\"\<    ? deg0Q                 \>\""}], "\[IndentingNewLine]", "}"}]}],
   ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479836203541272*^9, 3.479836290323867*^9}, {
   3.47983636391384*^9, 3.479836377153406*^9}, {3.479836418446728*^9, 
   3.479836420328744*^9}, {3.479836460863627*^9, 3.479836506012778*^9}, {
   3.479838628284894*^9, 3.47983865732927*^9}, {3.479843062266276*^9, 
   3.479843070799664*^9}, {3.479876503179178*^9, 3.479876526262979*^9}, {
   3.480159503437951*^9, 3.480159855372663*^9}, {3.480161269314394*^9, 
   3.480161312047426*^9}, {3.480168069370706*^9, 3.480168099018375*^9}, {
   3.480175008030347*^9, 3.480175011452522*^9}, {3.480175507084391*^9, 
   3.480175510130769*^9}, {3.481825117068332*^9, 3.481825179435905*^9}, {
   3.484474879880585*^9, 3.48447488727752*^9}, {3.514486395398992*^9, 
   3.51448645968316*^9}, {3.5180835797209997`*^9, 3.518083580248122*^9}, {
   3.527656269505308*^9, 3.527656279841483*^9}, {3.542600690981963*^9, 
   3.542600747558105*^9}, {3.542600800690979*^9, 3.542600809190431*^9}, {
   3.542604306854104*^9, 3.5426043195617323`*^9}, 3.543265976000263*^9, 
   3.5432671277157183`*^9, {3.5436507207102957`*^9, 3.543650731981832*^9}, {
   3.613097247635131*^9, 3.6130973937410583`*^9}, {3.613097492149095*^9, 
   3.613097548150688*^9}, {3.6130976403971767`*^9, 3.613097763803722*^9}, {
   3.613110781550297*^9, 3.6131108091951838`*^9}, {3.613112129944994*^9, 
   3.6131121497832336`*^9}, {3.613123020762247*^9, 3.613123046358253*^9}, {
   3.613123610106079*^9, 3.613123648731742*^9}, 3.613177426966421*^9, 
   3.613177632739151*^9, {3.613505355874192*^9, 3.613505383517263*^9}, {
   3.614820065238599*^9, 3.614820111878236*^9}, {3.614836948503384*^9, 
   3.614836958175544*^9}, {3.615092328767235*^9, 3.6150923710396748`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Docs functions :   help ,  man", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119352821146*^9}, {
   3.476693637814482*^9, 3.476693639510118*^9}, {3.478635035907522*^9, 
   3.478635074317131*^9}, 3.478677199671947*^9, {3.479720032782098*^9, 
   3.479720041791068*^9}, {3.479721708422789*^9, 3.479721712614642*^9}, {
   3.479732349456088*^9, 3.479732349607409*^9}, {3.479842043248694*^9, 
   3.479842093384487*^9}, {3.47984287551043*^9, 3.479842943222314*^9}}],

Cell[BoxData[
 RowBox[{"help", " ", ":=", 
  RowBox[{"Column", "[", "tpTensorFunctions", "]"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.480166217425083*^9, 3.480166244662985*^9}, {
  3.480166301906137*^9, 3.480166304697859*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"help", "::", "usage"}], " ", "=", 
    "\"\<?\[VeryThinSpace]help\n                                              \
                         \!\(\*
StyleBox[\"Welcome\",
FontFamily->\"DejaVu Sans\",
FontSize->16]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSize->16]\)\!\(\*
StyleBox[\"to\",
FontFamily->\"DejaVu Sans\",
FontSize->16]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSize->16]\)\!\(\*
StyleBox[\"tpTensor\",
FontFamily->\"DejaVu Sans\",
FontSize->16]\)\n\nThe command  'help'  will list all of the built-in  \
tpTensor functions,  printed in the form  ' ? name ' .  The command  ' ? name \
'   \nwill print documentation for the named function.  The 'help'  output is \
therefore useful for cut-and-paste, and for quickly \nfinding your way around \
tpTensor (at this stage, tpTensor does not use Mathematica-style F1-key help \
pages).\n\nTo see the  ?-documentation  \!\(\*
StyleBox[\"for\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"all\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"of\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"the\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"functions\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"provided\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"by\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"tpTensor\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\),  use the tpTensor command  'man'  ( or  'manual' ).\
\n\ntpTensor can be loaded quietly  ( without this Welcome message )  by \
setting   tpQuiet = True   before doing   << tpTensor` .\>\""}], ";"}], 
  "\n"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479835703868105*^9, 3.479835717907414*^9}, {
   3.479835751651906*^9, 3.479835773855407*^9}, {3.479836700333804*^9, 
   3.479836725320449*^9}, {3.479836756577909*^9, 3.479836945019347*^9}, {
   3.479836978292009*^9, 3.479837517761336*^9}, {3.479837601134746*^9, 
   3.479837674236092*^9}, {3.479837704568808*^9, 3.47983770898942*^9}, {
   3.479837776737074*^9, 3.479837982354727*^9}, {3.479838085511131*^9, 
   3.479838160951568*^9}, {3.479838361438517*^9, 3.479838362392551*^9}, {
   3.479838536537962*^9, 3.47983859362517*^9}, {3.479838876172097*^9, 
   3.479838978320755*^9}, {3.479839016450137*^9, 3.479839270143967*^9}, {
   3.479839436444786*^9, 3.479839451225518*^9}, {3.479839578913507*^9, 
   3.479839597891985*^9}, {3.479839629582647*^9, 3.479839630872411*^9}, {
   3.479839699790059*^9, 3.479839705223684*^9}, {3.479839780248325*^9, 
   3.479839794804454*^9}, {3.479839842091144*^9, 3.479839845881943*^9}, {
   3.479839890388178*^9, 3.479840012630937*^9}, {3.479840051265401*^9, 
   3.479840078152871*^9}, {3.479840109029223*^9, 3.479840217595545*^9}, {
   3.479840262643252*^9, 3.479840268562699*^9}, {3.479840310393879*^9, 
   3.479840459004777*^9}, {3.479841001658819*^9, 3.479841118482436*^9}, {
   3.479841168535703*^9, 3.479841404790415*^9}, {3.47984146095443*^9, 
   3.479841470754836*^9}, {3.479841502466885*^9, 3.479841504667596*^9}, {
   3.479841538345851*^9, 3.479841550890362*^9}, 3.479841603468523*^9, {
   3.480161683559053*^9, 3.48016171784079*^9}, {3.480161765034537*^9, 
   3.480161835017426*^9}, {3.480161865052903*^9, 3.480161922193749*^9}, {
   3.48016204758074*^9, 3.48016210327578*^9}, {3.48016213496459*^9, 
   3.480162193995196*^9}, {3.480162236754211*^9, 3.480162418860581*^9}, {
   3.480162463352158*^9, 3.480162566818691*^9}, {3.480162624343807*^9, 
   3.480162662412548*^9}, {3.480162737907476*^9, 3.480162754319766*^9}, {
   3.480162795943114*^9, 3.480163032164284*^9}, {3.480163062862339*^9, 
   3.480163097010485*^9}, {3.480166765783973*^9, 3.480166797470282*^9}, {
   3.48016683244216*^9, 3.480166895866395*^9}, {3.480167253485066*^9, 
   3.480167288129744*^9}, {3.480167357816391*^9, 3.48016736768003*^9}, {
   3.480167428654942*^9, 3.480167451358469*^9}, {3.480167489213096*^9, 
   3.480167507970789*^9}}],

Cell["\<\
Information[ ]   gives   ??   not  just  ? ,  so use this....   \
\>", "Text",
 CellChangeTimes->{{3.480166657362616*^9, 3.480166696549728*^9}}],

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"Global`tpQuiet", "=!=", " ", "True"}], ",", " ", 
   RowBox[{"ToExpression", "[", "\"\<?help\>\"", "]"}]}], "]"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479839276278364*^9, 3.479839318501065*^9}, {
  3.479839363297493*^9, 3.479839371002298*^9}, {3.480166310669703*^9, 
  3.480166315287684*^9}, {3.480166386448544*^9, 3.48016640781216*^9}, {
  3.480166521631289*^9, 3.480166567491155*^9}, {3.518086100476233*^9, 
  3.518086104843594*^9}}],

Cell[BoxData[
 RowBox[{"man", " ", ":=", "  ", 
  RowBox[{"(", 
   RowBox[{
    RowBox[{"ToExpression", "[", " ", 
     RowBox[{"First", "[", "help", "]"}], "]"}], ";"}], ")"}]}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479835780701795*^9, 3.479835858239046*^9}, {
   3.479835914264932*^9, 3.479835946248306*^9}, {3.479836008597174*^9, 
   3.479836017965846*^9}, {3.479836086325866*^9, 3.479836122646689*^9}, {
   3.479841773618369*^9, 3.479841818790734*^9}, {3.47984186005223*^9, 
   3.479841863773503*^9}, {3.479841912410906*^9, 3.479841932367864*^9}, 
   3.479842669594381*^9, {3.479842704980233*^9, 3.479842707853303*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"man", "::", "usage"}], " ", "=", " ", 
   "\"\<?\[VeryThinSpace]man\n\nThe command  'man'  ( or 'manual' )  will \
print the ?-documentation  \!\(\*
StyleBox[\"for\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"all\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[
StyleBox[
RowBox[{
StyleBox[\" \",
FontSize->16], \" \"}]],
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"of\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"the\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"functions\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"provided\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"by\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"tpTensor\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\).\n\n'man'  is the same as doing   ' ? name '  for \
each function listed by the command  'help',  and is defined as \n\nman :=  \
(ToExpression[ First[help]];)  \>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479842174362151*^9, 3.479842469494414*^9}, {
   3.479842612351767*^9, 3.47984265509984*^9}, {3.479842694109574*^9, 
   3.479842698035091*^9}, {3.480167165695002*^9, 3.480167235761963*^9}, {
   3.480167539489721*^9, 3.480167549742777*^9}, 3.480168593096764*^9, 
   3.480168644094523*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "man"}]], "Input",
 CellChangeTimes->{{3.480167580140615*^9, 3.480167581115734*^9}}],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]man\\n\\nThe command  'man'  ( or 'manual' )  \
will print the ?-documentation  \!\(\*\\nStyleBox[\\\"for\\\",\\nFontFamily->\
\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"all\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\n StyleBox[\\n  \
RowBox[{\\n   StyleBox[\\\" \\\",\\nFontSize->16], \\\" \
\\\"}]],\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\"of\\\",\\\
nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"the\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"functions\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"provided\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"by\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"tpTensor\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\).\\n\\n'man'  is the same as doing   \
' ? name '  for each function listed by the command  'help',  and is defined \
as \\n\\nman :=  (ToExpression[ First[help]];)  \"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.651876567061988*^9},
 CellTags->"Info3651912567-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{"manual", ":=", "man"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479842131561079*^9, 3.479842143416898*^9}, {
  3.479842770373673*^9, 3.479842773636874*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"about", "::", "usage"}], "=", 
   "\"\<?\[VeryThinSpace]\[VeryThinSpace]about\n\n\!\(\*
StyleBox[\"tpTensor\",
FontFamily->\"DejaVu Sans\",
FontSize->16,
FontWeight->\"Plain\"]\) was written in \
03-04\[VeryThinSpace]/\[VeryThinSpace]2010, by Andrew Norton. \n\nThe main \
design aim for  tpTensor was that it should be simple and intuitive. The \
result is that: \n\n \!\(\*
StyleBox[\"\[Bullet]\",
FontFamily->\"DejaVu Sans\",
FontSize->18]\)  tpTensor's input\[VeryThinSpace]/\[VeryThinSpace]output is \
very readable and looks nice.\n \!\(\*
StyleBox[\"\[Bullet]\",
FontFamily->\"DejaVu Sans\",
FontSize->18]\)  learning how to use tpTensor is trivial, with almost nothing \
for the casual user to remember. \n \!\(\*
StyleBox[\"\[Bullet]\",
FontFamily->\"DejaVu Sans\",
FontSize->18]\)  the mathematical notation and conventions used by tpTensor \
are those of the text \!\(\*
StyleBox[\"Gravitation\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*SuperscriptBox[\".\", 
StyleBox[\"*\",
FontFamily->\"DejaVu Sans\",
FontSize->12]]\) \n \!\(\*
StyleBox[\"\[Bullet]\",
FontFamily->\"DejaVu Sans\",
FontSize->18]\)  tpTensor could be used for teaching at various levels, from \
3D vector calculus through to general relativity.\n \!\(\*
StyleBox[\"\[Bullet]\",
FontFamily->\"DejaVu Sans\",
FontSize->18]\)  tpTensor is well documented. It also comes with several \
tutorial and example Mathematica Notebooks.  \n \nSimple though it is, \!\(\*
StyleBox[\"tpTensor\",
FontFamily->\"DejaVu Sans\",
FontSize->16,
FontWeight->\"Plain\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSize->16,
FontWeight->\"Plain\"]\)is still powerful enough to be of use to the average \
relativist. Enjoy!\n\nFeel free to send me wish-lists or contributed code.\n\
Likewise for Notebooks that might be suitable for inclusion with the Examples \
or Tutorials. \nAnd do please let me know about any bugs\[VeryThinSpace]!\n\n\
Dr Andrew Norton\nMax Planck Institute for Gravitational Physics (Albert \
Einstein Institute)\nAm Muehlenberg 1\nD-14476 Golm\nGermany\nemail: \
andrew.norton@aei.mpg.de\n\n\!\(\*SuperscriptBox[\" \", 
StyleBox[\"*\",
FontFamily->\"DejaVu Sans\",
FontSize->12]]\) A choice not entirely based on personal preference -- I \
actually spent quite some time comparing the notations \n   and conventions \
used in numerous relativity and differential geometry texts. \!\(\*
StyleBox[\"Gravitation\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\) (Misner, Thorne and Wheeler) \n   also happened to \
be the most notationally self-consistent and useful for the intended purpose.\
\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479876551326839*^9, 3.479876604547937*^9}, 
   3.479921888960388*^9, {3.479921933936899*^9, 3.479922614043174*^9}, {
   3.479922644670952*^9, 3.479922753147867*^9}, {3.479922795492279*^9, 
   3.479923507287001*^9}, {3.47992354375617*^9, 3.479923560376062*^9}, {
   3.479923655157275*^9, 3.479923687246491*^9}, {3.479923766045483*^9, 
   3.479923776779467*^9}, {3.479923830962223*^9, 3.479924002314776*^9}, {
   3.479924041202303*^9, 3.479924153947644*^9}, {3.479924186581317*^9, 
   3.479924187365082*^9}, {3.479924220270367*^9, 3.479924330921075*^9}, {
   3.479924371138852*^9, 3.479924381871272*^9}, {3.479924419671523*^9, 
   3.479924438360978*^9}, {3.479924479867127*^9, 3.479924481209761*^9}, {
   3.479924571848237*^9, 3.479924612637517*^9}, 3.479924645064284*^9, {
   3.479924702397067*^9, 3.479924774587914*^9}, {3.479924815587706*^9, 
   3.479924915199028*^9}, {3.479924945673574*^9, 3.479925063042684*^9}, {
   3.479925115001759*^9, 3.479925269239454*^9}, {3.479925318158391*^9, 
   3.479925393390369*^9}, 3.479925433029936*^9, 3.479925483964428*^9, {
   3.479925610194807*^9, 3.47992569219314*^9}, {3.4799257546805*^9, 
   3.479926268827312*^9}, {3.47992636535033*^9, 3.479926399214969*^9}, {
   3.479926430169092*^9, 3.479926529716179*^9}, {3.479926576106987*^9, 
   3.479926589318898*^9}, {3.47992664124533*^9, 3.479926807850812*^9}, {
   3.479926840035915*^9, 3.47992698587708*^9}, {3.479927021407609*^9, 
   3.479927352891535*^9}, {3.479927385812558*^9, 3.4799274906388*^9}, {
   3.479927539748789*^9, 3.479927716431531*^9}, {3.479927752715623*^9, 
   3.479927756103981*^9}, {3.479927804013607*^9, 3.479927848340237*^9}, {
   3.479927879858074*^9, 3.4799278996057*^9}, {3.479927936894053*^9, 
   3.479928077176932*^9}, {3.479928171679875*^9, 3.479928194394135*^9}, {
   3.479928224870524*^9, 3.479928500261883*^9}, {3.479928608567392*^9, 
   3.479928617779331*^9}, {3.479928650893907*^9, 3.479928699078664*^9}, 
   3.479928749368003*^9, 3.47992882444009*^9, {3.479928868111226*^9, 
   3.479929020910406*^9}, {3.479929059718733*^9, 3.479929127767387*^9}, {
   3.479929159621165*^9, 3.47992916507387*^9}, {3.479929216582572*^9, 
   3.479929220789634*^9}, {3.479929263868164*^9, 3.47992936986014*^9}, {
   3.479929407789982*^9, 3.479929503512462*^9}, {3.479929554253535*^9, 
   3.479929688221416*^9}, {3.479929814456829*^9, 3.479929928520414*^9}, {
   3.479929975447589*^9, 3.479930549858792*^9}, {3.479930584349553*^9, 
   3.479930624699657*^9}, {3.479930711352182*^9, 3.479930925672603*^9}, {
   3.479930982648969*^9, 3.479931077494133*^9}, {3.479931119994269*^9, 
   3.47993112878401*^9}, {3.47993120212748*^9, 3.479931371473513*^9}, {
   3.47993143420228*^9, 3.479931436265023*^9}, {3.479931498044839*^9, 
   3.479931508170478*^9}, {3.479931538244354*^9, 3.479931538757475*^9}, {
   3.479931570028855*^9, 3.479931574746689*^9}, {3.479931648877861*^9, 
   3.479931661216666*^9}, {3.479931698502153*^9, 3.479931699970519*^9}, {
   3.479931737114654*^9, 3.47993177069034*^9}, {3.479931837285194*^9, 
   3.479931846084178*^9}, {3.479931887610759*^9, 3.479931888649618*^9}, {
   3.47993192830183*^9, 3.47993193195766*^9}, {3.479931962858549*^9, 
   3.479931998738994*^9}, 3.479932030248042*^9, {3.479932081366901*^9, 
   3.479932101390117*^9}, {3.479932169188689*^9, 3.479932457872373*^9}, {
   3.479932523970069*^9, 3.479932524460905*^9}, {3.479932566868608*^9, 
   3.479932589371182*^9}, {3.479932624018458*^9, 3.47993267575708*^9}, 
   3.47993278563579*^9, {3.480163698676814*^9, 3.480163777942395*^9}, {
   3.48016380985476*^9, 3.480163812446215*^9}, {3.480164011441514*^9, 
   3.480164027746387*^9}, {3.480164108327302*^9, 3.4801641510671*^9}, {
   3.480164365741949*^9, 3.48016436830088*^9}, {3.480164403606337*^9, 
   3.480164410054035*^9}, {3.480164474203644*^9, 3.48016448763396*^9}, {
   3.480164543430128*^9, 3.480164747708072*^9}, {3.480164817132982*^9, 
   3.480164959524111*^9}, {3.480164989833284*^9, 3.480165037550881*^9}, {
   3.480165156022687*^9, 3.480165223528787*^9}, {3.48016535680228*^9, 
   3.480165484579461*^9}, 3.480165574660668*^9, {3.480165657746711*^9, 
   3.48016565972585*^9}, 3.480165696933177*^9, {3.480165738209374*^9, 
   3.480165739337437*^9}, {3.480165773871688*^9, 3.480165779685525*^9}, {
   3.480165850442143*^9, 3.480165859219198*^9}, {3.480165906170859*^9, 
   3.480165911910082*^9}, {3.480167606920702*^9, 3.480167611362193*^9}, {
   3.480168000174148*^9, 3.480168003517618*^9}, {3.48016827622282*^9, 
   3.480168342863304*^9}, 3.480168400945066*^9, {3.480173891493861*^9, 
   3.480173913156282*^9}, {3.480173948512994*^9, 3.48017398703063*^9}, {
   3.480174017234756*^9, 3.480174081628103*^9}, {3.480174212745535*^9, 
   3.480174213444776*^9}, {3.480174260254547*^9, 3.480174261752803*^9}, {
   3.480174296199798*^9, 3.480174331835646*^9}, {3.480174609040635*^9, 
   3.480174609867946*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "about"}]], "Input",
 CellChangeTimes->{{3.479932461595219*^9, 3.479932467270488*^9}}],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]\[VeryThinSpace]about\\n\\n\!\(\*\\nStyleBox[\
\\\"tpTensor\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSize->16,\\nFontWeight->\\\"Plain\\\"]\) was written in 03-04\
\[VeryThinSpace]/\[VeryThinSpace]2010, by Andrew Norton. \\n\\nThe main \
design aim for  tpTensor was that it should be simple and intuitive. The \
result is that: \\n\\n \
\!\(\*\\nStyleBox[\\\"\[Bullet]\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSize->18]\)  tpTensor's \
input\[VeryThinSpace]/\[VeryThinSpace]output is very readable and looks nice.\
\\n \!\(\*\\nStyleBox[\\\"\[Bullet]\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSize->18]\)  learning how to use tpTensor is trivial, with \
almost nothing for the casual user to remember. \\n \!\(\*\\nStyleBox[\\\"\
\[Bullet]\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSize->18]\)  the \
mathematical notation and conventions used by tpTensor are those of the text \
\!\(\*\\nStyleBox[\\\"Gravitation\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*SuperscriptBox[\\\".\\\", \\n \
StyleBox[\\\"*\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSize->12]]\) \\n \
\!\(\*\\nStyleBox[\\\"\[Bullet]\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSize->18]\)  tpTensor could be used for teaching at various \
levels, from 3D vector calculus through to general relativity.\\n \
\!\(\*\\nStyleBox[\\\"\[Bullet]\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSize->18]\)  tpTensor is well documented. It also comes with \
several tutorial and example Mathematica Notebooks.  \\n \\nSimple though it \
is, \!\(\*\\nStyleBox[\\\"tpTensor\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSize->16,\\nFontWeight->\\\"Plain\\\"]\)\!\(\*\\nStyleBox[\\\"\
 \\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSize->16,\\nFontWeight->\\\"Plain\\\"]\)is still powerful \
enough to be of use to the average relativist. Enjoy!\\n\\nFeel free to send \
me wish-lists or contributed code.\\nLikewise for Notebooks that might be \
suitable for inclusion with the Examples or Tutorials. \\nAnd do please let \
me know about any bugs\[VeryThinSpace]!\\n\\nDr Andrew Norton\\nMax Planck \
Institute for Gravitational Physics (Albert Einstein Institute)\\nAm \
Muehlenberg 1\\nD-14476 Golm\\nGermany\\nemail: \
andrew.norton@aei.mpg.de\\n\\n\!\(\*SuperscriptBox[\\\" \\\", \\n StyleBox[\\\
\"*\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSize->12]]\) A choice not \
entirely based on personal preference -- I actually spent quite some time \
comparing the notations \\n   and conventions used in numerous relativity and \
differential geometry texts. \
\!\(\*\\nStyleBox[\\\"Gravitation\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\) (Misner, Thorne and Wheeler) \\n   \
also happened to be the most notationally self-consistent and useful for the \
intended purpose.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765671402483`*^9},
 CellTags->"Info3651912567-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Utility fns", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119352821146*^9}, {
   3.476693637814482*^9, 3.476693639510118*^9}, {3.478635035907522*^9, 
   3.478635074317131*^9}, 3.478677199671947*^9, {3.479720032782098*^9, 
   3.479720041791068*^9}, {3.479721708422789*^9, 3.479721712614642*^9}, {
   3.479971484831145*^9, 3.479971517573741*^9}, {3.5180845184489603`*^9, 
   3.518084549635188*^9}, {3.611388806219406*^9, 3.611388810714518*^9}, {
   3.611389088027945*^9, 3.611389089307828*^9}, {3.615279961199183*^9, 
   3.6152799665115232`*^9}, {3.61688415560168*^9, 3.616884160593556*^9}}],

Cell[CellGroupData[{

Cell["Timing   --   TimeLapsed[ ],  ExpectedTiming[ ]", "Subsubsection",
 CellChangeTimes->{{3.616884188529458*^9, 3.616884207729638*^9}, {
   3.616884294993681*^9, 3.616884322706195*^9}, 3.646770172131464*^9, 
   3.655173734034977*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpectedTiming", "::", "usage"}], " ", "=", " ", 
   "\"\<?ExpectedTiming\n\nExpectedTiming[ t, x ]    evaluates  and returns \
the value of  x . As a side effect it also prints useful information about \
how long the evaluation took and when it was done.\n\nThe optional real \
argument  t  is an expected value (in seconds) for how long the computation \
should take (eg., obtained from a previous run).  \n\nIf  t  is present, then \
harmless warning messages are printed if  t  turns out to differ by more than \
 15%   from the measured timing.  These warnings are useful because \
significant timing changes can indicate something amiss.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.64677126475875*^9, 3.646771298734467*^9}, {
  3.64677318713236*^9, 3.646773313747429*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExpectedTiming"}]], "Input",
 CellChangeTimes->{3.64677332129004*^9}],

Cell[BoxData[
 StyleBox["\<\"?ExpectedTiming\\n\\nExpectedTiming[ t, x ]    evaluates  and \
returns the value of  x . As a side effect it also prints useful information \
about how long the evaluation took and when it was done.\\n\\nThe optional \
real argument  t  is an expected value (in seconds) for how long the \
computation should take (eg., obtained from a previous run).  \\n\\nIf  t  is \
present, then harmless warning messages are printed if  t  turns out to \
differ by more than  15%   from the measured timing.  These warnings are \
useful because significant timing changes can indicate something amiss.\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.65187656721063*^9},
 CellTags->"Info3651912567-5027707"]
}, Open  ]]
}, Closed]],

Cell["Testing  --   ExpectZero[ ]", "Subsubsection",
 CellChangeTimes->{{3.616884263489438*^9, 3.616884283073662*^9}, {
   3.616884324229011*^9, 3.616884331953829*^9}, 3.655173734955822*^9}],

Cell["Output  --   // ShortForm", "Subsubsection",
 CellChangeTimes->{{3.61688435188971*^9, 3.616884376513838*^9}, 
   3.6168844376178837`*^9, 3.655173735754796*^9}],

Cell[CellGroupData[{

Cell["General language improvements", "Subsubsection",
 CellChangeTimes->{{3.62319442059741*^9, 3.62319445968569*^9}, {
   3.623197322652714*^9, 3.6231973318367453`*^9}, {3.6232237280986557`*^9, 
   3.623223737698186*^9}, {3.624140893128172*^9, 3.624140904632186*^9}, 
   3.6241411767774057`*^9, 3.655173737571069*^9}],

Cell[CellGroupData[{

Cell["AnyTrueQ[ ],  FirstTruePosition[ ]", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.624140923325797*^9, 3.624140929564684*^9}, 
   3.655173927568756*^9}],

Cell["\<\
     AnyTrueQ[ ]   and    FirstTruePosition[ ]   are defined in package  \
PartialDerivative`.\
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.},
 CellChangeTimes->{{3.623223767314036*^9, 3.623223827042695*^9}, 
   3.655173927568821*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["TrigReduce[ ]", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.6241409926963787`*^9, 3.62414105804071*^9}, {
   3.624141122761064*^9, 3.624141125167842*^9}, {3.625714719936462*^9, 
   3.625714720208506*^9}, 3.655173988687724*^9}],

Cell["\<\
In Mathematica 10.0  (and later?)  the built-in  TrigReduce[ ]  does nothing \
with  SeriesData,  now it does.
No documentation needed for this. \
\>", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.},
 CellChangeTimes->{{3.6241409926963787`*^9, 3.62414105804071*^9}, {
  3.624141140057185*^9, 3.624141152857245*^9}, {3.6467738366099358`*^9, 
  3.6467738787213917`*^9}, {3.655173944560424*^9, 3.655173988687764*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["DependsQ[ ]", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.6241409926963787`*^9, 3.62414105804071*^9}, {
   3.624141122761064*^9, 3.624141125167842*^9}, {3.625714704704482*^9, 
   3.625714723376528*^9}, 3.655174048462945*^9}],

Cell["This returns True if expression  y  depends on the symbol x.", "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.},
 CellChangeTimes->{{3.542597968766034*^9, 3.542598052643159*^9}, {
   3.5425980839072657`*^9, 3.5425981579549437`*^9}, {3.542598189363426*^9, 
   3.542598219907153*^9}, {3.542598261971859*^9, 3.5425982652029657`*^9}, {
   3.646773946512226*^9, 3.646773947360437*^9}, 3.6551740484629927`*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["FnValueQ[ ]", "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{{3.646769087234338*^9, 3.646769093393978*^9}, 
   3.655174055246975*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FnValueQ", "::", "usage"}], "=", 
   "\"\<?FnValueQ\n\nFnValueQ[ f[n] ]   tests if the function  f  has a value \
for the argument that results from evaluating  n.\n\nExample:  Suppose we \
want to test if these have values:  f[1], f[2], f[3], ....  \n\nWe can do \
this test by:  ValueQ[ f[1] ], ValueQ[ f[2] ], ...   \nbut this method will \
not work within in a loop over  n   using  ValueQ[ f[n] ],  n = 1, 2, ...  \n\
because then  f[n]  always has a value, ie., f[n] = f[1], f[2], ... .   \n\n\
Such a loop over  n  will work using  FnValueQ[ f[n] ].  \n\nFnValueQ[ f[n1, \
n2, ...] ]  works similarly.\>\""}], ";"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 InitializationCell->True,
 CellChangeTimes->{{3.646773965123762*^9, 3.646774163242875*^9}, {
   3.6467741972599573`*^9, 3.646774222267432*^9}, {3.646774263307189*^9, 
   3.6467742695490026`*^9}, {3.646774308969795*^9, 3.6467743603932247`*^9}, {
   3.646774429208474*^9, 3.646774440521442*^9}, {3.6467744882011766`*^9, 
   3.646774489368507*^9}, {3.646774537367443*^9, 3.6467745816553993`*^9}, 
   3.655174055247045*^9}],

Cell[BoxData[
 RowBox[{"?", "FnValueQ"}]], "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.646774169854393*^9, 3.6551740552470827`*^9}],

Cell[BoxData[
 StyleBox["\<\"?FnValueQ\\n\\nFnValueQ[ f[n] ]   tests if the function  f  \
has a value for the argument that results from evaluating  n.\\n\\nExample:  \
Suppose we want to test if these have values:  f[1], f[2], f[3], ....  \
\\n\\nWe can do this test by:  ValueQ[ f[1] ], ValueQ[ f[2] ], ...   \\nbut \
this method will not work within in a loop over  n   using  ValueQ[ f[n] ],  \
n = 1, 2, ...  \\nbecause then  f[n]  always has a value, ie., f[n] = f[1], \
f[2], ... .   \\n\\nSuch a loop over  n  will work using  FnValueQ[ f[n] ].  \
\\n\\nFnValueQ[ f[n1, n2, ...] ]  works similarly.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellChangeTimes->{3.651876567281291*^9, 3.655174055247137*^9},
 CellTags->"Info3651912567-5027707"]
}, Closed]]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Tensor degree :   deg[X]", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119352821146*^9}, {
   3.476693637814482*^9, 3.476693639510118*^9}, {3.478635035907522*^9, 
   3.478635074317131*^9}, 3.478677199671947*^9, {3.479720032782098*^9, 
   3.479720041791068*^9}, {3.479721708422789*^9, 3.479721712614642*^9}, {
   3.479732349456088*^9, 3.479732349607409*^9}, 3.479922232925212*^9, 
   3.480088353227157*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deg", "::", "usage"}], "=", 
   "\"\<? \[VeryThinSpace]deg\n\ndeg\[VeryThinSpace][X]  returns the tensor \
degree of X  (0 for scalar, 1 for vector, ...).\n\nLet  X  \[Element]  U \
\[CircleTimes] V \[CircleTimes] W \[CircleTimes] ....  where there are  r  \
vector space factors in the tensor product.  \nThen  deg\[VeryThinSpace][X] = \
 r.\n\nNote:  It is no longer the done thing to call this the rank of  X. The \
rank of a tensor nowadays \nmeans the smallest number of simple tensors \
(single term completely factorizable tensor products)\nthat are required to \
express X. It generalizes the rank of a matrix. For example, see:\n\n   \
http://en.wikipedia.org/wiki/Tensor_(intrinsic_definition)   \n\nThe term \
'order' is often used by others instead of 'degree'.\n\nYou can set the \
degree of any symbol/expression X to be r by doing deg\[VeryThinSpace][X] = \
r.  However, it is \ngenerally better to use  NewField\[VeryThinSpace][\
\[VeryThinSpace]r,\[VeryThinSpace]X\[VeryThinSpace]]  (which also does other \
things). So unless you are adding \nfuntionality to the package, you will \
probably never need to use the  deg\[VeryThinSpace][]  function.\n\nBy \
default, if  X  is a sum then  deg[X]  will check that all terms in  X  have \
the same degree, \nand will complain if this is not the case. This can be \
slow if  X  is a sum of many 1000 terms.  \nThis check can turned of by \
setting   \n\n      degFullCheck = False\n\nin which case deg[X]  will return \
the degree of the first term in X. To restore degree \nchecking, set \
degFullCheck = True.\n\nSee also:   ? NewConstant ,  ? NewField \>\""}], " ", 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.478633832111321*^9, 3.478634103026858*^9}, 
   3.478634135363109*^9, {3.478634198660655*^9, 3.478634711767732*^9}, {
   3.478634752932206*^9, 3.478634810693452*^9}, {3.478634906692698*^9, 
   3.478634915757203*^9}, {3.479721984504374*^9, 3.479721984642637*^9}, {
   3.479722454719762*^9, 3.479722575111578*^9}, {3.479722621952568*^9, 
   3.479722752605332*^9}, {3.479722784615551*^9, 3.479722825083569*^9}, {
   3.479722885583618*^9, 3.479722981446*^9}, {3.479723025026495*^9, 
   3.479723026550486*^9}, {3.479723058576621*^9, 3.479723471989404*^9}, {
   3.479835648864598*^9, 3.479835649925862*^9}, 3.479921556576185*^9, {
   3.480168712728399*^9, 3.480168758440714*^9}, {3.480168845693239*^9, 
   3.48016895161818*^9}, {3.480168984243165*^9, 3.48016899322683*^9}, 
   3.543650593082748*^9, {3.610706796313182*^9, 3.6107073265730658`*^9}, {
   3.610707376764206*^9, 3.6107073811514378`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "deg"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"? \[VeryThinSpace]deg\\n\\ndeg\[VeryThinSpace][X]  returns the \
tensor degree of X  (0 for scalar, 1 for vector, ...).\\n\\nLet  X  \
\[Element]  U \[CircleTimes] V \[CircleTimes] W \[CircleTimes] ....  where \
there are  r  vector space factors in the tensor product.  \\nThen  deg\
\[VeryThinSpace][X] =  r.\\n\\nNote:  It is no longer the done thing to call \
this the rank of  X. The rank of a tensor nowadays \\nmeans the smallest \
number of simple tensors (single term completely factorizable tensor \
products)\\nthat are required to express X. It generalizes the rank of a \
matrix. For example, see:\\n\\n   \
http://en.wikipedia.org/wiki/Tensor_(intrinsic_definition)   \\n\\nThe term \
'order' is often used by others instead of 'degree'.\\n\\nYou can set the \
degree of any symbol/expression X to be r by doing deg\[VeryThinSpace][X] = \
r.  However, it is \\ngenerally better to use  NewField\[VeryThinSpace][\
\[VeryThinSpace]r,\[VeryThinSpace]X\[VeryThinSpace]]  (which also does other \
things). So unless you are adding \\nfuntionality to the package, you will \
probably never need to use the  deg\[VeryThinSpace][]  function.\\n\\nBy \
default, if  X  is a sum then  deg[X]  will check that all terms in  X  have \
the same degree, \\nand will complain if this is not the case. This can be \
slow if  X  is a sum of many 1000 terms.  \\nThis check can turned of by \
setting   \\n\\n      degFullCheck = False\\n\\nin which case deg[X]  will \
return the degree of the first term in X. To restore degree \\nchecking, set \
degFullCheck = True.\\n\\nSee also:   ? NewConstant ,  ? NewField \"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876567356234*^9},
 CellTags->"Info3651912567-5027707"]
}, Open  ]],

Cell["Aliases to get info...", "Text",
 CellChangeTimes->{{3.479720055404857*^9, 3.479720306966264*^9}, {
  3.479720361846567*^9, 3.479720664164504*^9}, {3.479721171680827*^9, 
  3.479721191002408*^9}, {3.479721240556257*^9, 3.4797214008496*^9}, {
  3.479721477161958*^9, 3.4797216336168*^9}, {3.479721669232727*^9, 
  3.479721695160269*^9}, {3.479721744143876*^9, 3.479721799161753*^9}, {
  3.479721881961604*^9, 3.479721938985388*^9}, {3.479722109592679*^9, 
  3.479722285816069*^9}, {3.479722339396268*^9, 3.479722371847479*^9}, {
  3.479722409591439*^9, 3.47972243808733*^9}, {3.47972372265714*^9, 
  3.479723728407346*^9}, {3.479724961218728*^9, 3.479724968210409*^9}}],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"rank", "::", "usage"}], "=", 
   RowBox[{"deg", "::", "usage"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"order", "::", "usage"}], "=", 
   RowBox[{"deg", "::", "usage"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479723666015039*^9, 3.479723688350023*^9}, {
  3.479723746720582*^9, 3.479723748298918*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"degCheck", "::", "usage"}], " ", "=", " ", 
   "\"\<? degCheck\n\ndegCheck\[VeryThinSpace][ x ]   prints information \
about the tensor degrees of the variables used in x .\n\nIf you get an error \
message such as  ''Not all struts have well defined degree''  then \ndegCheck\
\[VeryThinSpace][ x ]  can be used to find the variables in  x  that have not \
yet been declared. \n\nSee also:  ? NewConstant ,  ? NewField \>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.543649958245508*^9, 3.543650158445997*^9}, {
  3.543650229113282*^9, 3.543650513697298*^9}, {3.543650547229698*^9, 
  3.5436505675683613`*^9}, {3.543650599968047*^9, 3.5436506334741497`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "degCheck"}]], "Input",
 CellChangeTimes->{3.615085754598853*^9}],

Cell[BoxData[
 StyleBox["\<\"? degCheck\\n\\ndegCheck\[VeryThinSpace][ x ]   prints \
information about the tensor degrees of the variables used in x .\\n\\nIf you \
get an error message such as  ''Not all struts have well defined degree''  \
then \\ndegCheck\[VeryThinSpace][ x ]  can be used to find the variables in  \
x  that have not yet been declared. \\n\\nSee also:  ? NewConstant ,  ? \
NewField \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876567491035*^9},
 CellTags->"Info3651912567-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"deg0Q", "::", "usage"}], "=", 
   "\"\<degNQ[ \[VeryThinSpace]x ]  (where N = 0, 1, 2, 3, 4)  returns True \
if x is degree N and False otherwise.\n\ndegNQ[ \
\[VeryThinSpace]\!\(\*SubscriptBox[\(x\), \(1\)]\), \!\(\*SubscriptBox[\(x\), \
\(2\)]\), ... ]  returns True if all the  \!\(\*SubscriptBox[\(x\), \(i\)]\)  \
are degree N and False otherwise.\n\nThe functions deg0Q, deg1Q, deg2Q, \
deg3Q, deg4Q  are convenient for pattern matching arguments.  \n\nFor example \
:  f[ y_?deg0Q ]  is the same as  f[ y_/; deg[y] === 0 ] .\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613504275704423*^9, 3.6135044940657377`*^9}, {
  3.613504526930058*^9, 3.613504766852413*^9}, {3.613504797975013*^9, 
  3.613505003130649*^9}, {3.6150857979066067`*^9, 3.61508589487512*^9}, {
  3.6150859253976593`*^9, 3.615085950202827*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "deg0Q"}]], "Input",
 CellChangeTimes->{3.6135050435087337`*^9}],

Cell[BoxData[
 StyleBox["\<\"degNQ[ \[VeryThinSpace]x ]  (where N = 0, 1, 2, 3, 4)  returns \
True if x is degree N and False otherwise.\\n\\ndegNQ[ \
\[VeryThinSpace]\!\(\*SubscriptBox[\(x\), \(1\)]\), \!\(\*SubscriptBox[\(x\), \
\(2\)]\), ... ]  returns True if all the  \!\(\*SubscriptBox[\(x\), \(i\)]\)  \
are degree N and False otherwise.\\n\\nThe functions deg0Q, deg1Q, deg2Q, \
deg3Q, deg4Q  are convenient for pattern matching arguments.  \\n\\nFor \
example :  f[ y_?deg0Q ]  is the same as  f[ y_/; deg[y] === 0 ] .\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.65187656756159*^9},
 CellTags->"Info3651912567-5027707"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{"deg1Q", "::", "usage"}], "=", 
   RowBox[{"deg0Q", "::", "usage"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deg2Q", "::", "usage"}], "=", 
   RowBox[{"deg0Q", "::", "usage"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deg3Q", "::", "usage"}], "=", 
   RowBox[{"deg0Q", "::", "usage"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"deg4Q", "::", "usage"}], "=", 
   RowBox[{"deg0Q", "::", "usage"}]}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613505014101047*^9, 3.6135050362957582`*^9}, {
  3.613505136760998*^9, 3.613505152177647*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FieldQ", "::", "usage"}], "=", 
   "\"\<FieldQ[ X ]  returns True if  X  is a tensor field as declared by  \
NewField[ ],  and  False  otherwise.\n\n( ClearField[ X ] ; FieldQ[ X ] )  \
returns False.\n\nSee also:  ? ConstantQ\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6150915056772118`*^9, 3.6150915092362003`*^9}, {
   3.615091545476931*^9, 3.615091656536126*^9}, {3.6150918537377043`*^9, 
   3.615091869751028*^9}, {3.615091969018772*^9, 3.6150920643510923`*^9}, 
   3.615092180400531*^9, 3.615092235101866*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FieldQ"}]], "Input",
 CellChangeTimes->{{3.6150921663766747`*^9, 3.615092169063424*^9}}],

Cell[BoxData[
 StyleBox["\<\"FieldQ[ X ]  returns True if  X  is a tensor field as declared \
by  NewField[ ],  and  False  otherwise.\\n\\n( ClearField[ X ] ; FieldQ[ X ] \
)  returns False.\\n\\nSee also:  ? ConstantQ\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.651876567864635*^9},
 CellTags->"Info3651912567-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ConstantQ", "::", "usage"}], "=", 
   "\"\<ConstantQ[ X ]  returns True if  X  is a constant as declared by  \
NewConstant[ ],  and  False  otherwise. \n\nBoth of  ( ClearConstant[ X ] ; \
ConstantQ[ X ] )  and   ( ClearField[ X ] ; ConstantQ[ X ] )  return False.\n\
\nSee also:  ? ConstantQ\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.615091672435893*^9, 3.615091677764893*^9}, {
  3.615091835237712*^9, 3.6150918514124203`*^9}, {3.615091885850668*^9, 
  3.615091957417953*^9}, {3.615092088459765*^9, 3.615092154719104*^9}, {
  3.615092185600217*^9, 3.615092233234274*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ConstantQ"}]], "Input",
 CellChangeTimes->{{3.615092219645183*^9, 3.615092225111712*^9}}],

Cell[BoxData[
 StyleBox["\<\"ConstantQ[ X ]  returns True if  X  is a constant as declared \
by  NewConstant[ ],  and  False  otherwise. \\n\\nBoth of  ( ClearConstant[ X \
] ; ConstantQ[ X ] )  and   ( ClearField[ X ] ; ConstantQ[ X ] )  return \
False.\\n\\nSee also:  ? ConstantQ\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876567958346*^9},
 CellTags->"Info3651912567-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Declarations :   NewConstant[c] ,   NewField[r, X],    ClearField[X],   \
ClearConstant[c],   FieldQ[X],  ConstantQ[X]\
\>", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119352821146*^9}, {
  3.467370985602835*^9, 3.46737099050696*^9}, {3.478969712456913*^9, 
  3.47896975380715*^9}, {3.479402682149652*^9, 3.479402686548678*^9}, {
  3.479732055752852*^9, 3.479732081568517*^9}, {3.4797324042719*^9, 
  3.479732412319488*^9}, {3.615092415095002*^9, 3.615092458935018*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NewConstant", "::", "usage"}], " ", "=", " ", 
   "\"\<?\[VeryThinSpace]NewConstant\n\nNewConstant [ c1 ]  \nNewConstant [ \
{c1 , c2, ...} ]  declares the symbols  c1,...  to be constants.  \n\
NewConstant [ c ]   is equivalent to  ( deg [ c ] = 0 ;  \[Del] c = 0 ; ) ,  \
but will first check that  c  is not already in use, and ask what to do if it \
is.\n\nSee also:   ? NewField ,  ? ClearField ,  ? ClearConstant .\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.478967934958546*^9, 3.478968141255902*^9}, {
   3.478968191695165*^9, 3.478968474433653*^9}, {3.478968638938337*^9, 
   3.47896871606653*^9}, {3.478968830361279*^9, 3.478969027006507*^9}, {
   3.478969070588102*^9, 3.478969150793445*^9}, {3.478969685533519*^9, 
   3.478969700583303*^9}, 3.478969800439515*^9, {3.478970872723091*^9, 
   3.478970894616393*^9}, 3.479723875792393*^9, {3.479731762218722*^9, 
   3.479731764891137*^9}, {3.47983525167589*^9, 3.479835252807609*^9}, 
   3.479907365226696*^9, {3.480169038181535*^9, 3.480169101655882*^9}, {
   3.480169181084176*^9, 3.480169198636255*^9}, {3.611203846032542*^9, 
   3.611203930115575*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NewConstant"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]NewConstant\\n\\nNewConstant [ c1 ]  \
\\nNewConstant [ {c1 , c2, ...} ]  declares the symbols  c1,...  to be \
constants.  \\nNewConstant [ c ]   is equivalent to  ( deg [ c ] = 0 ;  \
\[Del] c = 0 ; ) ,  but will first check that  c  is not already in use, and \
ask what to do if it is.\\n\\nSee also:   ? NewField ,  ? ClearField ,  ? \
ClearConstant .\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876568027686*^9},
 CellTags->"Info3651912568-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"NewField", "::", "usage"}], "=", 
   "\"\<?\[VeryThinSpace]NewField\n\nNewField [ r , f ] \nNewField [ r , \
{f1,...fn} ]   will introduce the degree relations (such as  deg [ f1 ] = r \
),  that are needed for \nthe (unassigned) symbols  f1, ... fn  to be treated \
as  r-tensor fields.  \n\nNewField[ r , f]  is only useful for declaring new \
'arbitrary' fields, not expressible in terms other tensor fields \nalready in \
the system (in particular, there is no need to declare  f  before making \
assignments such as  f = u + v ,  \nor  f = u \[CircleTimes] v ,  where u and \
v are tensor fields). \n\nScalar fields are degree  r = 0 , vectors fields \
are degree  r = 1 , etc. \n\nTo declare an indexed collection fields, or \
fields that have their coordinate dependence explicit, the name  f  can be \n\
a pattern of the form  f\[VeryThinSpace]\[VeryThinSpace][ __ ] ,  \
\!\(\*SubscriptBox[\(f\), \(_\)]\) ,   \!\(\*SubscriptBox[\(f\), \(__\)]\)[\
\[VeryThinSpace]_\[VeryThinSpace]] ,  f\[VeryThinSpace][\[VeryThinSpace]_\
\[VeryThinSpace]][\[VeryThinSpace]_\[VeryThinSpace]] ,  etc. \n\n(Tip: To \
avoid assignments to Subscript[ ], consider using Format[ ]) \n\nNewField [ r \
, f ]  will ask what to do if  f  already has a value, or if  f  is already \
declared as a field with\nknown tensor degree.  \n\nSee also:   ? NewConstant \
,  ? ClearField ,  ? ClearConstant .\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.478950352790393*^9, 3.478950414475565*^9}, {
   3.4789504920751*^9, 3.478950961918722*^9}, {3.478951012260166*^9, 
   3.478951143020201*^9}, {3.478951547207419*^9, 3.478951724310686*^9}, {
   3.478953033779111*^9, 3.478953047967906*^9}, {3.478953079689527*^9, 
   3.478953518515281*^9}, {3.478953552545472*^9, 3.478953560938383*^9}, {
   3.478953604045761*^9, 3.478953861646736*^9}, {3.478953895288472*^9, 
   3.478954077363988*^9}, {3.478954115628969*^9, 3.478954181248097*^9}, {
   3.478954211607934*^9, 3.478954284764284*^9}, {3.478955118492949*^9, 
   3.478955199715283*^9}, {3.478955241309078*^9, 3.478955277514641*^9}, {
   3.47895534885158*^9, 3.478955371832164*^9}, {3.478955408838071*^9, 
   3.478955622453098*^9}, {3.478955765565599*^9, 3.478955881503354*^9}, {
   3.478956010969632*^9, 3.478956015427138*^9}, {3.478956054827466*^9, 
   3.478956055611279*^9}, {3.478956089290151*^9, 3.47895610320193*^9}, {
   3.478956234793969*^9, 3.478956244902135*^9}, {3.478956283471052*^9, 
   3.478956291483009*^9}, {3.47895878810333*^9, 3.478958939860081*^9}, {
   3.478959243826037*^9, 3.478959476611257*^9}, {3.478959523880747*^9, 
   3.478959804513336*^9}, {3.478959847225032*^9, 3.478959957185576*^9}, {
   3.478959998792592*^9, 3.478960306491108*^9}, {3.478960349825707*^9, 
   3.478961030544613*^9}, {3.478961089796844*^9, 3.478961094706789*^9}, {
   3.478961142090279*^9, 3.478961404018361*^9}, {3.478961434409686*^9, 
   3.478961549460079*^9}, 3.478961608285301*^9, {3.478961954437655*^9, 
   3.478961984487896*^9}, {3.478962069975149*^9, 3.478962072453824*^9}, {
   3.478962113587462*^9, 3.478962139083042*^9}, {3.478962177329711*^9, 
   3.478962178943944*^9}, 3.47896226822686*^9, 3.478962671441432*^9, {
   3.478962719201062*^9, 3.478962761361841*^9}, {3.478967878919303*^9, 
   3.478967907387373*^9}, 3.478969809622742*^9, {3.478970942451275*^9, 
   3.478970945198942*^9}, {3.479724451230601*^9, 3.479724483639757*^9}, {
   3.479724521233759*^9, 3.479724561441034*^9}, {3.479724620295596*^9, 
   3.479724651724849*^9}, 3.479731811349002*^9, 3.47990738453092*^9, {
   3.480169132932258*^9, 3.480169161326895*^9}, {3.480169219495491*^9, 
   3.480169237700895*^9}, {3.6112034053721647`*^9, 3.611203504417913*^9}, {
   3.611203728519178*^9, 3.611203730963666*^9}, 3.6112039394213457`*^9, {
   3.6498197766006002`*^9, 3.6498198334089613`*^9}, {3.6498198647428637`*^9, 
   3.6498199194874697`*^9}, {3.64982015450657*^9, 3.649820235886949*^9}, {
   3.6498203391485558`*^9, 3.64982039057224*^9}, {3.649820425980966*^9, 
   3.6498204889467154`*^9}, {3.6498205302361393`*^9, 
   3.6498205649713984`*^9}, {3.649820617563569*^9, 3.649820781561915*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "NewField"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]NewField\\n\\nNewField [ r , f ] \\nNewField \
[ r , {f1,...fn} ]   will introduce the degree relations (such as  deg [ f1 ] \
= r ),  that are needed for \\nthe (unassigned) symbols  f1, ... fn  to be \
treated as  r-tensor fields.  \\n\\nNewField[ r , f]  is only useful for \
declaring new 'arbitrary' fields, not expressible in terms other tensor \
fields \\nalready in the system (in particular, there is no need to declare  \
f  before making assignments such as  f = u + v ,  \\nor  f = u \
\[CircleTimes] v ,  where u and v are tensor fields). \\n\\nScalar fields are \
degree  r = 0 , vectors fields are degree  r = 1 , etc. \\n\\nTo declare an \
indexed collection fields, or fields that have their coordinate dependence \
explicit, the name  f  can be \\na pattern of the form  f\[VeryThinSpace]\
\[VeryThinSpace][ __ ] ,  \!\(\*SubscriptBox[\(f\), \(_\)]\) ,   \
\!\(\*SubscriptBox[\(f\), \(__\)]\)[\[VeryThinSpace]_\[VeryThinSpace]] ,  f\
\[VeryThinSpace][\[VeryThinSpace]_\[VeryThinSpace]][\[VeryThinSpace]_\
\[VeryThinSpace]] ,  etc. \\n\\n(Tip: To avoid assignments to Subscript[ ], \
consider using Format[ ]) \\n\\nNewField [ r , f ]  will ask what to do if  f \
 already has a value, or if  f  is already declared as a field with\\nknown \
tensor degree.  \\n\\nSee also:   ? NewConstant ,  ? ClearField ,  ? \
ClearConstant .\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876568097845*^9},
 CellTags->"Info3651912568-5027707"]
}, Open  ]],

Cell[BoxData[{
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ClearField", "::", "usage"}], "=", " ", 
    "\"\<?\[VeryThinSpace]ClearField\n\nClearField [ f1 ] \nClearField [ \
{f1,...,fn} ]  undoes everything done by  NewField [ ]  or  NewConstant [ ] .\
\>\""}], ";"}], " "}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ClearConstant", "::", "usage"}], "=", " ", 
   "\"\<?\[VeryThinSpace]ClearConstant \n\nClearConstant [ c ]  is an alias \
for the function  ClearField [ c ].\>\""}], ";"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479731981484921*^9, 3.479731993427471*^9}, {
  3.479732027835466*^9, 3.479732031523801*^9}, {3.479732093491633*^9, 
  3.479732280208133*^9}, {3.480169340975373*^9, 3.480169402210389*^9}, {
  3.611203558449252*^9, 3.611203602941125*^9}, {3.611203651021345*^9, 
  3.611203654077146*^9}, {3.611203950817507*^9, 3.6112039523357162`*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["The tensor product :   \[CircleTimes]", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
  3.467186809307252*^9, 3.467186816729617*^9}, {3.479732344839924*^9, 
  3.479732346311804*^9}}],

Cell["\<\
CircleTimes::usage = The function   CircleTimes[ ]   is    \[CircleTimes]     \
and is entered as    <Esc>  c*  <Esc>.   
Initially nothing is known about this function, except that it prints as \
infix. \
\>", "Text",
 CellChangeTimes->{{3.465382641638598*^9, 3.465382664870949*^9}, {
  3.466847176173019*^9, 3.46684721355625*^9}, {3.466847298083375*^9, 
  3.466847315774946*^9}, {3.467116374646419*^9, 3.46711642431634*^9}, {
  3.467119423750829*^9, 3.467119460749968*^9}, {3.467186837477058*^9, 
  3.467186891369089*^9}, {3.478623532051306*^9, 3.478623639615922*^9}, {
  3.479732434335536*^9, 3.479732440816492*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"CircleTimes", "::", "usage"}], " ", "=", " ", 
   "\"\<?\[VeryThinSpace]CircleTimes\n\nCircleTimes [ X , Y, . . . ]  \
\[Equal]  X \[CircleTimes] Y \[CircleTimes] . . .   is the tensor product.\n\n\
Enter the symbol  \[CircleTimes]  by typing  [Esc] c* [Esc] .\n\nFurther \
info:  \n\nIn tpTensor,  Attributes[ CircleTimes ] = { Flat, Listable }\n\n\
For reasons to do with easy list manipulation, CircleTimes[ ]  has been \
defined to be the identity if given only \none argument:  CircleTimes [ X ] \
\[Equal] X   and   \[CircleTimes] X \[Equal] X .\n\nCircleTimes[ ]  has been \
defined to collapse on scalars.  For example, if  deg [ a ] = 0   then   X \
\[CircleTimes] a \[CircleTimes] Y \[Equal]  a X \[CircleTimes] Y .\n\nOutput \
formating for  Times[ ]  has been modified so that tensor expressions are \
nicely printed, with the  CircleTimes[ ]  \nfactors appearing \!\(\*
StyleBox[\"after\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)their scalar coefficients.\n\nMaking  \[CircleTimes]  \
distributive over Plus was a bit messy  --  so at present is only coded for \
simplifying a maximum\nof 8 tensor factors (you could add more code if you \
need more factors). If you know how to code the general case, \nplease let me \
know. - ahn\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQB2IQbVJuLSPw9qWju+J0YxDt5XfMCUTb5U53A9F3/bR9
QHRDxCxfEJ335m4giLZeZlwAohem3SsD67+1dgaI7n7tPh9ES7w8vRxEP1I2
2gKilX8ePwqi5wQHnwbRQb19YHrG/erzIFrR9hGYPrnB6AqIjj0odh1Eu16T
vA2iN5peuQOipR7MegyiC2+U8goC6dPXzguC6P/zHSVAtNBdThkQvSm0RQ5E
q+T2mYPoDJvzYLrG4lcgiC5TqUoC0beYc9NB9KdKnTIQrTb7XAeI1vYW6QHR
DllJz0F0sEjmVxA94+ylnyDa672GmBCQPs96UApEK03/LAeinV587E4F0oev
WfSC6MWnsiufAmlZpRlVIBoA+EDBtg==
  "]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "CircleTimes"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"?\[VeryThinSpace]CircleTimes\\n\\nCircleTimes [ X , Y, . . . \
]  \[Equal]  X \[CircleTimes] Y \[CircleTimes] . . .   is the tensor product.\
\\n\\nEnter the symbol  \[CircleTimes]  by typing  [Esc] c* [Esc] \
.\\n\\nFurther info:  \\n\\nIn tpTensor,  Attributes[ CircleTimes ] = { Flat, \
Listable }\\n\\nFor reasons to do with easy list manipulation, CircleTimes[ ] \
 has been defined to be the identity if given only \\none argument:  \
CircleTimes [ X ] \[Equal] X   and   \[CircleTimes] X \[Equal] X \
.\\n\\nCircleTimes[ ]  has been defined to collapse on scalars.  For example, \
if  deg [ a ] = 0   then   X \[CircleTimes] a \[CircleTimes] Y \[Equal]  a X \
\[CircleTimes] Y .\\n\\nOutput formating for  Times[ ]  has been modified so \
that tensor expressions are nicely printed, with the  CircleTimes[ ]  \
\\nfactors appearing \!\(\*\\nStyleBox[\\\"after\\\",\\nFontSlant->\\\"Italic\
\\\"]\)\!\(\*\\nStyleBox[\\\" \\\",\\nFontSlant->\\\"Italic\\\"]\)their \
scalar coefficients.\\n\\nMaking  \[CircleTimes]  distributive over Plus was \
a bit messy  --  so at present is only coded for simplifying a maximum\\nof 8 \
tensor factors (you could add more code if you need more factors). If you \
know how to code the general case, \\nplease let me know. - ahn\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/CircleTimes"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876568159308*^9},
 CellTags->"Info3651912568-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TensorPower", "::", "usage"}], "=", 
   "\"\<TensorPower[ X, n ]  returns  X \[CircleTimes] ... \[CircleTimes] X,  \
with  n  factors of X.\n\nTensorPower[ X, 0 ]  is defined to be  1.\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.614392188894267*^9, 3.6143924172934427`*^9}, {
  3.614392448300927*^9, 3.614392483245841*^9}, {3.614393025186726*^9, 
  3.6143930347063*^9}, {3.614631564159404*^9, 3.614631565294949*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "TensorPower"}]], "Input",
 CellChangeTimes->{{3.614392421456634*^9, 3.6143924226866083`*^9}}],

Cell[BoxData[
 StyleBox["\<\"TensorPower[ X, n ]  returns  X \[CircleTimes] ... \
\[CircleTimes] X,  with  n  factors of X.\\n\\nTensorPower[ X, 0 ]  is \
defined to be  1.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876568454502*^9},
 CellTags->"Info3651912568-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["A fast simplify :   SimplifyTensor[X] ", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119352821146*^9}, {
  3.467370985602835*^9, 3.46737099050696*^9}, {3.478969712456913*^9, 
  3.47896975380715*^9}, {3.479394610229672*^9, 3.479394650876189*^9}, {
  3.479402628163701*^9, 3.479402643661632*^9}, {3.47973671195745*^9, 
  3.479736716485219*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SimplifyTensor", "::", "usage"}], "=", 
   "\"\<?\[VeryThinSpace]SimplifyTensor\n\nSimplifyTensor [ X ]   is a better \
way to apply  Simplify [ ]  to tensor expressions. It is very much faster.\n\n\
If  X  is a power-series (an expression with head SeriesData) then  \
SimplifyTensor[ ]  is applied to each coefficient in the series.\nIf  deg [ X \
]  =  0 , then  SimplifyTensor [ X ]  is eqivalent to  Simplify [ X ] .\n\n\
Additional information:\n\nSimplifyTensor [ X ]   breaks up the problem of \
simplifying  X  into smaller pieces by separately applying  Simplify [ ]  to \
each \n'co-strut'  (defined below) of the tensor expression  X.  Tensor \
expressions for which  Simplify [ ]  will totally fail on because the \n\
expression  X  is too large, will sometimes simplify in just a few seconds.  \
\n\nA co-strut of a tensor \!\(\*
StyleBox[\"expression\",
FontSlant->\"Italic\"]\)  X  is a bit like a component --- it is the \
coefficient of a 'strut'.  The struts of  X  are the\nelementary tensor \
products that appear in the expanded version of  X.  For example, the struts \
of the tensor expression\nX  =  (3 + y) \[Eta] \[CircleTimes] a + 2 f (x) b \
\[CircleTimes] b \[CircleTimes] c ,  are   { \[Eta] \[CircleTimes] a ,  b \
\[CircleTimes] b \[CircleTimes] c } ,  and the co-struts are  { (3 + y) , 2 f \
(x) } .\n\nLet V be the tensor-product vector space where X lives. Then the \
struts of X may or may not span the space V, and they may \nor may not be \
linearly independent as elements of V.  Nevertheless, the only way that the \
expression  X  can simplify (without \nintroducing additional relations) is \
if the co-struts of  X  individually simplify.  So it is better to apply \
Simplify [ ]  to the co-struts \nof  X  than to  X  as a whole.\n\nIf all the \
struts of  X  are tensor products of basis vectors, then the co-struts of the \
expression  X  will include all of the non-zero \ncomponents of the tensor  X \
 in that basis (and possibly also some components that simplify to zero).\n\n\
All of the routines discussed here can be used with Clifford expressions \
(sums of terms with mixed degree).  \n\n[The 'struts / co-struts' \
nomenclature is something I made up. Maybe there is something already \
established ? - ahn]  \n\nSee also:  struts [ X ] ,  costruts [ X ] ,  \
strutPair [ X ]\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479394662291093*^9, 3.479395351998552*^9}, {
   3.479395400502252*^9, 3.4793963267444*^9}, {3.479396393741274*^9, 
   3.479396395593723*^9}, {3.479396435748705*^9, 3.479397064453127*^9}, {
   3.479397106956228*^9, 3.47939711002638*^9}, {3.479397154787334*^9, 
   3.479397407244593*^9}, {3.479397438169009*^9, 3.479397439286023*^9}, {
   3.479397491069458*^9, 3.479397492874749*^9}, {3.479397527285947*^9, 
   3.479397537863142*^9}, {3.479397609102815*^9, 3.479397632094517*^9}, {
   3.479397681443137*^9, 3.479397690639182*^9}, {3.479397729838801*^9, 
   3.479397733096535*^9}, {3.479397833939137*^9, 3.479397952331625*^9}, {
   3.479398020285432*^9, 3.479398419133803*^9}, {3.479398483731142*^9, 
   3.479398526053976*^9}, {3.479398557905469*^9, 3.47939863939066*^9}, {
   3.479398684371823*^9, 3.479398689396814*^9}, {3.479401310904932*^9, 
   3.479401330727051*^9}, {3.479452365530185*^9, 3.479452436299593*^9}, {
   3.479452474867916*^9, 3.479452606889492*^9}, {3.47945268639205*^9, 
   3.479452716433487*^9}, 3.479452806366087*^9, {3.479452899100372*^9, 
   3.479453055418931*^9}, {3.479453092513508*^9, 3.479453133401649*^9}, {
   3.479453175839588*^9, 3.479453289515992*^9}, {3.479453337890545*^9, 
   3.479453375605932*^9}, {3.479453436782372*^9, 3.479453460816495*^9}, {
   3.479453509805395*^9, 3.479453517815378*^9}, {3.479453581151361*^9, 
   3.479453583113784*^9}, {3.479453618146945*^9, 3.479453630557014*^9}, {
   3.479453676470306*^9, 3.479453677632808*^9}, {3.479453729211768*^9, 
   3.479453729403409*^9}, {3.479453777861162*^9, 3.479453790541872*^9}, {
   3.479453825430946*^9, 3.479453830534087*^9}, {3.47945387210948*^9, 
   3.479453986773209*^9}, {3.479454680089379*^9, 3.479454877789053*^9}, {
   3.479454919740221*^9, 3.479455009826835*^9}, {3.479735555434154*^9, 
   3.479735582103411*^9}, {3.479735647599716*^9, 3.479735649042599*^9}, {
   3.479735688326294*^9, 3.479735717060462*^9}, 3.479735795725945*^9, {
   3.479736752062041*^9, 3.479736779081591*^9}, {3.479736895315173*^9, 
   3.479736897416111*^9}, {3.479736931129874*^9, 3.479736934281385*^9}, {
   3.479737048248432*^9, 3.479737138603445*^9}, 3.479737184847829*^9, 
   3.479907464977769*^9, 3.479907638035818*^9, {3.480169528624717*^9, 
   3.480169537101763*^9}, {3.481356591995545*^9, 3.481356746337317*^9}, {
   3.481356796287504*^9, 3.481356804538808*^9}, {3.481356858683033*^9, 
   3.481356859738635*^9}, {3.481356923848366*^9, 3.481356941793105*^9}, {
   3.481357006874025*^9, 3.481357031682515*^9}, {3.481905214570557*^9, 
   3.481905241457253*^9}, {3.481905276475255*^9, 3.481905340263035*^9}, {
   3.481905394613946*^9, 3.481905487166744*^9}, {3.481905523224938*^9, 
   3.481905656860052*^9}, 3.4819056889264*^9, {3.527655992641678*^9, 
   3.5276560717339478`*^9}, {3.5276561194713717`*^9, 3.527656218947796*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SimplifyTensor"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]SimplifyTensor\\n\\nSimplifyTensor [ X ]   is \
a better way to apply  Simplify [ ]  to tensor expressions. It is very much \
faster.\\n\\nIf  X  is a power-series (an expression with head SeriesData) \
then  SimplifyTensor[ ]  is applied to each coefficient in the series.\\nIf  \
deg [ X ]  =  0 , then  SimplifyTensor [ X ]  is eqivalent to  Simplify [ X ] \
.\\n\\nAdditional information:\\n\\nSimplifyTensor [ X ]   breaks up the \
problem of simplifying  X  into smaller pieces by separately applying  \
Simplify [ ]  to each \\n'co-strut'  (defined below) of the tensor expression \
 X.  Tensor expressions for which  Simplify [ ]  will totally fail on because \
the \\nexpression  X  is too large, will sometimes simplify in just a few \
seconds.  \\n\\nA co-strut of a tensor \
\!\(\*\\nStyleBox[\\\"expression\\\",\\nFontSlant->\\\"Italic\\\"]\)  X  is a \
bit like a component --- it is the coefficient of a 'strut'.  The struts of  \
X  are the\\nelementary tensor products that appear in the expanded version \
of  X.  For example, the struts of the tensor expression\\nX  =  (3 + y) \
\[Eta] \[CircleTimes] a + 2 f (x) b \[CircleTimes] b \[CircleTimes] c ,  are  \
 { \[Eta] \[CircleTimes] a ,  b \[CircleTimes] b \[CircleTimes] c } ,  and \
the co-struts are  { (3 + y) , 2 f (x) } .\\n\\nLet V be the tensor-product \
vector space where X lives. Then the struts of X may or may not span the \
space V, and they may \\nor may not be linearly independent as elements of V. \
 Nevertheless, the only way that the expression  X  can simplify (without \
\\nintroducing additional relations) is if the co-struts of  X  individually \
simplify.  So it is better to apply Simplify [ ]  to the co-struts \\nof  X  \
than to  X  as a whole.\\n\\nIf all the struts of  X  are tensor products of \
basis vectors, then the co-struts of the expression  X  will include all of \
the non-zero \\ncomponents of the tensor  X  in that basis (and possibly also \
some components that simplify to zero).\\n\\nAll of the routines discussed \
here can be used with Clifford expressions (sums of terms with mixed degree). \
 \\n\\n[The 'struts / co-struts' nomenclature is something I made up. Maybe \
there is something already established ? - ahn]  \\n\\nSee also:  struts [ X \
] ,  costruts [ X ] ,  strutPair [ X ]\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876568528994*^9},
 CellTags->"Info3651912568-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"struts", "::", "usage"}], "=", 
   "\"\<?\[VeryThinSpace]struts\n\nstruts [ X ]   returns a sorted list of \
the struts of  X .  \n\nFor documentation on this function see:  ? \
SimplifyTensor\n\nIf  deg [ X ] = 0  then  struts [ X ] = { 1 }  and  \
costruts [ X ] = X .\n\nSee also:  costruts [ X ] \>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479401043748049*^9, 3.479401061215278*^9}, {
   3.47940109597416*^9, 3.479401301228228*^9}, 3.479401414644701*^9, {
   3.479401678327005*^9, 3.479401682158371*^9}, {3.479401717049152*^9, 
   3.479401722085585*^9}, 3.479737238244675*^9, 3.47990748890742*^9, {
   3.480169713233978*^9, 3.480169719359699*^9}, {3.480169777786311*^9, 
   3.480169900362068*^9}, {3.481905817148142*^9, 3.481905923973333*^9}, {
   3.481906090338029*^9, 3.481906102034398*^9}, {3.481906273747524*^9, 
   3.481906279515366*^9}, {3.481906485834351*^9, 3.481906518777429*^9}, {
   3.481906952995684*^9, 3.481906981433062*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "struts"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]struts\\n\\nstruts [ X ]   returns a sorted \
list of the struts of  X .  \\n\\nFor documentation on this function see:  ? \
SimplifyTensor\\n\\nIf  deg [ X ] = 0  then  struts [ X ] = { 1 }  and  \
costruts [ X ] = X .\\n\\nSee also:  costruts [ X ] \"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6518765688051147`*^9},
 CellTags->"Info3651912568-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"costruts", "::", "usage"}], "=", 
   "\"\<?\[VeryThinSpace]costruts\n\ncostruts [ X ]   returns a list of the \
costruts of  X .  \n\nFor documentation on this function see:  ? \
SimplifyTensor\n\nThe order and length of the list returned by  costruts [ X \
]  matches that returned by  struts [ X ] .\nIf  deg [ X ] = 0   then  struts \
[ X ] = { 1 }  and  costruts [ X ] = X .\n\nSee also:  struts [ X ] \>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479401043748049*^9, 3.479401061215278*^9}, {
   3.47940109597416*^9, 3.479401301228228*^9}, 3.479401414644701*^9, {
   3.479401547212778*^9, 3.479401663589006*^9}, 3.479737256903194*^9, {
   3.479737288184088*^9, 3.479737289445932*^9}, 3.479907500362298*^9, {
   3.48016990868286*^9, 3.480169945571144*^9}, {3.481905936229323*^9, 
   3.48190594741011*^9}, {3.481906015610883*^9, 3.481906080680189*^9}, {
   3.481906221577827*^9, 3.481906253844494*^9}, {3.481906331961454*^9, 
   3.481906344451104*^9}, {3.481906396406677*^9, 3.481906398278224*^9}, {
   3.481906462121337*^9, 3.481906465208275*^9}, {3.481906527760911*^9, 
   3.481906533433705*^9}, {3.481906962836888*^9, 3.481906984268425*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "costruts"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]costruts\\n\\ncostruts [ X ]   returns a list \
of the costruts of  X .  \\n\\nFor documentation on this function see:  ? \
SimplifyTensor\\n\\nThe order and length of the list returned by  costruts [ \
X ]  matches that returned by  struts [ X ] .\\nIf  deg [ X ] = 0   then  \
struts [ X ] = { 1 }  and  costruts [ X ] = X .\\n\\nSee also:  struts [ X ] \
\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765688763113`*^9},
 CellTags->"Info3651912568-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"strutPair", "::", "usage"}], "=", 
   "\"\<?\[VeryThinSpace]strutPair\n\nstrutPair [ X ]  =  { struts [ X ] , \
costruts [ X ] } .  \n\nThis routine is provided because it is twice as fast \
as calling the above routines separately.\nFor documentation on this function \
see:  ? SimplifyTensor\n\nThe order and length of the list returned by  \
costruts [ X ]  matches that returned by  struts [ X ] .\nIf  deg [ X ] = 0   \
then  struts [ X ] = { 1 } .\n\nSee also:  struts [ X ] ,  costruts [ X \
]\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479401043748049*^9, 3.479401061215278*^9}, {
   3.47940109597416*^9, 3.479401301228228*^9}, 3.479401414644701*^9, {
   3.479401547212778*^9, 3.479401663589006*^9}, 3.479737256903194*^9, {
   3.479737288184088*^9, 3.479737289445932*^9}, 3.479907500362298*^9, {
   3.48016990868286*^9, 3.480169945571144*^9}, {3.481905936229323*^9, 
   3.48190594741011*^9}, {3.481906015610883*^9, 3.481906080680189*^9}, {
   3.481906221577827*^9, 3.481906253844494*^9}, {3.481906331961454*^9, 
   3.481906344451104*^9}, {3.481906396406677*^9, 3.481906398278224*^9}, {
   3.481906462121337*^9, 3.481906465208275*^9}, {3.481906527760911*^9, 
   3.481906533433705*^9}, {3.481906962836888*^9, 3.481906984268425*^9}, {
   3.527655499973297*^9, 3.52765557323792*^9}, {3.527655641368463*^9, 
   3.527655762851503*^9}, {3.527655807285809*^9, 3.527655814116274*^9}, {
   3.527655872455855*^9, 3.527655873156269*^9}, 3.5276559072883587`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "strutPair"}]], "Input",
 CellChangeTimes->{{3.52765583666742*^9, 3.527655840458283*^9}}],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]strutPair\\n\\nstrutPair [ X ]  =  { struts [ \
X ] , costruts [ X ] } .  \\n\\nThis routine is provided because it is twice \
as fast as calling the above routines separately.\\nFor documentation on this \
function see:  ? SimplifyTensor\\n\\nThe order and length of the list \
returned by  costruts [ X ]  matches that returned by  struts [ X ] .\\nIf  \
deg [ X ] = 0   then  struts [ X ] = { 1 } .\\n\\nSee also:  struts [ X ] ,  \
costruts [ X ]\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765691096992`*^9},
 CellTags->"Info3651912569-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandTensor", "::", "usage"}], "=", 
   "\"\<ExpandTensor[ X ]   or   X // ExpandTensor\n\nSame as the function \
Expand, but optimized for tensor expressions X.\n\nFor more information, see: \
 ? SimplifyTensor\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613725554588622*^9, 3.613725774268223*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExpandTensor"}]], "Input",
 CellChangeTimes->{
  3.613725678285413*^9, {3.613725844238366*^9, 3.6137258511351967`*^9}}],

Cell[BoxData[
 StyleBox["\<\"ExpandTensor[ X ]   or   X // ExpandTensor\\n\\nSame as the \
function Expand, but optimized for tensor expressions X.\\n\\nFor more \
information, see:  ? SimplifyTensor\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876569177588*^9},
 CellTags->"Info3651912569-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ExpandAllTensor", "::", "usage"}], "=", 
   "\"\<ExpandAllTensor[ X ]   or   X // ExpandAllTensor\n\nSame as the \
function ExpandAll, but optimized for tensor expressions X.\n\nFor more \
information, see:  ? SimplifyTensor\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613725554588622*^9, 3.613725774268223*^9}, {
  3.613725807107209*^9, 3.613725821101263*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ExpandAllTensor"}]], "Input",
 CellChangeTimes->{{3.613725831550264*^9, 3.6137258538097563`*^9}}],

Cell[BoxData[
 StyleBox["\<\"ExpandAllTensor[ X ]   or   X // ExpandAllTensor\\n\\nSame as \
the function ExpandAll, but optimized for tensor expressions X.\\n\\nFor more \
information, see:  ? SimplifyTensor\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876569425522*^9},
 CellTags->"Info3651912569-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"FullSimplifyTensor", "::", "usage"}], "=", 
   "\"\<FullSimplifyTensor[ X ]   or   X // FullSimplifyTensor\n\nSame as the \
function FullSimplify, but optimized for tensor expressions X.\n\nFor more \
information, see:  ? SimplifyTensor\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613725554588622*^9, 3.613725774268223*^9}, {
  3.613725807107209*^9, 3.613725821101263*^9}, {3.613725895140443*^9, 
  3.61372593829659*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "FullSimplifyTensor"}]], "Input",
 CellChangeTimes->{3.613725964575181*^9}],

Cell[BoxData[
 StyleBox["\<\"FullSimplifyTensor[ X ]   or   X // \
FullSimplifyTensor\\n\\nSame as the function FullSimplify, but optimized for \
tensor expressions X.\\n\\nFor more information, see:  ? SimplifyTensor\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876569504512*^9},
 CellTags->"Info3651912569-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["The covariant differential  \[Del]", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
  3.467120202756169*^9, 3.467120227661777*^9}, {3.467187120856558*^9, 
  3.467187124410321*^9}, {3.478630034354956*^9, 3.478630077607476*^9}, {
  3.478630109422449*^9, 3.478630141386044*^9}, {3.478873924972432*^9, 
  3.478873926554546*^9}, {3.479750695890871*^9, 3.479750704479981*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Del", "::", "usage"}], "=", " ", 
   "\"\<?\[VeryThinSpace]Del\n\nDel [ X ]  \[Equal]  \[Del] X    is the \
covariant gradient of the tensor expression  X .  \nThe gradient raises \
tensor degree by one:  deg\[VeryThinSpace][ \[Del] X ]  =  \
deg\[VeryThinSpace][ X ]  + 1. \n\nUsage:\n\n\[Del]  is entered as  [Esc] del \
[Esc] .  \n\[Del]  is a prefix operator,  so does not have square brackets  [ \
 ]  around its argument.  \n\[Del]  is the same as the function  Del [  ] , \
and can also be used in that form.\n\nAttributes\[VeryThinSpace][ Del ] \
\[Equal] { Listable } ,  meaning that  \[Del]  will automatically  Thread\
\[VeryThinSpace][ ]  over lists. That is, \[Del]  will accept \na list of \
tensors as its single argument and return a list with  \[Del]  applied to \
each list item.\n\n\!\(\*
StyleBox[\"Further\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\" \",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\"information\",
FontVariations->{\"Underline\"->True}]\)\!\(\*
StyleBox[\":\",
FontVariations->{\"Underline\"->True}]\)\n\nIn  tpTensor  the covariant \
differential  \[Del]  is related to the covariant directional derivative  \
\!\(\*SubscriptBox[\(\[Del]\), \(X\)]\)  by\n\n                     \
\!\(\*SubscriptBox[\(\[Del]\), \(X\)]\)Y  =  \[LeftAngleBracket] \[Del] Y , X \
\[RightAngleBracket]    \[LongLeftArrow] The tensor slot created by  \[Del]  \
appears as the \!\(\*
StyleBox[\"last\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"slot\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\) in  \[Del] Y , so as to conform \n                   \
                                      to tensor index notation.  Thus,  X  \
appears to the right of  \[Del] Y  in the  \[LeftAngleBracket] , \
\[RightAngleBracket]  bracket.\n\nHaving   \[Del]  create slots on the right \
(rather than the left) is not the choice of many authors, but it is actually \
very sensible \nbecause it allows one to translate to/from component index \
notation \!\(\*
StyleBox[\"without\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"having\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"to\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"re\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"-\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"map\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"index\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"order\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\".\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)  It is how  \[Del]  is \ndefined in\!\(\*
StyleBox[\"  \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"Gravitation\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"  \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)(Misner, Thorne & Wheeler)\!\(\*
StyleBox[\",\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontSlant->\"Italic\"]\)equation (8.17), page 208. \n \nTo invert the above \
relation:  Let { \!\(\*SuperscriptBox[\(e\), \(i\)]\) }  be the covector \
(1-form) basis that is dual to the vector basis { \!\(\*SubscriptBox[\(e\), \
\(j\)]\) }, \nso that  \[LeftAngleBracket] \!\(\*SuperscriptBox[\(e\), \(i\)]\
\) , \!\(\*SubscriptBox[\(e\), \(j\)]\) \[RightAngleBracket] = \
\!\(\*SubscriptBox[SuperscriptBox[\(\[Delta]\), \(i\)], \(j\)]\)   and   \
\[Delta] =  \!\(\*SubscriptBox[SuperscriptBox[\(\[Delta]\), \(i\)], \(j\)]\) \
\!\(\*SubscriptBox[\(e\), \(i\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \
\(\(j\)\(\\\ \\\ \)\)]\)  =  \!\(\*SubscriptBox[\(e\), \(i\)]\) \
\[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(\(i\)\(\\\ \\\ \)\)]\).  \nThen, \
                            \n                  \[Del] Y  =  \
\[LeftAngleBracket] \[Del] Y, \[Delta] \[RightAngleBracket]      \n           \
              =  \[LeftAngleBracket] \[Del] Y, \!\(\*SubscriptBox[\(e\), \
\(i\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(i\)]\) \
\[RightAngleBracket]\n                         =  \[LeftAngleBracket] \[Del] \
Y, \!\(\*SubscriptBox[\(e\), \(i\)]\) \[RightAngleBracket] \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(i\)]\)\n                         =  \
\!\(\*SubscriptBox[\(\[Del]\), SubscriptBox[\(e\), \(i\)]]\)Y \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(i\)]\) ,\n\nwhich would normally be taken as \
defining  \[Del] Y .  In  tpTensor  an entirely equivalent, but \
computationally simpler, definition of\n\[Del] Y  is implemented which makes \
use of a braided Leibniz rule, as described below. \n\nWhile the directional \
derivative  \!\(\*SubscriptBox[\(\[Del]\), \(X\)]\)  satisfies the Leibniz \
rule,\n\n                              \!\(\*SubscriptBox[\(\[Del]\), \
\(X\)]\) ( A \[CircleTimes] B )  =  \!\(\*SubscriptBox[\(\[Del]\), \(X\)]\) A \
 \[CircleTimes]  B   +   A  \[CircleTimes]  \!\(\*SubscriptBox[\(\[Del]\), \
\(X\)]\) B ,\n                                          \nthis is certainly  \
\!\(\*
StyleBox[\"not\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"the\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"case\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)  for the covariant differential, which must create \
its derivative slot as the \!\(\*
StyleBox[\"last\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\" \",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\)\!\(\*
StyleBox[\"slot\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\) (not stuck\nsomewhere in the middle of a tensor \
product, as in the expression  \[Del] A  \[CircleTimes] B ).  To move the \
derivative slot to its correct place, \ntpTensor evaluates  \[Del]  of any \
tensor product using the rule , \n\n                              \[Del] ( A \
\[CircleTimes] B )  =  mvToLast\[VeryThinSpace][ 1 + deg\[VeryThinSpace][ A ] \
, \[Del] A \[CircleTimes] B ]  +  A \[CircleTimes] \[Del] B .               [ \
See:  ?\[VeryThinSpace]\[VeryThinSpace]mvToLast ]\n\nThis is the 'braided \
Lebniz rule' referred to above, and it leads directly to the well known \
component expression for the \ncovariant derivative in index notation. \n\n\
Example (1).  Let deg [ f ] = 0, and  X  be a tensor.  Then the above formula \
for  \[Del] ( A \[CircleTimes] B )  gives  \[Del] ( f X )  =  X \
\[CircleTimes] \[Del] f  +  f \[Del] X . \nIf  tpTensor can not further \
evaluate either  \[Del] f  or  \[Del] X ,  then this is the expression that \
is returned. \n \nExample (2).  Suppose  X = \
\!\(\*SuperscriptBox[SubscriptBox[SuperscriptBox[\(X\), \(i\)], \(jk\)], \(pq\
\)]\) \!\(\*SubscriptBox[\(e\), \(i\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\
\(e\), \(j\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(k\)]\) \
\[CircleTimes] \!\(\*SubscriptBox[\(e\), \(p\)]\) \[CircleTimes] \
\!\(\*SubscriptBox[\(e\), \(q\)]\) ,  where the summations have been fully \
expanded out (because tpTensor \ndoes not understand Einstein summation \
convention).  Then  tpTensor  would return  \[Del] X  as the (rather large) \
fully expanded sum\n\n                                 \[Del] X  =  \
\!\(\*SubscriptBox[SuperscriptBox[SubscriptBox[SuperscriptBox[\(X\), \(i\)], \
\(jk\)], \(pq\)], \(\(;\)\(\\\ \)\(r\)\)]\) \!\(\*SubscriptBox[\(e\), \
\(i\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(j\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(k\)]\) \[CircleTimes] \!\(\*SubscriptBox[\(e\), \
\(p\)]\) \[CircleTimes] \!\(\*SubscriptBox[\(e\), \(q\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(r\)]\) ,\n\nwhere the set of components  \
\!\(\*SubscriptBox[SuperscriptBox[SubscriptBox[SuperscriptBox[\(X\), \(i\)], \
\(jk\)], \(pq\)], \(\(;\)\(\\\ \)\(r\)\)]\)  of  \[Del] X  is the usual \
'covariant derivative' known from tensor index notation.  In particular, \n\
the notation and conventions used by  tpTensor  are such that any component  \
\!\(\*SubscriptBox[SuperscriptBox[SubscriptBox[SuperscriptBox[\(X\), \(i\)], \
\(jk\)], \(pq\)], \(\(;\)\(\\\ \)\(r\)\)]\)  of  \[Del] X  can be directly \
read off as the\ncoefficient of   \!\(\*SubscriptBox[\(e\), \(i\)]\) \
\[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(j\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(k\)]\) \[CircleTimes] \!\(\*SubscriptBox[\(e\), \
\(p\)]\) \[CircleTimes] \!\(\*SubscriptBox[\(e\), \(q\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(r\)]\)   in the expression for  \[Del] X ,  \
without the need to re-map index order. \n\nIn example (2) it is presumed \
that one has already defined connection coefficients  \
\!\(\*SubscriptBox[SuperscriptBox[\(\[Omega]\), \(\(\\\ \)\(i\)\)], \(\(\\\ \
\)\(j\\\ k\)\)]\)  for the dual basis pair  { \!\(\*SubscriptBox[\(e\), \
\(i\)]\) , \!\(\*SuperscriptBox[\(e\), \(i\)]\) } , so that\ntpTensor knows \
that it can evaluate  \[Del] \!\(\*SubscriptBox[\(e\), \(j\)]\)  and  \[Del] \
\!\(\*SuperscriptBox[\(e\), \(i\)]\)  as \n\n                                 \
         \[Del] \!\(\*SubscriptBox[\(e\), \(j\)]\)  =     \
\!\(\*SuperscriptBox[\(\[Omega]\), \(\(\\\ \
\)\(i\)\)]\)\!\(\*SubscriptBox[\(\\\ \), \(j\\\ k\)]\)  \
\!\(\*SubscriptBox[\(e\), \(i\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \
\(k\)]\) , \n                                          \[Del] \
\!\(\*SuperscriptBox[\(e\), \(i\)]\)  =  - \!\(\*SubscriptBox[SuperscriptBox[\
\(\[Omega]\), \(\(\\\ \)\(i\)\)], \(\(\\\ \)\(j\\\ k\)\)]\)  \
\!\(\*SuperscriptBox[\(e\), \(j\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(k\)]\) . \n\nFurthermore, the index notation \
usually presumes working in a coordinate basis. So in example (2), one might \
suppose\nthat   { \!\(\*SubscriptBox[\(e\), \(i\)]\) , \
\!\(\*SuperscriptBox[\(e\), \(i\)]\) }  =  { \!\(\*SubscriptBox[\(\[PartialD]\
\), SuperscriptBox[\(x\), \(i\)]]\) , \!\(\*SuperscriptBox[\(dx\), \
\(\(i\)\(\\\ \\\ \)\)]\)} ,   in which case   \
\!\(\*SubscriptBox[SuperscriptBox[\(\[Omega]\), \(\(\\\ \)\(i\)\)], \(\(\\\ \
\)\(j\\\ k\)\)]\)  \[Equal]  \!\(\*SubscriptBox[SuperscriptBox[\(\
\[CapitalGamma]\), \(\(\\\ \)\(i\)\)], \(\(\\\ \)\(j\\\ k\)\)]\)   are the \
Christoffel symbols associated with { \!\(\*SuperscriptBox[\(x\), \(i\)]\) } \
coordinates.\n\ntpTensor will calculate  \[Del]  in any frame,  using \
whatever information is available.  Thus, if  \[Del] \
\!\(\*SubscriptBox[\(e\), \(j\)]\)  and  \[Del] \!\(\*SuperscriptBox[\(e\), \
\(i\)]\)  had not yet been assigned\nvalues, then factors of  \[Del] \
\!\(\*SubscriptBox[\(e\), \(j\)]\)  and  \[Del] \!\(\*SuperscriptBox[\(e\), \
\(i\)]\)  would have appeared explicitly in the result for  \[Del] X . \n\n\
See also :  ? mvToLast ,   ? connection\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479737425415773*^9, 3.479737478839335*^9}, {
   3.479737551559469*^9, 3.479737679414415*^9}, {3.479737732772259*^9, 
   3.479738088608216*^9}, {3.479738134661478*^9, 3.479738140484466*^9}, {
   3.479738230604322*^9, 3.479738268173327*^9}, {3.479738309089616*^9, 
   3.47973834681399*^9}, {3.479738381720623*^9, 3.479738549064752*^9}, {
   3.479738586417924*^9, 3.479738980988396*^9}, 3.479739031239861*^9, {
   3.479739091158412*^9, 3.479739210659472*^9}, {3.47973926395545*^9, 
   3.4797392976035*^9}, {3.479739332564003*^9, 3.479739344452598*^9}, {
   3.479739398708491*^9, 3.479739420786929*^9}, {3.479739533597561*^9, 
   3.479739655965796*^9}, {3.47973970440654*^9, 3.479739708227688*^9}, {
   3.479739740854541*^9, 3.479739837144698*^9}, {3.479739916630048*^9, 
   3.479739932411728*^9}, {3.479740004680106*^9, 3.479740131607182*^9}, 
   3.479740170975248*^9, {3.479740221350616*^9, 3.479740243429981*^9}, {
   3.479740320934755*^9, 3.479740321541472*^9}, {3.479740401009262*^9, 
   3.479740433407011*^9}, {3.479740516427193*^9, 3.479740602546397*^9}, {
   3.479740637984194*^9, 3.479740642283285*^9}, {3.479740692083304*^9, 
   3.479740760635203*^9}, {3.479740806807108*^9, 3.479740910736971*^9}, {
   3.479741039320369*^9, 3.479741051093467*^9}, {3.479741113461968*^9, 
   3.479741154318682*^9}, {3.479741191927444*^9, 3.479741671464214*^9}, 
   3.479741703791526*^9, {3.4797420252023*^9, 3.479742103808918*^9}, {
   3.479742172272125*^9, 3.47974219662756*^9}, {3.479742228226317*^9, 
   3.47974226352069*^9}, {3.479742317899805*^9, 3.479742408173062*^9}, {
   3.479742445988617*^9, 3.479742490376589*^9}, {3.479742566226597*^9, 
   3.479742839697676*^9}, {3.479742879197595*^9, 3.479742916852589*^9}, {
   3.479742978429598*^9, 3.479743065440517*^9}, {3.479743147676538*^9, 
   3.47974315885841*^9}, {3.47974320016231*^9, 3.479743454586329*^9}, {
   3.479743507485796*^9, 3.479743880663495*^9}, {3.479743949080737*^9, 
   3.4797442051713*^9}, {3.479744256527651*^9, 3.479744483596489*^9}, {
   3.479744519499008*^9, 3.479744561262866*^9}, {3.47974460366837*^9, 
   3.479744731022716*^9}, {3.479744855524314*^9, 3.479745106986893*^9}, {
   3.479745263904628*^9, 3.4797452677927*^9}, {3.479745316814531*^9, 
   3.479745383560986*^9}, {3.479745416413532*^9, 3.479745510861831*^9}, {
   3.479745549577985*^9, 3.47974557015283*^9}, {3.479745779360054*^9, 
   3.479745791492238*^9}, {3.479745852054946*^9, 3.479745891036444*^9}, {
   3.479746046249358*^9, 3.479746069554001*^9}, {3.479746131548123*^9, 
   3.479746156122728*^9}, {3.479746196112268*^9, 3.479746406464904*^9}, {
   3.479746485977324*^9, 3.479746491696971*^9}, {3.479746567019933*^9, 
   3.479746610018824*^9}, {3.479746644101906*^9, 3.479746646594346*^9}, {
   3.479746689907732*^9, 3.479746736899264*^9}, {3.47974681954263*^9, 
   3.479746862566652*^9}, {3.479746967735276*^9, 3.479746982901165*^9}, {
   3.479747033782594*^9, 3.479747038938022*^9}, {3.479747086062837*^9, 
   3.479747128748248*^9}, {3.479747168865736*^9, 3.479747169570272*^9}, {
   3.47974723315997*^9, 3.479747237340868*^9}, {3.479747332442139*^9, 
   3.479747393983314*^9}, {3.479747469993515*^9, 3.479747549914433*^9}, 
   3.479747695748857*^9, {3.479747768889605*^9, 3.479747780945409*^9}, {
   3.479747825345298*^9, 3.479747848125798*^9}, {3.479747923280907*^9, 
   3.479748018115355*^9}, {3.479748059182612*^9, 3.479748063475012*^9}, {
   3.479748105938216*^9, 3.479748158584962*^9}, {3.479748242281098*^9, 
   3.479748328674418*^9}, {3.479748363731897*^9, 3.479748385722842*^9}, {
   3.479748517069183*^9, 3.479748818080637*^9}, {3.479748854201632*^9, 
   3.479748862247235*^9}, {3.479748905537199*^9, 3.479748917740701*^9}, {
   3.479748963865679*^9, 3.479749012368917*^9}, {3.479749072667791*^9, 
   3.47974914113927*^9}, 3.479749172625926*^9, {3.479749212416918*^9, 
   3.479749308985844*^9}, {3.479749367672834*^9, 3.479749561172597*^9}, {
   3.479749717018816*^9, 3.479749756581945*^9}, {3.47974978802398*^9, 
   3.479749882886038*^9}, {3.479749924105652*^9, 3.479749986475991*^9}, 
   3.479750187033122*^9, {3.479803439394068*^9, 3.479803480101505*^9}, {
   3.47980351210077*^9, 3.479803525260262*^9}, {3.47980358194607*^9, 
   3.479803585240616*^9}, {3.47980372347423*^9, 3.479803725559556*^9}, {
   3.479803778635606*^9, 3.479803953309169*^9}, {3.479804001689924*^9, 
   3.479804094477366*^9}, {3.479804167510976*^9, 3.479804273982975*^9}, {
   3.479804323750716*^9, 3.479804333694641*^9}, 3.479804385466578*^9, {
   3.47980448591544*^9, 3.479804522978029*^9}, {3.479804662571332*^9, 
   3.479804758131138*^9}, {3.47980484715364*^9, 3.47980488886735*^9}, {
   3.479804921076902*^9, 3.479804922157679*^9}, {3.479804980477003*^9, 
   3.479805109485619*^9}, {3.479805142917916*^9, 3.479805156973111*^9}, {
   3.479805189306215*^9, 3.479805236630439*^9}, {3.479805337613517*^9, 
   3.479805458974942*^9}, {3.479805510416377*^9, 3.479805512517975*^9}, {
   3.479805638618241*^9, 3.479805685305991*^9}, {3.47980576102231*^9, 
   3.479805783910883*^9}, {3.479805814336744*^9, 3.479805879650081*^9}, {
   3.479805916666672*^9, 3.479805974577062*^9}, {3.479806005746385*^9, 
   3.479806007314742*^9}, {3.479806038711131*^9, 3.479806045326434*^9}, {
   3.479806126358872*^9, 3.479806218518742*^9}, 3.479806249161315*^9, {
   3.479806302711165*^9, 3.479806304238727*^9}, {3.479806363368654*^9, 
   3.479806377836825*^9}, {3.479806441331014*^9, 3.479806557934344*^9}, {
   3.479806698690702*^9, 3.47980679973865*^9}, {3.479806833760473*^9, 
   3.47980683472987*^9}, {3.479807586421581*^9, 3.479807625520533*^9}, {
   3.479807655582147*^9, 3.479807762555683*^9}, {3.479807805279951*^9, 
   3.479807938152185*^9}, {3.479807970177156*^9, 3.479807972920151*^9}, {
   3.479808004649437*^9, 3.47980801420946*^9}, {3.479808048536739*^9, 
   3.479808122040357*^9}, {3.4798081592943*^9, 3.47980826948682*^9}, {
   3.479808372385569*^9, 3.479808570992141*^9}, {3.479808724491959*^9, 
   3.479808726332821*^9}, {3.479808767124075*^9, 3.47980877315215*^9}, {
   3.479810830774687*^9, 3.479810898878819*^9}, {3.479810981465114*^9, 
   3.479811063583847*^9}, {3.479811106300682*^9, 3.479811136928394*^9}, {
   3.479811181312366*^9, 3.479811244875343*^9}, {3.479811316431064*^9, 
   3.479811384159193*^9}, {3.479811538551459*^9, 3.479811555903418*^9}, {
   3.479811625960368*^9, 3.479811647863181*^9}, {3.479815478224054*^9, 
   3.479815481044445*^9}, {3.479815519617115*^9, 3.479815522205887*^9}, {
   3.479815554197186*^9, 3.479815582731677*^9}, {3.479815666110885*^9, 
   3.479815690749604*^9}, 3.479907718883207*^9, {3.479908390378792*^9, 
   3.479908466488801*^9}, {3.479908520718124*^9, 3.479908925181738*^9}, {
   3.479908955528623*^9, 3.479908967702338*^9}, {3.4799090088471*^9, 
   3.479909134287378*^9}, {3.479909300083792*^9, 3.479909456915194*^9}, {
   3.479909524149386*^9, 3.47990985944909*^9}, {3.479909932042226*^9, 
   3.479909955779443*^9}, {3.479909994715311*^9, 3.479910080091763*^9}, {
   3.479910121440914*^9, 3.479910162604366*^9}, {3.47991019771314*^9, 
   3.479910237559445*^9}, {3.479910275220977*^9, 3.479910280178738*^9}, {
   3.479910362418961*^9, 3.479910379452995*^9}, {3.479910434911433*^9, 
   3.479910449204636*^9}, {3.479910503888613*^9, 3.479910524140378*^9}, {
   3.479910586706605*^9, 3.47991063219554*^9}, 3.479910735091675*^9, 
   3.479910775958064*^9, {3.47991083219516*^9, 3.479910912777517*^9}, {
   3.479910987611496*^9, 3.479910992613116*^9}, {3.479911085400956*^9, 
   3.479911124050331*^9}, {3.479911198825081*^9, 3.479911241688427*^9}, {
   3.479911273252748*^9, 3.479911277740248*^9}, {3.47991134600429*^9, 
   3.479911460922826*^9}, {3.47991161621932*^9, 3.479911745172449*^9}, {
   3.47991179755995*^9, 3.479911801043484*^9}, {3.479911836363916*^9, 
   3.479911965290563*^9}, 3.479912003028864*^9, {3.479912045445166*^9, 
   3.479912065750192*^9}, {3.479912098514667*^9, 3.479912113396375*^9}, {
   3.479912172392879*^9, 3.4799121956761*^9}, {3.479912236060178*^9, 
   3.479912270525*^9}, {3.479912314863098*^9, 3.479912381691406*^9}, {
   3.479912472166899*^9, 3.4799125087347*^9}, {3.479912589344877*^9, 
   3.479912593373642*^9}, {3.479912631108461*^9, 3.479912667868959*^9}, {
   3.479912737037715*^9, 3.479912739598044*^9}, {3.479912782327216*^9, 
   3.479912810768213*^9}, {3.479912922184906*^9, 3.479912924352651*^9}, {
   3.479912988061098*^9, 3.479913161063518*^9}, {3.479913443825844*^9, 
   3.479913475976159*^9}, {3.480169977401829*^9, 3.480170011156735*^9}, {
   3.480170058111252*^9, 3.480170069608586*^9}, {3.480170129869266*^9, 
   3.480170130308238*^9}, {3.480170206965287*^9, 3.480170212375591*^9}, {
   3.480170280766651*^9, 3.48017029142285*^9}, {3.480170340176148*^9, 
   3.480170350463336*^9}, {3.480170398909919*^9, 3.480170428495596*^9}, {
   3.480170480779607*^9, 3.480170484005234*^9}, {3.480170562614302*^9, 
   3.480170574030385*^9}, {3.480170708200566*^9, 3.480170720295262*^9}, {
   3.480170803859922*^9, 3.480170902578021*^9}, {3.480170944519642*^9, 
   3.480171011835277*^9}, {3.480171048852818*^9, 3.48017107706476*^9}, 
   3.480171111254541*^9, {3.480171234403913*^9, 3.480171282464674*^9}, {
   3.480171323744997*^9, 3.48017132488775*^9}, {3.487836170308354*^9, 
   3.487836171029439*^9}, {3.653853700323872*^9, 3.6538537106270742`*^9}, {
   3.6538537866908092`*^9, 3.653854016843267*^9}, {3.653854332840276*^9, 
   3.653854336532837*^9}, {3.6560265221411123`*^9, 3.656026596811079*^9}, {
   3.6560266865701427`*^9, 3.656026714361762*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Del"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"?\[VeryThinSpace]Del\\n\\nDel [ X ]  \[Equal]  \[Del] X    is \
the covariant gradient of the tensor expression  X .  \\nThe gradient raises \
tensor degree by one:  deg\[VeryThinSpace][ \[Del] X ]  =  \
deg\[VeryThinSpace][ X ]  + 1. \\n\\nUsage:\\n\\n\[Del]  is entered as  [Esc] \
del [Esc] .  \\n\[Del]  is a prefix operator,  so does not have square \
brackets  [  ]  around its argument.  \\n\[Del]  is the same as the function  \
Del [  ] , and can also be used in that \
form.\\n\\nAttributes\[VeryThinSpace][ Del ] \[Equal] { Listable } ,  meaning \
that  \[Del]  will automatically  Thread\[VeryThinSpace][ ]  over lists. That \
is, \[Del]  will accept \\na list of tensors as its single argument and \
return a list with  \[Del]  applied to each list \
item.\\n\\n\!\(\*\\nStyleBox[\\\"Further\\\",\\nFontVariations->{\\\"\
Underline\\\"->True}]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\)\!\(\*\\nStyleBox[\\\"\
information\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\)\!\(\*\\\
nStyleBox[\\\":\\\",\\nFontVariations->{\\\"Underline\\\"->True}]\)\\n\\nIn  \
tpTensor  the covariant differential  \[Del]  is related to the covariant \
directional derivative  \!\(\*SubscriptBox[\(\[Del]\), \(X\)]\)  by\\n\\n     \
                \!\(\*SubscriptBox[\(\[Del]\), \(X\)]\)Y  =  \
\[LeftAngleBracket] \[Del] Y , X \[RightAngleBracket]    \[LongLeftArrow] The \
tensor slot created by  \[Del]  appears as the \
\!\(\*\\nStyleBox[\\\"last\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"slot\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontSlant->\\\"Italic\\\"]\) in  \[Del] Y , so as to conform \\n      \
                                                   to tensor index notation.  \
Thus,  X  appears to the right of  \[Del] Y  in the  \[LeftAngleBracket] , \
\[RightAngleBracket]  bracket.\\n\\nHaving   \[Del]  create slots on the \
right (rather than the left) is not the choice of many authors, but it is \
actually very sensible \\nbecause it allows one to translate to/from \
component index notation \
\!\(\*\\nStyleBox[\\\"without\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"having\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"to\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"re\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\"-\\\",\\\
nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\"map\\\",\\\
nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"index\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\
\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\"order\\\",\\\
nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\".\\\",\\\
nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)  It is how  \
\[Del]  is \\ndefined in\!\(\*\\nStyleBox[\\\"  \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"Gravitation\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\"  \
\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)(Misner, Thorne & \
Wheeler)\!\(\*\\nStyleBox[\\\",\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\\
nStyleBox[\\\" \\\",\\nFontSlant->\\\"Italic\\\"]\)equation (8.17), page 208. \
\\n \\nTo invert the above relation:  Let { \!\(\*SuperscriptBox[\(e\), \
\(i\)]\) }  be the covector (1-form) basis that is dual to the vector basis { \
\!\(\*SubscriptBox[\(e\), \(j\)]\) }, \\nso that  \[LeftAngleBracket] \
\!\(\*SuperscriptBox[\(e\), \(i\)]\) , \!\(\*SubscriptBox[\(e\), \(j\)]\) \
\[RightAngleBracket] = \!\(\*SubscriptBox[SuperscriptBox[\(\[Delta]\), \
\(i\)], \(j\)]\)   and   \[Delta] =  \!\(\*SubscriptBox[SuperscriptBox[\(\
\[Delta]\), \(i\)], \(j\)]\) \!\(\*SubscriptBox[\(e\), \(i\)]\) \
\[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(\(j\)\(\\\\ \\\\ \)\)]\)  =  \
\!\(\*SubscriptBox[\(e\), \(i\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \
\(\(i\)\(\\\\ \\\\ \)\)]\).  \\nThen,                             \\n         \
         \[Del] Y  =  \[LeftAngleBracket] \[Del] Y, \[Delta] \
\[RightAngleBracket]      \\n                         =  \[LeftAngleBracket] \
\[Del] Y, \!\(\*SubscriptBox[\(e\), \(i\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(i\)]\) \[RightAngleBracket]\\n                  \
       =  \[LeftAngleBracket] \[Del] Y, \!\(\*SubscriptBox[\(e\), \(i\)]\) \
\[RightAngleBracket] \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(i\)]\)\\n   \
                      =  \!\(\*SubscriptBox[\(\[Del]\), SubscriptBox[\(e\), \
\(i\)]]\)Y \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(i\)]\) ,\\n\\nwhich \
would normally be taken as defining  \[Del] Y .  In  tpTensor  an entirely \
equivalent, but computationally simpler, definition of\\n\[Del] Y  is \
implemented which makes use of a braided Leibniz rule, as described below. \
\\n\\nWhile the directional derivative  \!\(\*SubscriptBox[\(\[Del]\), \(X\)]\
\)  satisfies the Leibniz rule,\\n\\n                              \
\!\(\*SubscriptBox[\(\[Del]\), \(X\)]\) ( A \[CircleTimes] B )  =  \
\!\(\*SubscriptBox[\(\[Del]\), \(X\)]\) A  \[CircleTimes]  B   +   A  \
\[CircleTimes]  \!\(\*SubscriptBox[\(\[Del]\), \(X\)]\) B ,\\n                \
                          \\nthis is certainly  \
\!\(\*\\nStyleBox[\\\"not\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"the\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"case\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)  for the covariant differential, \
which must create its derivative slot as the \
\!\(\*\\nStyleBox[\\\"last\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\\nStyleBox[\\\" \
\\\",\\nFontFamily->\\\"DejaVu Sans\\\",\\nFontSlant->\\\"Italic\\\"]\)\!\(\*\
\\nStyleBox[\\\"slot\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\) (not stuck\\nsomewhere in the middle \
of a tensor product, as in the expression  \[Del] A  \[CircleTimes] B ).  To \
move the derivative slot to its correct place, \\ntpTensor evaluates  \[Del]  \
of any tensor product using the rule , \\n\\n                              \
\[Del] ( A \[CircleTimes] B )  =  mvToLast\[VeryThinSpace][ 1 + deg\
\[VeryThinSpace][ A ] , \[Del] A \[CircleTimes] B ]  +  A \[CircleTimes] \
\[Del] B .               [ See:  ?\[VeryThinSpace]\[VeryThinSpace]mvToLast \
]\\n\\nThis is the 'braided Lebniz rule' referred to above, and it leads \
directly to the well known component expression for the \\ncovariant \
derivative in index notation. \\n\\nExample (1).  Let deg [ f ] = 0, and  X  \
be a tensor.  Then the above formula for  \[Del] ( A \[CircleTimes] B )  \
gives  \[Del] ( f X )  =  X \[CircleTimes] \[Del] f  +  f \[Del] X . \\nIf  \
tpTensor can not further evaluate either  \[Del] f  or  \[Del] X ,  then this \
is the expression that is returned. \\n \\nExample (2).  Suppose  X = \
\!\(\*SuperscriptBox[SubscriptBox[SuperscriptBox[\(X\), \(i\)], \(jk\)], \(pq\
\)]\) \!\(\*SubscriptBox[\(e\), \(i\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\
\(e\), \(j\)]\) \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(k\)]\) \
\[CircleTimes] \!\(\*SubscriptBox[\(e\), \(p\)]\) \[CircleTimes] \
\!\(\*SubscriptBox[\(e\), \(q\)]\) ,  where the summations have been fully \
expanded out (because tpTensor \\ndoes not understand Einstein summation \
convention).  Then  tpTensor  would return  \[Del] X  as the (rather large) \
fully expanded sum\\n\\n                                 \[Del] X  =  \
\!\(\*SubscriptBox[SuperscriptBox[SubscriptBox[SuperscriptBox[\(X\), \(i\)], \
\(jk\)], \(pq\)], \(\(;\)\(\\\\ \)\(r\)\)]\) \!\(\*SubscriptBox[\(e\), \(i\)]\
\) \[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(j\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(k\)]\) \[CircleTimes] \!\(\*SubscriptBox[\(e\), \
\(p\)]\) \[CircleTimes] \!\(\*SubscriptBox[\(e\), \(q\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(r\)]\) ,\\n\\nwhere the set of components  \!\(\
\*SubscriptBox[SuperscriptBox[SubscriptBox[SuperscriptBox[\(X\), \(i\)], \(jk\
\)], \(pq\)], \(\(;\)\(\\\\ \)\(r\)\)]\)  of  \[Del] X  is the usual \
'covariant derivative' known from tensor index notation.  In particular, \
\\nthe notation and conventions used by  tpTensor  are such that any \
component  \
\!\(\*SubscriptBox[SuperscriptBox[SubscriptBox[SuperscriptBox[\(X\), \(i\)], \
\(jk\)], \(pq\)], \(\(;\)\(\\\\ \)\(r\)\)]\)  of  \[Del] X  can be directly \
read off as the\\ncoefficient of   \!\(\*SubscriptBox[\(e\), \(i\)]\) \
\[CircleTimes] \!\(\*SuperscriptBox[\(e\), \(j\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(k\)]\) \[CircleTimes] \!\(\*SubscriptBox[\(e\), \
\(p\)]\) \[CircleTimes] \!\(\*SubscriptBox[\(e\), \(q\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(r\)]\)   in the expression for  \[Del] X ,  \
without the need to re-map index order. \\n\\nIn example (2) it is presumed \
that one has already defined connection coefficients  \
\!\(\*SubscriptBox[SuperscriptBox[\(\[Omega]\), \(\(\\\\ \)\(i\)\)], \(\(\\\\ \
\)\(j\\\\ k\)\)]\)  for the dual basis pair  { \!\(\*SubscriptBox[\(e\), \
\(i\)]\) , \!\(\*SuperscriptBox[\(e\), \(i\)]\) } , so that\\ntpTensor knows \
that it can evaluate  \[Del] \!\(\*SubscriptBox[\(e\), \(j\)]\)  and  \[Del] \
\!\(\*SuperscriptBox[\(e\), \(i\)]\)  as \\n\\n                               \
           \[Del] \!\(\*SubscriptBox[\(e\), \(j\)]\)  =     \
\!\(\*SuperscriptBox[\(\[Omega]\), \(\(\\\\ \)\(i\)\)]\)\!\(\*SubscriptBox[\(\
\\\\ \), \(j\\\\ k\)]\)  \!\(\*SubscriptBox[\(e\), \(i\)]\) \[CircleTimes] \!\
\(\*SuperscriptBox[\(e\), \(k\)]\) , \\n                                      \
    \[Del] \!\(\*SuperscriptBox[\(e\), \(i\)]\)  =  - \
\!\(\*SubscriptBox[SuperscriptBox[\(\[Omega]\), \(\(\\\\ \)\(i\)\)], \(\(\\\\ \
\)\(j\\\\ k\)\)]\)  \!\(\*SuperscriptBox[\(e\), \(j\)]\) \[CircleTimes] \
\!\(\*SuperscriptBox[\(e\), \(k\)]\) . \\n\\nFurthermore, the index notation \
usually presumes working in a coordinate basis. So in example (2), one might \
suppose\\nthat   { \!\(\*SubscriptBox[\(e\), \(i\)]\) , \!\(\*SuperscriptBox[\
\(e\), \(i\)]\) }  =  { \!\(\*SubscriptBox[\(\[PartialD]\), \
SuperscriptBox[\(x\), \(i\)]]\) , \!\(\*SuperscriptBox[\(dx\), \(\(i\)\(\\\\ \
\\\\ \)\)]\)} ,   in which case   \
\!\(\*SubscriptBox[SuperscriptBox[\(\[Omega]\), \(\(\\\\ \)\(i\)\)], \(\(\\\\ \
\)\(j\\\\ k\)\)]\)  \[Equal]  \!\(\*SubscriptBox[SuperscriptBox[\(\
\[CapitalGamma]\), \(\(\\\\ \)\(i\)\)], \(\(\\\\ \)\(j\\\\ k\)\)]\)   are the \
Christoffel symbols associated with { \!\(\*SuperscriptBox[\(x\), \(i\)]\) } \
coordinates.\\n\\ntpTensor will calculate  \[Del]  in any frame,  using \
whatever information is available.  Thus, if  \[Del] \
\!\(\*SubscriptBox[\(e\), \(j\)]\)  and  \[Del] \!\(\*SuperscriptBox[\(e\), \
\(i\)]\)  had not yet been assigned\\nvalues, then factors of  \[Del] \
\!\(\*SubscriptBox[\(e\), \(j\)]\)  and  \[Del] \!\(\*SuperscriptBox[\(e\), \
\(i\)]\)  would have appeared explicitly in the result for  \[Del] X . \
\\n\\nSee also :  ? mvToLast ,   ? connection\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/Del"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.656031666805484*^9},
 CellTags->"Info-31ae26fa-b304-4f32-ab3e-d92d2114dc61"]
}, Open  ]],

Cell["Aliases for getting information:", "Text",
 CellChangeTimes->{{3.479803259031643*^9, 3.479803285938166*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"gradient", "::", "usage"}], " ", "=", " ", 
   "\"\<?\[VeryThinSpace]gradient\n\nFor the operator  \[Del]\[ThinSpace],  \
see:   ? Del\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479803294162076*^9, 3.479803373462582*^9}, {
  3.479907782233929*^9, 3.479907806981434*^9}, {3.480171579029096*^9, 
  3.480171648919052*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "gradient"}]], "Input",
 CellChangeTimes->{{3.480171604344781*^9, 3.480171612995386*^9}}],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]gradient\\n\\nFor the operator  \[Del]\
\[ThinSpace],  see:   ? Del\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876569866185*^9},
 CellTags->"Info3651912569-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Braiding operators:   rev[ ],   mv[ ],   mvInverse[ ],  mvCyclic[ ],  \
mvToLast[ ],  mvSignature[ ]\
\>", "Subsection",
 CellChangeTimes->{
  3.478620837814964*^9, {3.478620899757682*^9, 3.478621098243444*^9}, 
   3.478806712706863*^9, {3.479798849824918*^9, 3.479798862814722*^9}, 
   3.614467387215568*^9, {3.6148225688679857`*^9, 3.614822581078073*^9}, {
   3.614827656671421*^9, 3.614827676639804*^9}, {3.614836753074428*^9, 
   3.6148367629520206`*^9}, 3.6538619054829817`*^9, 3.6538619727245083`*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"rev", "::", "usage"}], "=", 
   "\"\<?\[VeryThinSpace]rev\n\nrev [ X ]   reverses the product order of the \
(degree 1) factors in the tensor products that appear in  X .\nReversal \
generalizes the notion of transpose for a matrix. \n\nThe following identity \
holds for tensors  A  and  B  of arbitrary degree,\n           \n             \
     rev [ A \[CircleTimes] B ]  =  rev [ B ] \[CircleTimes] rev [ A ] .\n\n\
If  deg[ X ] = 0  (scalar),  or  deg[ X ] = 1  (vector),  then  rev[ X ] = X \
.\n\nSee also:   ? sym ,  ? alt ,  ? mvToLast\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479798885074822*^9, 3.479799162319225*^9}, {
   3.479814561391759*^9, 3.479814577350773*^9}, {3.479814616768502*^9, 
   3.479814640431691*^9}, {3.479814724639704*^9, 3.479814739175512*^9}, {
   3.47981479163973*^9, 3.47981484384014*^9}, {3.479814906000585*^9, 
   3.479814917588495*^9}, 3.479814968843236*^9, {3.479815021262509*^9, 
   3.479815140658873*^9}, {3.479815178470038*^9, 3.479815213893286*^9}, {
   3.47981524501906*^9, 3.479815315940275*^9}, 3.479907939332852*^9, {
   3.480171682304297*^9, 3.480171718054323*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "rev"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]rev\\n\\nrev [ X ]   reverses the product \
order of the (degree 1) factors in the tensor products that appear in  X \
.\\nReversal generalizes the notion of transpose for a matrix. \\n\\nThe \
following identity holds for tensors  A  and  B  of arbitrary degree,\\n      \
     \\n                  rev [ A \[CircleTimes] B ]  =  rev [ B ] \
\[CircleTimes] rev [ A ] .\\n\\nIf  deg[ X ] = 0  (scalar),  or  deg[ X ] = 1 \
 (vector),  then  rev[ X ] = X .\\n\\nSee also:   ? sym ,  ? alt ,  ? \
mvToLast\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765699354753`*^9},
 CellTags->"Info3651912569-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mv", "::", "usage"}], " ", "=", 
   "\"\<?\[VeryThinSpace]mv\n\nmv[ n ][ X ]   returns the tensor obtained by \
rearranging slots of  X  into the arrangement specified by the sequence or \
list n.\n\nExample:  Suppose  v1, v2, v3, v4, v5  are vectors.  Then  mv[ 3, \
1, 2, 5, 4 ][ v1 \[CircleTimes] v2 \[CircleTimes] v3 \[CircleTimes] v4 \
\[CircleTimes] v5 ] = v3 \[CircleTimes] v1 \[CircleTimes] v2 \[CircleTimes] \
v5 \[CircleTimes] v4.\n\nmv[ n ]  can be used as an operator. Eg,  mv[ 2, 1, \
3 ][ mv[ 1, 3, 2 ] ]  evaluates to  mv[ 3, 1, 2 ].    \n\nSee also:  ? Sym, \
Alt, sym, alt, mvToLast \>\""}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479802176873717*^9, 3.479802192883014*^9}, {
   3.479802231586899*^9, 3.479802645762222*^9}, {3.479802680367134*^9, 
   3.479802815869928*^9}, {3.479802867485743*^9, 3.479802943889657*^9}, {
   3.479803045351962*^9, 3.479803235100618*^9}, {3.47981221636737*^9, 
   3.479812252133905*^9}, {3.47981229150148*^9, 3.479812534364732*^9}, {
   3.479812589441379*^9, 3.479812630241258*^9}, 3.47981266061813*^9, {
   3.47981269876934*^9, 3.479812736745342*^9}, {3.479812773674343*^9, 
   3.479812854020662*^9}, {3.479812921491931*^9, 3.479813055765536*^9}, {
   3.479813103570985*^9, 3.479813300258299*^9}, 3.479907960947488*^9, {
   3.480171745807012*^9, 3.480171799809764*^9}, {3.480171842638634*^9, 
   3.480171857819403*^9}, {3.480171908066857*^9, 3.480171940374993*^9}, {
   3.480171993135666*^9, 3.480172005848111*^9}, {3.480172046515363*^9, 
   3.480172165112827*^9}, {3.480172227551811*^9, 3.480172241782318*^9}, {
   3.614820207112872*^9, 3.614820490982016*^9}, {3.6148205234116783`*^9, 
   3.6148206084897327`*^9}, {3.6148206413933353`*^9, 3.614820839628601*^9}, {
   3.614820874856756*^9, 3.614820989064726*^9}, {3.614821024723814*^9, 
   3.614821025486103*^9}, {3.653855536670765*^9, 3.6538557826508427`*^9}, {
   3.6538558661991158`*^9, 3.653855912742078*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mv"}]], "Input",
 CellChangeTimes->{{3.614821004860258*^9, 3.614821006134988*^9}}],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]mv\\n\\nmv[ n ][ X ]   returns the tensor \
obtained by rearranging slots of  X  into the arrangement specified by the \
sequence or list n.\\n\\nExample:  Suppose  v1, v2, v3, v4, v5  are vectors.  \
Then  mv[ 3, 1, 2, 5, 4 ][ v1 \[CircleTimes] v2 \[CircleTimes] v3 \
\[CircleTimes] v4 \[CircleTimes] v5 ] = v3 \[CircleTimes] v1 \[CircleTimes] \
v2 \[CircleTimes] v5 \[CircleTimes] v4.\\n\\nmv[ n ]  can be used as an \
operator. Eg,  mv[ 2, 1, 3 ][ mv[ 1, 3, 2 ] ]  evaluates to  mv[ 3, 1, 2 ].   \
 \\n\\nSee also:  ? Sym, Alt, sym, alt, mvToLast \"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6538559378158283`*^9},
 CellTags->"Info3653895537-2351845"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mvInverse", "::", "usage"}], "=", 
   "\"\<mvInverse[ n ]  evaluates to the mv[ ] operator that is inverse to  \
mv[ n ].\>\""}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.614836788389469*^9, 3.614836888847918*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mvInverse"}]], "Input",
 CellChangeTimes->{3.614836883226233*^9}],

Cell[BoxData[
 StyleBox["\<\"mvInverse[ n ]  evaluates to the mv[ ] operator that is \
inverse to  mv[ n ].\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765703139477`*^9},
 CellTags->"Info3651912570-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mvCyclic", "::", "usage"}], "=", 
   "\"\<mvCyclic[ n ]   evaluates to a  mv[ ]  operator for the cyclic \
rearrangement of slots n.\n\nExample:   mvCyclic[ 1, 3, 5 ]  evaluates to  \
mv[ 3, 2, 5, 4, 1 ].\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.614821066016026*^9, 3.614821069537507*^9}, {
  3.614822280018199*^9, 3.61482230912901*^9}, {3.614822370220852*^9, 
  3.6148225189122972`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mvCyclic"}]], "Input",
 CellChangeTimes->{{3.6148210528806267`*^9, 3.614821055777213*^9}}],

Cell[BoxData[
 StyleBox["\<\"mvCyclic[ n ]   evaluates to a  mv[ ]  operator for the cyclic \
rearrangement of slots n.\\n\\nExample:   mvCyclic[ 1, 3, 5 ]  evaluates to  \
mv[ 3, 2, 5, 4, 1 ].\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876570379846*^9},
 CellTags->"Info3651912570-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mvToLast", "::", "usage"}], " ", "=", 
   "\"\<?\[VeryThinSpace]mvToLast\n\nmvToLast[ n , X ]   returns the tensor \
obtained by moving the nth slot of  X  to become the last slot of  X. \n\
mvToLast is a special case of  mv[ perm ][ X ]. \n\nExample:  Suppose  deg\
\[VeryThinSpace][ a ] = 2 ,  deg\[VeryThinSpace][ b ] = 1 ,   deg\
\[VeryThinSpace][ c ] = 3 .  Then  mvToLast\[VeryThinSpace][ 3 , a \
\[CircleTimes] b \[CircleTimes] c ] \nevaluates to  a \[CircleTimes] c \
\[CircleTimes] b ,  whereas  mvToLast\[VeryThinSpace][ 2 , a \[CircleTimes] b \
\[CircleTimes] c ]   remains un-simplified because slot 2 belongs \nto the \
factor  a,  so is 'stuck' where it is. \n\nmvToLast [ n , X ]  is a \!\(\*
StyleBox[\"braiding\",
FontFamily->\"DejaVu Sans\",
FontSlant->\"Italic\"]\) operator and is used to evaluate  \[Del]( X \
\[CircleTimes] Y ) by the braided Liebnitz rule.  \nFor further information \
see  ?\[VeryThinSpace]\[VeryThinSpace]\[VeryThinSpace]Del .  \n\nSee also:   \
? Del \>\""}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479802176873717*^9, 3.479802192883014*^9}, {
   3.479802231586899*^9, 3.479802645762222*^9}, {3.479802680367134*^9, 
   3.479802815869928*^9}, {3.479802867485743*^9, 3.479802943889657*^9}, {
   3.479803045351962*^9, 3.479803235100618*^9}, {3.47981221636737*^9, 
   3.479812252133905*^9}, {3.47981229150148*^9, 3.479812534364732*^9}, {
   3.479812589441379*^9, 3.479812630241258*^9}, 3.47981266061813*^9, {
   3.47981269876934*^9, 3.479812736745342*^9}, {3.479812773674343*^9, 
   3.479812854020662*^9}, {3.479812921491931*^9, 3.479813055765536*^9}, {
   3.479813103570985*^9, 3.479813300258299*^9}, 3.479907960947488*^9, {
   3.480171745807012*^9, 3.480171799809764*^9}, {3.480171842638634*^9, 
   3.480171857819403*^9}, {3.480171908066857*^9, 3.480171940374993*^9}, {
   3.480171993135666*^9, 3.480172005848111*^9}, {3.480172046515363*^9, 
   3.480172165112827*^9}, {3.480172227551811*^9, 3.480172241782318*^9}, {
   3.653854841416093*^9, 3.6538551094607286`*^9}, {3.65385514909501*^9, 
   3.653855240197645*^9}, {3.653855274795957*^9, 3.653855413679307*^9}, {
   3.653855995768594*^9, 3.653855997000289*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mvToLast   "}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]mvToLast\\n\\nmvToLast[ n , X ]   returns the \
tensor obtained by moving the nth slot of  X  to become the last slot of  X. \
\\nmvToLast is a special case of  mv[ perm ][ X ]. \\n\\nExample:  Suppose  \
deg\[VeryThinSpace][ a ] = 2 ,  deg\[VeryThinSpace][ b ] = 1 ,   deg\
\[VeryThinSpace][ c ] = 3 .  Then  mvToLast\[VeryThinSpace][ 3 , a \
\[CircleTimes] b \[CircleTimes] c ] \\nevaluates to  a \[CircleTimes] c \
\[CircleTimes] b ,  whereas  mvToLast\[VeryThinSpace][ 2 , a \[CircleTimes] b \
\[CircleTimes] c ]   remains un-simplified because slot 2 belongs \\nto the \
factor  a,  so is 'stuck' where it is. \\n\\nmvToLast [ n , X ]  is a \
\!\(\*\\nStyleBox[\\\"braiding\\\",\\nFontFamily->\\\"DejaVu \
Sans\\\",\\nFontSlant->\\\"Italic\\\"]\) operator and is used to evaluate  \
\[Del]( X \[CircleTimes] Y ) by the braided Liebnitx rule.  \\nFor further \
information see  ?\[VeryThinSpace]\[VeryThinSpace]\[VeryThinSpace]Del .  \
\\n\\nSee also:   ? Del \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.653855441282852*^9},
 CellTags->"Info3653895041-2351845"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mvSignature", "::", "usage"}], "=", 
   "\"\<mvSignature[ n ]  returns  \[PlusMinus] 1,  according to the \
signature of the permutation corresponding to mv[ n ].\n\nThe argument  n  \
can be given as a list, sequence, or mv operator. \>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61312307226548*^9, 3.613123096149675*^9}, {
  3.613123475160454*^9, 3.6131235491497107`*^9}, {3.6132618575969877`*^9, 
  3.613261918546074*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mvSignature"}]], "Input",
 CellChangeTimes->{{3.613123531049213*^9, 3.613123533744779*^9}}],

Cell[BoxData[
 StyleBox["\<\"mvSignature[ n ]  returns  \[PlusMinus] 1,  according to the \
signature of the permutation corresponding to mv[ n ].\\n\\nThe argument  n  \
can be given as a list, sequence, or mv operator. \"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6518765722157917`*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symmetry operators:   sym[ ],  Sym[ ],  alt[ ],  Alt[ ]", "Subsection",
 CellChangeTimes->{
  3.478620837814964*^9, {3.478620899757682*^9, 3.478621098243444*^9}, 
   3.478806712706863*^9, {3.479798849824918*^9, 3.479798862814722*^9}, 
   3.614467387215568*^9, {3.6148225688679857`*^9, 3.614822581078073*^9}, {
   3.614824564351857*^9, 3.614824607792248*^9}, 3.614827783473072*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "sym"}]], "Input"],

Cell[BoxData[
 RowBox[{
  StyleBox[
   RowBox[{"Information", "::", "notfound"}], "MessageName"], ":", 
  " ", "\<\"Symbol \[NoBreak]\\!\\(\\\"sym\\\"\\)\[NoBreak] not found. \\!\\(\
\\*ButtonBox[\\\"\[RightSkeleton]\\\", ButtonStyle->\\\"Link\\\", \
ButtonFrame->None, ButtonData:>\\\"paclet:ref/message/General/notfound\\\", \
ButtonNote -> \\\"Information::notfound\\\"]\\)\"\>"}]], "Message", "MSG",
 CellChangeTimes->{3.65187657067135*^9}]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alt", "::", "usage"}], " ", "=", " ", 
   "\"\<?\[VeryThinSpace]alt\n\nalt[ X ]   returns the alternating ( fully \
anti-symmetric ) part of X .\n\nExample:   If  X = a \[CircleTimes] b \
\[CircleTimes] c   then  \n\n         alt[ X ]  =  1/3!  ( a \[CircleTimes] b \
\[CircleTimes] c \n                                 - a \[CircleTimes] c \
\[CircleTimes] b \n                                 + c \[CircleTimes] a \
\[CircleTimes] b \n                                 - c \[CircleTimes] b \
\[CircleTimes] a \n                                 + b \[CircleTimes] c \
\[CircleTimes] a \n                                 - b \[CircleTimes] a \
\[CircleTimes] c ) \n\n[ Not well coded at the moment :  defined only for \
deg[ X ] \[LessEqual] 4 , left unevaluated otherwise. ] \n\nSee also:   ? sym \
,  ? rev\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479813375006896*^9, 3.479813381324756*^9}, {
   3.479813445596443*^9, 3.47981407126111*^9}, {3.479814107437268*^9, 
   3.479814313810984*^9}, 3.479814448480321*^9, {3.479814507609791*^9, 
   3.47981450962533*^9}, 3.479913742482691*^9, {3.48017231234919*^9, 
   3.480172352324715*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "alt"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]alt\\n\\nalt[ X ]   returns the alternating ( \
fully anti-symmetric ) part of X .\\n\\nExample:   If  X = a \[CircleTimes] b \
\[CircleTimes] c   then  \\n\\n         alt[ X ]  =  1/3!  ( a \[CircleTimes] \
b \[CircleTimes] c \\n                                 - a \[CircleTimes] c \
\[CircleTimes] b \\n                                 + c \[CircleTimes] a \
\[CircleTimes] b \\n                                 - c \[CircleTimes] b \
\[CircleTimes] a \\n                                 + b \[CircleTimes] c \
\[CircleTimes] a \\n                                 - b \[CircleTimes] a \
\[CircleTimes] c ) \\n\\n[ Not well coded at the moment :  defined only for \
deg[ X ] \[LessEqual] 4 , left unevaluated otherwise. ] \\n\\nSee also:   ? \
sym ,  ? rev\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876570761507*^9},
 CellTags->"Info3651912570-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell[TextData[{
 "The contraction operators:  ",
 Cell[BoxData[
  FormBox[
   SubscriptBox[
    RowBox[{"\[LeftAngleBracket]", "  ", "\[RightAngleBracket]"}], 
    RowBox[{"a", ",", "b"}]], TraditionalForm]], "None"],
 "  and  \[LeftAngleBracket] , \[RightAngleBracket]"
}], "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
   3.467120202756169*^9, 3.467120227661777*^9}, {3.467121129569379*^9, 
   3.467121156634774*^9}, {3.467121644582208*^9, 3.467121684332472*^9}, {
   3.467126548768611*^9, 3.467126560140989*^9}, {3.467126913123894*^9, 
   3.46712691617785*^9}, {3.467198505051484*^9, 3.467198515544077*^9}, {
   3.467198638607828*^9, 3.467198678182335*^9}, {3.46728810114199*^9, 
   3.467288103412177*^9}, {3.46729806668237*^9, 3.467298070130729*^9}, {
   3.467366220056041*^9, 3.467366231775698*^9}, {3.477593909994389*^9, 
   3.477593937634802*^9}, {3.477774233553933*^9, 3.47777427363809*^9}, 
   3.477774306207101*^9, {3.478525276227503*^9, 3.478525489860358*^9}, {
   3.478543633707505*^9, 3.478543650738982*^9}, {3.478806640101739*^9, 
   3.478806645027829*^9}, {3.614648993454513*^9, 3.614648999480033*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AngleBracket", "::", "usage"}], "=", 
   "\"\<? AngleBracket\n \nThe inner product and contraction operator is  \
AngleBracket[ ]  and its subscripted version,\n\n      \[LeftAngleBracket] X, \
Y, Z, .... \[RightAngleBracket]    and    \[LeftAngleBracket] X \
\!\(\*SubscriptBox[\(\[RightAngleBracket]\), \(\(\\\ \)\(a, b\)\)]\)\n\n\
\!\(TraditionalForm\`\(\(\[LeftAngleBracket]\)\(\\\ \)\)\)X, Y \
\[RightAngleBracket] is input from the keyboard as   Esc < Esc  X, Y  Esc > \
Esc .\nThe subscripts  a,b  are input as   Ctrl_  a, b  Ctrl<Space> . \n\n\
Contraction on slot-positions { a, b } of the tensor  X  is denoted \
\[LeftAngleBracket] X\!\(TraditionalForm\`\*SubscriptBox[\(\(\\\ \\\ \)\(\
\[RightAngleBracket]\)\), \(\(\\\ \)\(a, \\\ \\\ b\)\)]\).\nHere \
a\[NotEqual]b, and a,b must be in the range  1 ,..., deg [ X ] .\nThe order \
of {a,b} is irrelevant on input, and is converted to  a < b  on output.\n\n\
The 2nd usage \[LeftAngleBracket] X, Y \[RightAngleBracket], is equivalent to \
(but may be faster than) the following expression,\n   \n                     \
 \[LeftAngleBracket] X,  Y \[RightAngleBracket] = \[LeftAngleBracket] X \
\[CircleTimes] Y\!\(TraditionalForm\`\*SubscriptBox[\(\(\\\ \)\(\
\[RightAngleBracket]\)\), \(\(\\\ \)\(deg\\\ [X]\\\ , \\\ \\\ 1\\\  + \\\ \\\ \
deg\\\ [X]\)\)]\)             Ie., the last slot of X is contracted with the \
first slot of Y.\n\nThis is extended to  \[LeftAngleBracket] X, Y, Z, ...\
\[RightAngleBracket]  in the obvious way,  last slot of Y contracted with the \
first slot of  Z  etc.\n\nThe contraction operator can be safely used on any \
pair of slots in any tensor. If, for example, slots  { a, b } \nare occupied \
by vectors, then the appropriate duality relations (if known) or metric \
coefficients (if known) will \nbe introduced. Otherwise, the contraction will \
simply remain in an unevaluated form. \n\nDuality and metric relations are \
introduced by assigning values to inner products, eg.,   \[LeftAngleBracket] \
u , v \[RightAngleBracket]  =  -1 .\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.614484145074233*^9, 3.614484181986968*^9}, 
   3.614484245754545*^9, 3.614484298459612*^9, {3.614484360009042*^9, 
   3.6144844058732433`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AngleBracket"}]], "Input",
 CellChangeTimes->{3.6144833492120037`*^9}],

Cell[BoxData[
 RowBox[{
  StyleBox["\<\"? AngleBracket\\n \\nThe inner product and contraction \
operator is  AngleBracket[ ]  and its subscripted version,\\n\\n      \
\[LeftAngleBracket] X, Y, Z, .... \[RightAngleBracket]    and    \
\[LeftAngleBracket] X \!\(\*SubscriptBox[\(\[RightAngleBracket]\), \(\(\\\\ \
\)\(a, b\)\)]\)\\n\\n\!\(TraditionalForm\`\(\(\[LeftAngleBracket]\)\(\\\\ \
\)\)\)X, Y \[RightAngleBracket] is input from the keyboard as   Esc < Esc  X, \
Y  Esc > Esc .\\nThe subscripts  a,b  are input as   Ctrl_  a, b  Ctrl<Space> \
. \\n\\nContraction on slot-positions { a, b } of the tensor  X  is denoted \
\[LeftAngleBracket] X\!\(TraditionalForm\`\*SubscriptBox[\(\(\\\\ \\\\ \)\(\
\[RightAngleBracket]\)\), \(\(\\\\ \)\(a, \\\\ \\\\ b\)\)]\).\\nHere a\
\[NotEqual]b, and a,b must be in the range  1 ,..., deg [ X ] .\\nThe order \
of {a,b} is irrelevant on input, and is converted to  a < b  on \
output.\\n\\nThe 2nd usage \[LeftAngleBracket] X, Y \[RightAngleBracket], is \
equivalent to (but may be faster than) the following expression,\\n   \\n     \
                 \[LeftAngleBracket] X,  Y \[RightAngleBracket] = \
\[LeftAngleBracket] X \[CircleTimes] \
Y\!\(TraditionalForm\`\*SubscriptBox[\(\(\\\\ \)\(\[RightAngleBracket]\)\), \
\(\(\\\\ \)\(deg\\\\ [X]\\\\ , \\\\ \\\\ 1\\\\  + \\\\ \\\\ deg\\\\ \
[X]\)\)]\)             Ie., the last slot of X is contracted with the first \
slot of Y.\\n\\nThis is extended to  \[LeftAngleBracket] X, Y, Z, ...\
\[RightAngleBracket]  in the obvious way,  last slot of Y contracted with the \
first slot of  Z  etc.\\n\\nThe contraction operator can be safely used on \
any pair of slots in any tensor. If, for example, slots  { a, b } \\nare \
occupied by vectors, then the appropriate duality relations (if known) or \
metric coefficients (if known) will \\nbe introduced. Otherwise, the \
contraction will simply remain in an unevaluated form. \\n\\nDuality and \
metric relations are introduced by assigning values to inner products, eg.,   \
\[LeftAngleBracket] u , v \[RightAngleBracket]  =  -1 .\"\>", "MSG"], 
  "\[NonBreakingSpace]", 
  ButtonBox[
   StyleBox["\[RightSkeleton]", "SR"],
   Active->True,
   BaseStyle->"Link",
   ButtonData->"paclet:ref/AngleBracket"]}]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876570823042*^9},
 CellTags->"Info3651912570-5027707"]
}, Open  ]],

Cell["Aliases for getting information...", "Text",
 CellChangeTimes->{{3.478521348524732*^9, 3.478521367997245*^9}, {
   3.478521995402616*^9, 3.478522005330361*^9}, {3.478522082794157*^9, 
   3.478522380056022*^9}, 3.478522415777293*^9, {3.478522542569283*^9, 
   3.478522547072749*^9}, {3.478522672464452*^9, 3.47852282811114*^9}, {
   3.478522866720887*^9, 3.478522910998042*^9}, {3.478523013006232*^9, 
   3.478523063845325*^9}, {3.478523294797873*^9, 3.478523315180198*^9}, {
   3.478523421036623*^9, 3.478523455373287*^9}, {3.478523509195832*^9, 
   3.478523578355614*^9}, {3.478523821778841*^9, 3.478524070826569*^9}, {
   3.478524122176394*^9, 3.478524185184386*^9}, {3.478524340830039*^9, 
   3.478524400607762*^9}, {3.478524843318779*^9, 3.478525228555697*^9}, {
   3.478525654133307*^9, 3.47852582850393*^9}, {3.47852588911241*^9, 
   3.47852622600454*^9}, {3.478526429295789*^9, 3.478526440324654*^9}, {
   3.478526480332812*^9, 3.478526571756737*^9}, {3.478526603068721*^9, 
   3.478526606652022*^9}, {3.478795267077744*^9, 3.478795352817927*^9}, {
   3.479815948023344*^9, 3.479815959822747*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"dotprod", "::", "usage"}], "=", 
   RowBox[{"AngleBracket", "::", "usage"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.542600318719792*^9, 3.542600327482901*^9}, 
   3.54260056797023*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"contraction", "::", "usage"}], " ", "=", 
   RowBox[{"AngleBracket", "::", "usage"}]}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.478804904040054*^9, 3.478804921484441*^9}, {
   3.478804960152279*^9, 3.478804971761863*^9}, 3.479815931382033*^9, {
   3.479815965771555*^9, 3.479815997962355*^9}, 3.479915884684575*^9, {
   3.480159878271962*^9, 3.480159990459505*^9}, {3.480175117906023*^9, 
   3.480175169990697*^9}, {3.542600459638035*^9, 3.54260048017731*^9}, 
   3.542600571010215*^9}]
}, Closed]],

Cell[CellGroupData[{

Cell["Taking Series[ ]  ---    Series[ ]   of   \[LeftAngleBracket] , \
\[RightAngleBracket]  and  \[CircleTimes]", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
  3.467120202756169*^9, 3.467120227661777*^9}, {3.467121129569379*^9, 
  3.467121156634774*^9}, {3.467121644582208*^9, 3.467121684332472*^9}, {
  3.48042476399629*^9, 3.480424778951466*^9}, {3.480424840490856*^9, 
  3.480424892398905*^9}, {3.480425254979428*^9, 3.480425273632887*^9}, {
  3.542597889881175*^9, 3.542597952866296*^9}, {3.543023258980397*^9, 
  3.543023265027974*^9}, {3.543023316531806*^9, 3.543023335075959*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"PolyToSeries", "::", "usage"}], "=", 
   "\"\<? PolyToSeries\n\nPolyToSeries\[VeryThinSpace][ p , x , n ]   is a \
fast way to convert a polynomial to a series. \n                            \n\
The result is the series for  p  with error term  O\[VeryThinSpace][ x \
\!\(\*SuperscriptBox[\(]\), \(\(\\\ \)\(n\[VeryThinSpace] + \[VeryThinSpace]1\
\)\)]\)\[VeryThinSpace].  That is\[VeryThinSpace],     \n                     \
       \n                       PolyToSeries\[VeryThinSpace][ p , x , n ]   \
\[Equal]   Series\[VeryThinSpace][ p , {\[VeryThinSpace]x , 0, n\
\[VeryThinSpace]} ]\[VeryThinSpace]\[VeryThinSpace] ,\n\nbut it can be a lot \
faster than  Series[ ]  if  p  is a large expression. \nThe 3rd argument  n  \
is optional,  with default value being  n = Exponent\[VeryThinSpace][ p , x ]\
\[VeryThinSpace].\n\nIf  p  is not polynomial in  x  then  PolyToSeries[ ]  \
aborts with an error message.\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.543025402716173*^9, 3.543025556657363*^9}, {
   3.543025598257506*^9, 3.5430258010921926`*^9}, {3.543026473095201*^9, 
   3.543026624010388*^9}, {3.5430266576106157`*^9, 3.543026677274796*^9}, {
   3.543026739052165*^9, 3.543026768191766*^9}, {3.543026798621428*^9, 
   3.5430270267928667`*^9}, {3.543027059469124*^9, 3.543027060237031*^9}, {
   3.5430270967168627`*^9, 3.5430272353096037`*^9}, {3.543027290225456*^9, 
   3.543027318783909*^9}, {3.5430273522120733`*^9, 3.543027359460145*^9}, 
   3.5430273973421497`*^9, {3.543027446609046*^9, 3.543027566593341*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "PolyToSeries"}]], "Input",
 CellChangeTimes->{3.54302668398253*^9}],

Cell[BoxData[
 StyleBox["\<\"? PolyToSeries\\n\\nPolyToSeries\[VeryThinSpace][ p , x , n ]  \
 is a fast way to convert a polynomial to a series. \\n                       \
     \\nThe result is the series for  p  with error term  O\[VeryThinSpace][ \
x \!\(\*SuperscriptBox[\(]\), \(\(\\\\ \)\(n\[VeryThinSpace] + \
\[VeryThinSpace]1\)\)]\)\[VeryThinSpace].  That is\[VeryThinSpace],     \\n   \
                         \\n                       PolyToSeries\
\[VeryThinSpace][ p , x , n ]   \[Equal]   Series\[VeryThinSpace][ p , {\
\[VeryThinSpace]x , 0, n\[VeryThinSpace]} ]\[VeryThinSpace]\[VeryThinSpace] ,\
\\n\\nbut it can be a lot faster than  Series[ ]  if  p  is a large \
expression. \\nThe 3rd argument  n  is optional,  with default value being  n \
= Exponent\[VeryThinSpace][ p , x ]\[VeryThinSpace].\\n\\nIf  p  is not \
polynomial in  x  then  PolyToSeries[ ]  aborts with an error \
message.\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876570895562*^9},
 CellTags->"Info3651912570-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Series products  ---    \[LeftAngleBracket] , \[RightAngleBracket]  and \
 \[CircleTimes]  of   SeriesData[ ]", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
  3.467120202756169*^9, 3.467120227661777*^9}, {3.467121129569379*^9, 
  3.467121156634774*^9}, {3.467121644582208*^9, 3.467121684332472*^9}, {
  3.48042476399629*^9, 3.480424778951466*^9}, {3.480424840490856*^9, 
  3.480424892398905*^9}, {3.480425254979428*^9, 3.480425273632887*^9}, {
  3.542597889881175*^9, 3.542597952866296*^9}, {3.5430253588252296`*^9, 
  3.543025361406033*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"DependsQ", "::", "usage"}], "=", 
   "\"\<? DependsQ\n\nDependsQ [ y , x ]  is the same as  !\[InvisibleComma]\
\[VeryThinSpace]FreeQ\[VeryThinSpace][ y , x ]\[VeryThinSpace].\n\>\""}], 
  ";"}]], "Input",
 CellChangeTimes->{{3.5426008325165777`*^9, 3.5426010358669243`*^9}, 
   3.542602427441389*^9, {3.543265978350485*^9, 3.543265981566675*^9}, {
   3.543266796914919*^9, 3.5432668184815903`*^9}, {3.5432668777472486`*^9, 
   3.543266928096328*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "DependsQ"}]], "Input",
 CellChangeTimes->{3.542601028210038*^9, 3.543265982344535*^9}],

Cell[BoxData[
 StyleBox["\<\"? DependsQ\\n\\nDependsQ [ y , x ]  is the same as  !\
\[InvisibleComma]\[VeryThinSpace]FreeQ\[VeryThinSpace][ y , x ]\
\[VeryThinSpace].\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.65187657096174*^9},
 CellTags->"Info3651912570-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SeriesProduct", "::", "usage"}], "=", 
   "\"\<? SeriesProduct\n\nSeriesProduct\[VeryThinSpace][ s1 , s2 , p ]  \
returns the expanded product series  p\[VeryThinSpace][ s1, s2 ]\
\[VeryThinSpace]  provided at least \none of  s1  or  s2  is a series.  Here  \
p[ , ]  is the product to be used.\n\nIf neither  s1  or  s2  is a series \
then  SeriesProduct\[VeryThinSpace][ s1 , s2 , p ]  returns unevaluated.\n\n\
Eg.   Let    \n                a = a0 + a1 \[CurlyEpsilon] + \
O\[VeryThinSpace][\[VeryThinSpace]\[CurlyEpsilon]\[VeryThinSpace]\!\(\*\
SuperscriptBox[\(]\), \(2\)]\)\n                b = b0 + b1 \[CurlyEpsilon] + \
O\[VeryThinSpace][\[VeryThinSpace]\[CurlyEpsilon]\[VeryThinSpace]\!\(\*\
SuperscriptBox[\(]\), \(2\)]\)\n\n      then  SeriesProduct [ a , b , p ]  \
returns  \n      \n                p\[VeryThinSpace][ a0 , b0 ]  +  ( p\
\[VeryThinSpace][ a0 , b1 ] + p\[VeryThinSpace][ a1 , b0 ] ) \[CurlyEpsilon]  \
 +  O\[VeryThinSpace][\[VeryThinSpace]\[CurlyEpsilon]\[VeryThinSpace]\!\(\*\
SuperscriptBox[\(]\), \(2\)]\)\n\[VeryThinSpace]\nA typical user will never \
need this function. It is used internally to define series expansions \nfor   \
\[LeftAngleBracket] s1 , s2 \[RightAngleBracket]  and   s1 \[CircleTimes] s2  \
 (for  p = AngleBracket  and  p = CircleTimes  respectively ).\n\nIf  p = \
Times ,  then   SeriesProduct\[VeryThinSpace][ s1 , s2 , p ]   is the same as \
  s1\[VeryThinSpace]s2 .\n\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.542602460781146*^9, 3.5426025867655487`*^9}, {
   3.542602655294635*^9, 3.5426030307604303`*^9}, {3.542603088730937*^9, 
   3.5426033437079887`*^9}, {3.542603460578517*^9, 3.542603755488134*^9}, {
   3.542603857555978*^9, 3.542604098466681*^9}, {3.5426041286110983`*^9, 
   3.542604162629737*^9}, 3.542604209800699*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SeriesProduct"}]], "Input",
 CellChangeTimes->{3.54260297845984*^9}],

Cell[BoxData[
 StyleBox["\<\"? SeriesProduct\\n\\nSeriesProduct\[VeryThinSpace][ s1 , s2 , \
p ]  returns the expanded product series  p\[VeryThinSpace][ s1, s2 ]\
\[VeryThinSpace]  provided at least \\none of  s1  or  s2  is a series.  Here \
 p[ , ]  is the product to be used.\\n\\nIf neither  s1  or  s2  is a series \
then  SeriesProduct\[VeryThinSpace][ s1 , s2 , p ]  returns \
unevaluated.\\n\\nEg.   Let    \\n                a = a0 + a1 \[CurlyEpsilon] \
+ O\[VeryThinSpace][\[VeryThinSpace]\[CurlyEpsilon]\[VeryThinSpace]\!\(\*\
SuperscriptBox[\(]\), \(2\)]\)\\n                b = b0 + b1 \[CurlyEpsilon] \
+ O\[VeryThinSpace][\[VeryThinSpace]\[CurlyEpsilon]\[VeryThinSpace]\!\(\*\
SuperscriptBox[\(]\), \(2\)]\)\\n\\n      then  SeriesProduct [ a , b , p ]  \
returns  \\n      \\n                p\[VeryThinSpace][ a0 , b0 ]  +  ( p\
\[VeryThinSpace][ a0 , b1 ] + p\[VeryThinSpace][ a1 , b0 ] ) \[CurlyEpsilon]  \
 +  O\[VeryThinSpace][\[VeryThinSpace]\[CurlyEpsilon]\[VeryThinSpace]\!\(\*\
SuperscriptBox[\(]\), \(2\)]\)\\n\[VeryThinSpace]\\nA typical user will never \
need this function. It is used internally to define series expansions \\nfor  \
 \[LeftAngleBracket] s1 , s2 \[RightAngleBracket]  and   s1 \[CircleTimes] s2 \
  (for  p = AngleBracket  and  p = CircleTimes  respectively ).\\n\\nIf  p = \
Times ,  then   SeriesProduct\[VeryThinSpace][ s1 , s2 , p ]   is the same as \
  s1\[VeryThinSpace]s2 .\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.65187657104947*^9},
 CellTags->"Info3651912571-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Divergence and curl,  as in  F = curl [A]", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
   3.467120202756169*^9, 3.467120227661777*^9}, {3.467121129569379*^9, 
   3.467121156634774*^9}, {3.467121644582208*^9, 3.467121684332472*^9}, {
   3.467126548768611*^9, 3.467126560140989*^9}, {3.467126913123894*^9, 
   3.46712691617785*^9}, {3.480478682370827*^9, 3.480478686397118*^9}, 
   3.480478717350579*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"div", "::", "usage"}], " ", "=", " ", 
   "\"\<?\[VeryThinSpace]div\n\ndiv\[VeryThinSpace][ X ]   returns the \
divergence of  X ,  which is a tensor field of degree  deg\[VeryThinSpace][ X \
] - 1 .  \nDiv is calculated by contracting on the last two slots of  \[Del] \
X ,\n\n                                           div\[VeryThinSpace][ X ]  = \
 \[LeftAngleBracket] \[Del] X \[RightAngleBracket]\!\(\*SubscriptBox[\(\\\ \
\), \(deg\[VeryThinSpace][X]\\\ , \\\ \\\ deg\[VeryThinSpace][X]\\\  + \\\ \
1\)]\)\n\ndiv [ X ]  is defined only for deg [ X ] \[GreaterEqual] 1.\n\nSee \
also:   ? curl\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479819425231618*^9, 3.479819669477672*^9}, {
   3.479819744685167*^9, 3.479819799797691*^9}, 3.479913938659407*^9, {
   3.480173173948789*^9, 3.480173234316144*^9}, {3.481613129675451*^9, 
   3.481613142312106*^9}, {3.481613220824754*^9, 3.481613247970823*^9}, 
   3.481613311913561*^9, {3.481613364225675*^9, 3.481613397429749*^9}, {
   3.481613437213386*^9, 3.481613441692333*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "div"}]], "Input",
 CellChangeTimes->{{3.480173190221585*^9, 3.480173191569172*^9}}],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]div\\n\\ndiv\[VeryThinSpace][ X ]   returns \
the divergence of  X ,  which is a tensor field of degree  \
deg\[VeryThinSpace][ X ] - 1 .  \\nDiv is calculated by contracting on the \
last two slots of  \[Del] X ,\\n\\n                                           \
div\[VeryThinSpace][ X ]  =  \[LeftAngleBracket] \[Del] X \
\[RightAngleBracket]\!\(\*SubscriptBox[\(\\\\ \), \
\(deg\[VeryThinSpace][X]\\\\ , \\\\ \\\\ deg\[VeryThinSpace][X]\\\\  + \\\\ 1\
\)]\)\\n\\ndiv [ X ]  is defined only for deg [ X ] \[GreaterEqual] \
1.\\n\\nSee also:   ? curl\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765714636183`*^9},
 CellTags->"Info3651912571-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"curl", "::", "usage"}], " ", "=", " ", 
   "\"\<?\[VeryThinSpace]curl\n\ncurl\[VeryThinSpace][ X ]   returns curl of  \
X ,  which is a tensor field of degree  deg\[VeryThinSpace][ X ] + 1 .  \n\
Curl is calculated by anti-symmetrizing on the last two slots of  \[Del] X ,  \
with an included factor of  -2 ,\n\n                                         \
curl\[VeryThinSpace][ X ]  =  mvToLast\[VeryThinSpace][ \
deg\[VeryThinSpace][X] ,  \[Del] X ]   -  \[Del] X .\n\ncurl [ X ]  is \
defined only for deg [ X ] \[GreaterEqual] 1.\n\nExample:   If  A  is an \
electromagnetic vector potential,  then  F = curl\[VeryThinSpace][ A ]  is \
the corresponding electromagnetic field tensor.  \n\nSee also:   ? div\>\""}],
   ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479819946139794*^9, 3.479819976684532*^9}, {
   3.479820077915937*^9, 3.479820088332023*^9}, {3.479820118345901*^9, 
   3.479820633888032*^9}, 3.479913965072738*^9, {3.480173274796996*^9, 
   3.480173396837848*^9}, {3.480173443933056*^9, 3.480173470374809*^9}, {
   3.481613031748821*^9, 3.481613100664274*^9}, {3.481613193438131*^9, 
   3.481613207013179*^9}, 3.481613309202128*^9, {3.481613456770827*^9, 
   3.48161346370922*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "curl"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]curl\\n\\ncurl\[VeryThinSpace][ X ]   returns \
curl of  X ,  which is a tensor field of degree  deg\[VeryThinSpace][ X ] + 1 \
.  \\nCurl is calculated by anti-symmetrizing on the last two slots of  \
\[Del] X ,  with an included factor of  -2 ,\\n\\n                            \
             curl\[VeryThinSpace][ X ]  =  mvToLast\[VeryThinSpace][ deg\
\[VeryThinSpace][X] ,  \[Del] X ]   -  \[Del] X .\\n\\ncurl [ X ]  is defined \
only for deg [ X ] \[GreaterEqual] 1.\\n\\nExample:   If  A  is an \
electromagnetic vector potential,  then  F = curl\[VeryThinSpace][ A ]  is \
the corresponding electromagnetic field tensor.  \\n\\nSee also:   ? div\"\>",
   "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765715318937`*^9},
 CellTags->"Info3651912571-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Stress-energy tensor", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
  3.467120202756169*^9, 3.467120227661777*^9}, {3.467121129569379*^9, 
  3.467121156634774*^9}, {3.467121644582208*^9, 3.467121684332472*^9}, {
  3.467126548768611*^9, 3.467126560140989*^9}, {3.467126913123894*^9, 
  3.46712691617785*^9}, {3.467198505051484*^9, 3.467198515544077*^9}, {
  3.467198638607828*^9, 3.467198678182335*^9}, {3.46728810114199*^9, 
  3.467288103412177*^9}, {3.46729713395404*^9, 3.467297152845731*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"TraceFreeSquare", "::", "usage"}], "=", 
   "\"\<?\[VeryThinSpace]TraceFreeSquare\n\nTraceFreeSquare[ F ]   can be \
used to calculate the electromagnetic stress-energy tensor. \n\nIn SI units, \
the electromagnetic stress-energy tensor  T  is given by\n\n                  \
                              T =  1/\!\(\*SubscriptBox[\(\[Mu]\), \(0\)]\) \
TraceFreeSquare[ F ]\n\nwhere  F  is the electromagnetic field tensor and   \
\!\(\*SubscriptBox[\(\[Mu]\), \(0\)]\) = 4\[Pi] \[Cross] \
\!\(\*SuperscriptBox[\(10\), \(\(\\\ \)\(-7\)\)]\)  \!\(\*SuperscriptBox[\(NA\
\), \(-2\)]\)  is the permability of vacuum (magnetic constant).  \n\nFor SI \
constants see   http://physics.nist.gov/cuu/Constants/index.html\n\nFor the \
definition of this function see:   ?? TraceFreeSquare \n\nSee also:  ? curl , \
 ? div \>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.47982085779083*^9, 3.47982107220533*^9}, 
   3.4798211224989*^9, {3.479821155424149*^9, 3.479821198258829*^9}, {
   3.479914022497336*^9, 3.479914085225724*^9}, {3.479914119659707*^9, 
   3.479914189926337*^9}, {3.479914232893524*^9, 3.479914238732141*^9}, {
   3.479914338621705*^9, 3.47991456503299*^9}, {3.479914647852017*^9, 
   3.479914656693697*^9}, {3.480173519259376*^9, 3.480173524933394*^9}, {
   3.480173560259831*^9, 3.480173730375337*^9}, {3.480173773982621*^9, 
   3.480173776087767*^9}, {3.51448551641243*^9, 3.5144855419336653`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", "TraceFreeSquare"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"?\[VeryThinSpace]TraceFreeSquare\\n\\nTraceFreeSquare[ F ]   \
can be used to calculate the electromagnetic stress-energy tensor. \\n\\nIn \
SI units, the electromagnetic stress-energy tensor  T  is given by\\n\\n      \
                                          T =  \
1/\!\(\*SubscriptBox[\(\[Mu]\), \(0\)]\) TraceFreeSquare[ F ]\\n\\nwhere  F  \
is the electromagnetic field tensor and   \!\(\*SubscriptBox[\(\[Mu]\), \
\(0\)]\) = 4\[Pi] \[Cross] \!\(\*SuperscriptBox[\(10\), \(\(\\\\ \
\)\(-7\)\)]\)  \!\(\*SuperscriptBox[\(NA\), \(-2\)]\)  is the permability of \
vacuum (magnetic constant).  \\n\\nFor SI constants see   \
http://physics.nist.gov/cuu/Constants/index.html\\n\\nFor the definition of \
this function see:   ?? TraceFreeSquare \\n\\nSee also:  ? curl ,  ? div \
\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.65187657177106*^9},
 CellTags->"Info3651912571-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Printing with  wedge[ ]   and  short", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
   3.467120202756169*^9, 3.467120227661777*^9}, {3.467121129569379*^9, 
   3.467121156634774*^9}, {3.467121644582208*^9, 3.467121684332472*^9}, {
   3.467126548768611*^9, 3.467126560140989*^9}, {3.467126913123894*^9, 
   3.46712691617785*^9}, {3.467198505051484*^9, 3.467198515544077*^9}, {
   3.467198638607828*^9, 3.467198678182335*^9}, {3.46728810114199*^9, 
   3.467288103412177*^9}, {3.46729806668237*^9, 3.467298070130729*^9}, {
   3.476448055174662*^9, 3.476448126784789*^9}, {3.477129141405893*^9, 
   3.477129143965553*^9}, 3.479823215749549*^9}],

Cell["... missing ?", "Text",
 CellChangeTimes->{{3.518083782678659*^9, 3.518083809252877*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["Predefined basis symbols", "Subsection",
 CellChangeTimes->{{3.467119314622471*^9, 3.467119372544761*^9}, {
   3.467120202756169*^9, 3.467120227661777*^9}, {3.467121129569379*^9, 
   3.467121156634774*^9}, {3.467121644582208*^9, 3.467121684332472*^9}, {
   3.467126548768611*^9, 3.467126560140989*^9}, {3.467126913123894*^9, 
   3.46712691617785*^9}, {3.467198505051484*^9, 3.467198515544077*^9}, {
   3.467198638607828*^9, 3.467198678182335*^9}, {3.46728810114199*^9, 
   3.467288103412177*^9}, {3.46729806668237*^9, 3.467298070130729*^9}, {
   3.467366220056041*^9, 3.467366231775698*^9}, {3.477593909994389*^9, 
   3.477593937634802*^9}, {3.477774233553933*^9, 3.47777427363809*^9}, 
   3.477774306207101*^9, {3.478525276227503*^9, 3.478525489860358*^9}, {
   3.478543086796133*^9, 3.478543101778945*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"MinkowskiFrame", "::", "usage"}], "=", 
   "\"\<MinkowskiFrame[ ''name'' ]   will introduce a pre-defined Minkowski \
frame, for which the brakets \[LeftAngleBracket] , \[RightAngleBracket] are \
known, and the base-symbol(s) \nfor the frame has/have been 'symbolized', so \
that superscript index notation does not get confused with exponent notation.\
\n\nCurrently, ''name'' can be the character string  ''e''  or  ''\
\[CapitalEpsilon]'' \n\nTHIS FUNCTION HAS BEEN REMOVED at V8.0.\n\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.479822054675364*^9, 3.479822194918795*^9}, {
   3.479822230198655*^9, 3.479822641385853*^9}, {3.47982267542449*^9, 
   3.479822736288151*^9}, 3.479822772106475*^9, 3.479822808597191*^9, 
   3.479914787586148*^9, {3.518083701306353*^9, 3.51808374465331*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"??", " ", "MinkowskiFrame"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"MinkowskiFrame[ ''name'' ]   will introduce a pre-defined \
Minkowski frame, for which the brakets \[LeftAngleBracket] , \
\[RightAngleBracket] are known, and the base-symbol(s) \\nfor the frame \
has/have been 'symbolized', so that superscript index notation does not get \
confused with exponent notation.\\n\\nCurrently, ''name'' can be the \
character string  ''e''  or  ''\[CapitalEpsilon]'' \\n\\nTHIS FUNCTION HAS \
BEEN REMOVED at V8.0.\\n\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765718374233`*^9},
 CellTags->"Info3651912571-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
Permutation based functions,  mvCycles[ ],  mvRep[ ]               ----   \
old, skip\
\>", "Subsection",
 CellChangeTimes->{{3.6117004172917347`*^9, 3.611700487110237*^9}, {
   3.611794160708014*^9, 3.6117941632039413`*^9}, {3.611801723060134*^9, 
   3.611801724660182*^9}, {3.611803255881888*^9, 3.611803257769734*^9}, 
   3.611808086541277*^9, {3.612203398599391*^9, 3.6122034089317417`*^9}, {
   3.6148229098302927`*^9, 3.614822954407938*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mvCycles", "::", "usage"}], "=", 
   "\"\<mvCycles[ n ]   is the permutation specified by  mv[ n ] .  \n\nmv[ n \
]  will remain unevaluated or evaluate to another  mv[ n ] ,  whereas   \
mvCycles[ n ]   will evaluate to a permutation in disjoint cycle form.\>\""}],
   ";"}]], "Input",
 CellChangeTimes->{{3.613091742638837*^9, 3.61309182656711*^9}, 
   3.613091920280365*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mvCycles"}]], "Input",
 CellChangeTimes->{3.613091841223221*^9}],

Cell[BoxData[
 StyleBox["\<\"mvCycles[ n ]   is the permutation specified by  mv[ n ] .  \
\\n\\nmv[ n ]  will remain unevaluated or evaluate to another  mv[ n ] ,  \
whereas   mvCycles[ n ]   will evaluate to a permutation in disjoint cycle \
form.\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876571901649*^9},
 CellTags->"Info3651912571-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mvRep", "::", "usage"}], "=", 
   "\"\<mvRep[ g_Cycles ] is the mv operator corresponding to the permutation \
g, given in disjoint cycle form.\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.61309187038908*^9, 3.613091961985124*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mvRep"}]], "Input",
 CellChangeTimes->{{3.613091947717073*^9, 3.613091949927629*^9}}],

Cell[BoxData[
 StyleBox["\<\"mvRep[ g_Cycles ] is the mv operator corresponding to the \
permutation g, given in disjoint cycle form.\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.65187657196406*^9},
 CellTags->"Info3651912571-5027707"]
}, Open  ]],

Cell["\<\
mvRep[ g_Cycles ]   be the  mv  operator corresponding to the permutation  g \
,   given in disjoint cycle form,\
\>", "Text",
 CellChangeTimes->{{3.6116284697864027`*^9, 3.611628557879972*^9}, {
   3.611641212496069*^9, 3.6116412481106577`*^9}, {3.61164131428724*^9, 
   3.6116415084813538`*^9}, {3.611700499032084*^9, 3.611700499906479*^9}, {
   3.612041401562169*^9, 3.6120414054919987`*^9}, 3.612046491080649*^9, {
   3.6120512931001587`*^9, 3.612051295498661*^9}, {3.6120594073731813`*^9, 
   3.612059428413116*^9}, {3.612060415264543*^9, 3.612060415487587*^9}, {
   3.612121998856104*^9, 3.612122000535617*^9}, {3.612203418409175*^9, 
   3.612203434179721*^9}, {3.612203538747616*^9, 3.61220360660146*^9}, {
   3.612203957851077*^9, 3.612203975413085*^9}, 3.613091864853581*^9}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mv", "::", "usage"}], "=", 
   "\"\<mv[ \!\(\*SubscriptBox[\(j\), \(1\)]\), \!\(\*SubscriptBox[\(j\), \(2\
\)]\), ... , \!\(\*SubscriptBox[\(j\), \(n\)]\) ]  is an operator that moves \
the slots of a tensor into the specified order.  \n\nAn expression of the \
form \n\n               mv[ \!\(TraditionalForm\`\*SubscriptBox[\(j\), \
\(1\)], \\\ \*SubscriptBox[\(j\), \(2\)], \\\  ... \\\ , \\\ \
\*SubscriptBox[\(j\), \(n\)]\) ] [ X ]            where  n = deg[ X ]   and   \
\!\(TraditionalForm\`\(\*SubscriptBox[\(j\), \(k\)]\(\[Element]\)\)\)  { 1, \
2, 3, ..., n } ,  with  \!\(TraditionalForm\`\*SubscriptBox[\(j\), \
\(\(k\)\(\\\ \)\)]\) distinct,\n                                 \nsays that \
slots   { 1, 2, 3, ..., n }  of the tensor  X  should be permuted to  { \
\!\(TraditionalForm\`\*SubscriptBox[\(j\), \(1\)], \\\ \*SubscriptBox[\(j\), \
\(2\)], \\\  ... \\\ , \\\ \*SubscriptBox[\(j\), \(n\)]\) } .  In particular,\
\n\n                                            mv[ 1, 2, 3, ..., n  ] [ X ]  \
=  X .  \n\nExample 1:  Suppose  a, b, c  are degree 1.  Then  mv[ 3, 1, 2 ][ \
a \[CircleTimes] b \[CircleTimes] c ]  evaluates to  c \[CircleTimes] a \
\[CircleTimes] b .\n\nExample 2:  Suppose  X  is degree 2 and  v  is degree \
1.  Then  mv[ 3, 2, 1 ][ X \[CircleTimes] v ]  evaluates to  v \[CircleTimes] \
mv[ 2, 1 ][ X ] .\n\nmv[ n ]  can be used as an operator. Eg,  mv[ 2, 1, 3 ][ \
mv[ 1, 3, 2 ] ]  evaluates to  mv[ 3, 1, 2 ].    \n\nmv[ ]  is used in the \
evaluation of  \[Del] .  For further information see  ?\[VeryThinSpace]\
\[VeryThinSpace]\[VeryThinSpace]Del .  \nmv[ ]  is also used in the \
evaluation of  Sym, Alt, sym, alt.\n\n\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.613091995510681*^9, 3.61309207968122*^9}, {
  3.613092371701564*^9, 3.613092381523238*^9}, {3.613092428754587*^9, 
  3.613092498809319*^9}, {3.613092562572277*^9, 3.613092599562207*^9}, {
  3.613123128265726*^9, 3.6131232707262993`*^9}, {3.613123313867611*^9, 
  3.6131233278133*^9}, {3.614822788875688*^9, 3.61482280602731*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
The algebraic properties of  mv[ ] :    mvSplit[ ],  mvSplitQ[ ] \
\>", "Subsection",
 CellChangeTimes->{{3.6117004172917347`*^9, 3.611700487110237*^9}, {
   3.611700901848016*^9, 3.611701130920413*^9}, 3.6117012588589*^9, 
   3.611720122640205*^9, {3.6117941725158033`*^9, 3.611794174355639*^9}, {
   3.612691998199589*^9, 3.612692002604146*^9}, {3.6148230285195*^9, 
   3.614823053287445*^9}}],

Cell[CellGroupData[{

Cell["\<\
The application of a linear operator  op  to X \[Element] V :   op[ X ]\
\>", "Subsubsection",
 CellChangeTimes->{{3.611886448000499*^9, 3.611886515727385*^9}, {
  3.6119013546891823`*^9, 3.611901370528536*^9}, {3.611901458160838*^9, 
  3.611901520256131*^9}, {3.611901631297035*^9, 3.611901647315323*^9}, {
  3.611901879523034*^9, 3.6119018943854856`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SquareBracket", "::", "usage"}], "=", 
   "\"\<SquareBracket[ f , x ]   evaluates to  f[x].\n\nSquareBracket  is \
useful in constructions such as  Map[SquareBracket[#,X]&,ops].\n\nSee: ? \
Through \>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.6130930221395493`*^9, 3.613093093539307*^9}, {
  3.613093188997167*^9, 3.613093204574212*^9}, {3.6130935483482018`*^9, 
  3.6130935780282*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SquareBracket"}]], "Input",
 CellChangeTimes->{{3.6130932149726343`*^9, 3.6130932161565933`*^9}}],

Cell[BoxData[
 StyleBox["\<\"SquareBracket[ f , x ]   evaluates to  \
f[x].\\n\\nSquareBracket  is useful in constructions such as  \
Map[SquareBracket[#,X]&,ops].\\n\\nSee: ? Through \"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.6518765722809258`*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Simplification / splitting  of  mv[ ]  ", "Subsubsection",
 CellChangeTimes->{{3.611886448000499*^9, 3.611886515727385*^9}, {
  3.6119013546891823`*^9, 3.6119014378233757`*^9}, {3.611976460758855*^9, 
  3.6119765233506327`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mvSplit", "::", "usage"}], " ", "=", 
   "\"\<mvSplit[ \!\(TraditionalForm\`\(\(mv\)\([\)\*SubscriptBox[\(n\), \
\(1\)]\)\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ], { p, \
q } ]  attempts to split the specified  mv[]  operator into a pair of  mv[] \
operators that \nthat permute seperately the objects  \
\!\(\*SubscriptBox[\(a\), \(i\)]\)  and  \!\(\*SubscriptBox[\(b\), \(j\)]\)  \
in the list  { \!\(\*SubscriptBox[\(a\), \(1\)]\), \!\(\*SubscriptBox[\(a\), \
\(2\)]\), ..., \!\(\*SubscriptBox[\(a\), \(p\)]\), \!\(\*SubscriptBox[\(b\), \
\(1\)]\), \!\(\*SubscriptBox[\(b\), \(2\)]\), ..., \!\(\*SubscriptBox[\(b\), \
\(q\)]\) } .\n\nmvSplit[ \!\(TraditionalForm\`\(\(mv\)\([\)\*SubscriptBox[\(n\
\), \(1\)]\)\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ], { \
p, q }  ] returns a list of length 3, having the form  {c, P, Q}  where c = \
0, 1, or 2, and where \n(for c\[VeryThinSpace]\[NotEqual]\[VeryThinSpace]0)  \
P and Q  are mv[] operators. Let s  be the permuted vector\n \n               \
                  s =  mv[ \!\(TraditionalForm\`\*SubscriptBox[\(n\), \
\(1\)]\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ][ { \
\!\(\*SubscriptBox[\(a\), \(1\)]\), \!\(\*SubscriptBox[\(a\), \(2\)]\), ..., \
\!\(\*SubscriptBox[\(a\), \(p\)]\) ,  \!\(\*SubscriptBox[\(b\), \(1\)]\), \
\!\(\*SubscriptBox[\(b\), \(2\)]\), ..., \!\(\*SubscriptBox[\(b\), \(q\)]\) } \
] .\n  \nThe returned value  c  identifies which of the following cases holds \
: \n\n         c = 0 :  The symbols  \!\(\*SubscriptBox[\(a\), \(i\)]\)  and  \
\!\(\*SubscriptBox[\(b\), \(j\)]\)  are mixed up in  s .  The  \
\!\(\*SubscriptBox[\(a\), \(i\)]\) are not all together (and neither are the \
\!\(\*SubscriptBox[\(b\), \(j\)]\)).   \n\n         c = 1 :  All the symbols  \
\!\(\*SubscriptBox[\(a\), \(i\)]\)  appear first in  s, in which case for \
some  P = mv[ \!\(\*SubscriptBox[\(p\), \(1\)]\), \!\(\*SubscriptBox[\(p\), \
\(2\)]\), ...], and  Q = mv[ \!\(\*SubscriptBox[\(q\), \(1\)]\), \
\!\(\*SubscriptBox[\(q\), \(2\)]\), ...],  \n\n                     s = \
Flatten[{ P[{ \!\(\*SubscriptBox[\(a\), \(1\)]\), \!\(\*SubscriptBox[\(a\), \
\(2\)]\), ..., \!\(\*SubscriptBox[\(a\), \(p\)]\) }], Q[{ \!\(\*SubscriptBox[\
\(b\), \(1\)]\), \!\(\*SubscriptBox[\(b\), \(2\)]\), ..., \!\(\*SubscriptBox[\
\(b\), \(q\)]\) }] }]. \n\n         c = 2 :  All the symbols  \
\!\(\*SubscriptBox[\(b\), \(j\)]\)  appear first in  s, in which case for \
some  P = mv[ \!\(\*SubscriptBox[\(p\), \(1\)]\), \!\(\*SubscriptBox[\(p\), \
\(2\)]\), ...], and  Q = mv[ \!\(\*SubscriptBox[\(q\), \(1\)]\), \
\!\(\*SubscriptBox[\(q\), \(2\)]\), ...],  \n\n                     s = \
Flatten[{ Q[{ \!\(\*SubscriptBox[\(b\), \(1\)]\), \!\(\*SubscriptBox[\(b\), \
\(2\)]\), ..., \!\(\*SubscriptBox[\(b\), \(q\)]\) }], P[{ \!\(\*SubscriptBox[\
\(a\), \(1\)]\), \!\(\*SubscriptBox[\(a\), \(2\)]\), ..., \!\(\*SubscriptBox[\
\(a\), \(p\)]\) }] }]. \n\nFor the case c = 0, the value returned by  mvSplit \
 is the list  { 0, { Null, Null} }.\n\nThe first argument of  mvSplit[ ]  can \
also be provided as the list  \!\(TraditionalForm\`{\\\ \*SubscriptBox[\(n\), \
\(1\)]\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ...}  instead \
of the operator  \!\(TraditionalForm\`\(\(mv\)\([\)\*SubscriptBox[\(n\), \
\(1\)]\)\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... \
].\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.611903497294899*^9, 3.6119036745745373`*^9}, 
   3.61190375829996*^9, {3.611903974113924*^9, 3.6119048492855587`*^9}, {
   3.611905037532424*^9, 3.6119056408283*^9}, 3.611905869823542*^9, {
   3.611906121652554*^9, 3.611906427349312*^9}, {3.611906485560583*^9, 
   3.611906753778901*^9}, {3.6119068600754757`*^9, 3.611906930210452*^9}, {
   3.611906984493907*^9, 3.611906986381662*^9}, {3.611947402374226*^9, 
   3.6119475556164083`*^9}, {3.611947652767481*^9, 3.6119477715115547`*^9}, {
   3.611947820507599*^9, 3.6119478344171963`*^9}, {3.611947902008491*^9, 
   3.611947960415757*^9}, {3.611947996364314*^9, 3.611948012509797*^9}, {
   3.6119480610506907`*^9, 3.611948518441959*^9}, {3.6119489769846897`*^9, 
   3.611948988799114*^9}, {3.6119490686914883`*^9, 3.61194910278036*^9}, {
   3.611949769778686*^9, 3.611949773127674*^9}, {3.611974753792527*^9, 
   3.611974942429503*^9}, {3.611975005127132*^9, 3.6119750705360622`*^9}, {
   3.6119751180070543`*^9, 3.611975317623019*^9}, {3.6119754329688997`*^9, 
   3.611975474101533*^9}, {3.611975586248775*^9, 3.6119756305965967`*^9}, {
   3.611975665188211*^9, 3.611975735925432*^9}, {3.611975815753977*^9, 
   3.6119758903321953`*^9}, {3.612064117340251*^9, 3.612064131173209*^9}, {
   3.6120641651743717`*^9, 3.612064177454237*^9}, 3.6120642334894543`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mvSplit"}]], "Input",
 CellChangeTimes->{{3.611906832746397*^9, 3.611906832872903*^9}, 
   3.61194780321922*^9}],

Cell[BoxData[
 StyleBox["\<\"mvSplit[ \
\!\(TraditionalForm\`\(\(mv\)\([\)\*SubscriptBox[\(n\), \(1\)]\)\), \
\!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ], { p, q } ]  \
attempts to split the specified  mv[]  operator into a pair of  mv[] \
operators that \\nthat permute seperately the objects  \!\(\*SubscriptBox[\(a\
\), \(i\)]\)  and  \!\(\*SubscriptBox[\(b\), \(j\)]\)  in the list  { \
\!\(\*SubscriptBox[\(a\), \(1\)]\), \!\(\*SubscriptBox[\(a\), \(2\)]\), ..., \
\!\(\*SubscriptBox[\(a\), \(p\)]\), \!\(\*SubscriptBox[\(b\), \(1\)]\), \
\!\(\*SubscriptBox[\(b\), \(2\)]\), ..., \!\(\*SubscriptBox[\(b\), \(q\)]\) } \
.\\n\\nmvSplit[ \!\(TraditionalForm\`\(\(mv\)\([\)\*SubscriptBox[\(n\), \
\(1\)]\)\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ], { p, \
q }  ] returns a list of length 3, having the form  {c, P, Q}  where c = 0, \
1, or 2, and where \\n(for c\[VeryThinSpace]\[NotEqual]\[VeryThinSpace]0)  P \
and Q  are mv[] operators. Let s  be the permuted vector\\n \\n               \
                  s =  mv[ \!\(TraditionalForm\`\*SubscriptBox[\(n\), \
\(1\)]\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ][ { \
\!\(\*SubscriptBox[\(a\), \(1\)]\), \!\(\*SubscriptBox[\(a\), \(2\)]\), ..., \
\!\(\*SubscriptBox[\(a\), \(p\)]\) ,  \!\(\*SubscriptBox[\(b\), \(1\)]\), \
\!\(\*SubscriptBox[\(b\), \(2\)]\), ..., \!\(\*SubscriptBox[\(b\), \(q\)]\) } \
] .\\n  \\nThe returned value  c  identifies which of the following cases \
holds : \\n\\n         c = 0 :  The symbols  \!\(\*SubscriptBox[\(a\), \(i\)]\
\)  and  \!\(\*SubscriptBox[\(b\), \(j\)]\)  are mixed up in  s .  The  \
\!\(\*SubscriptBox[\(a\), \(i\)]\) are not all together (and neither are the \
\!\(\*SubscriptBox[\(b\), \(j\)]\)).   \\n\\n         c = 1 :  All the \
symbols  \!\(\*SubscriptBox[\(a\), \(i\)]\)  appear first in  s, in which \
case for some  P = mv[ \!\(\*SubscriptBox[\(p\), \(1\)]\), \
\!\(\*SubscriptBox[\(p\), \(2\)]\), ...], and  Q = mv[ \!\(\*SubscriptBox[\(q\
\), \(1\)]\), \!\(\*SubscriptBox[\(q\), \(2\)]\), ...],  \\n\\n               \
      s = Flatten[{ P[{ \!\(\*SubscriptBox[\(a\), \(1\)]\), \
\!\(\*SubscriptBox[\(a\), \(2\)]\), ..., \!\(\*SubscriptBox[\(a\), \(p\)]\) \
}], Q[{ \!\(\*SubscriptBox[\(b\), \(1\)]\), \!\(\*SubscriptBox[\(b\), \
\(2\)]\), ..., \!\(\*SubscriptBox[\(b\), \(q\)]\) }] }]. \\n\\n         c = 2 \
:  All the symbols  \!\(\*SubscriptBox[\(b\), \(j\)]\)  appear first in  s, \
in which case for some  P = mv[ \!\(\*SubscriptBox[\(p\), \(1\)]\), \
\!\(\*SubscriptBox[\(p\), \(2\)]\), ...], and  Q = mv[ \!\(\*SubscriptBox[\(q\
\), \(1\)]\), \!\(\*SubscriptBox[\(q\), \(2\)]\), ...],  \\n\\n               \
      s = Flatten[{ Q[{ \!\(\*SubscriptBox[\(b\), \(1\)]\), \
\!\(\*SubscriptBox[\(b\), \(2\)]\), ..., \!\(\*SubscriptBox[\(b\), \(q\)]\) \
}], P[{ \!\(\*SubscriptBox[\(a\), \(1\)]\), \!\(\*SubscriptBox[\(a\), \
\(2\)]\), ..., \!\(\*SubscriptBox[\(a\), \(p\)]\) }] }]. \\n\\nFor the case c \
= 0, the value returned by  mvSplit  is the list  { 0, { Null, Null} \
}.\\n\\nThe first argument of  mvSplit[ ]  can also be provided as the list  \
\!\(TraditionalForm\`{\\\\ \*SubscriptBox[\(n\), \(1\)]\), \
\!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ...}  instead of the \
operator  \!\(TraditionalForm\`\(\(mv\)\([\)\*SubscriptBox[\(n\), \(1\)]\)\), \
\!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ].\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876572346096*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"mvSplitQ", "::", "usage"}], " ", "=", 
   "\"\<mvSplitQ[ \!\(TraditionalForm\`\(\(mv\)\([\)\*SubscriptBox[\(n\), \(1\
\)]\)\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ..., \
\!\(\*SubscriptBox[\(n\), \(r\)]\)], { p, q } ]  returns True if the \
specified mv[] splits, and False otherwise.\n\nIt is assumed that  \
\!\(TraditionalForm\`\(\(mv\)\([\)\(\\\ \)\*SubscriptBox[\(n\), \(1\)]\)\), \
\!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ]  is a valid mv[ ], \
 that is,  { \!\(\*SubscriptBox[\(n\), \(1\)]\), \!\(\*SubscriptBox[\(n\), \(\
\(2\)\(,\)\(\\\ \)\)]\)..., \!\(\*SubscriptBox[\(n\), \(r\)]\) } is a \
permutation of  { 1, 2, ..., r }.    \n\nThe first argument of  mvSplit[ ]  \
can also be provided as the list  \!\(TraditionalForm\`{\\\ \
\*SubscriptBox[\(n\), \(1\)]\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \
\(2\)]\), ...}  instead of the operator  \!\(TraditionalForm\`\(\(mv\)\([\)\(\
\\\ \)\*SubscriptBox[\(n\), \(1\)]\)\), \
\!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ].\n\nFor further \
info see:  ? mvSplit\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.611949613427856*^9, 3.611949854528565*^9}, {
   3.612064382448451*^9, 3.6120646576134367`*^9}, 3.6120646914973297`*^9}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "mvSplitQ"}]], "Input",
 CellChangeTimes->{3.611949861515781*^9}],

Cell[BoxData[
 StyleBox["\<\"mvSplitQ[ \!\(TraditionalForm\`\(\(mv\)\([\)\*SubscriptBox[\(n\
\), \(1\)]\)\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ..., \
\!\(\*SubscriptBox[\(n\), \(r\)]\)], { p, q } ]  returns True if the \
specified mv[] splits, and False otherwise.\\n\\nIt is assumed that  \
\!\(TraditionalForm\`\(\(mv\)\([\)\(\\\\ \)\*SubscriptBox[\(n\), \(1\)]\)\), \
\!\(TraditionalForm\`\*SubscriptBox[\(n\), \(2\)]\), ... ]  is a valid mv[ ], \
 that is,  { \!\(\*SubscriptBox[\(n\), \(1\)]\), \!\(\*SubscriptBox[\(n\), \(\
\(2\)\(,\)\(\\\\ \)\)]\)..., \!\(\*SubscriptBox[\(n\), \(r\)]\) } is a \
permutation of  { 1, 2, ..., r }.    \\n\\nThe first argument of  mvSplit[ ]  \
can also be provided as the list  \!\(TraditionalForm\`{\\\\ \
\*SubscriptBox[\(n\), \(1\)]\), \!\(TraditionalForm\`\*SubscriptBox[\(n\), \
\(2\)]\), ...}  instead of the operator  \!\(TraditionalForm\`\(\(mv\)\([\)\(\
\\\\ \)\*SubscriptBox[\(n\), \(1\)]\)\), \!\(TraditionalForm\`\*SubscriptBox[\
\(n\), \(2\)]\), ... ].\\n\\nFor further info see:  ? mvSplit\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765724093637`*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
mv arguments:   SetmvArgLengthFixed[ ],  SetmvArgLengthVariable[ ]\
\>", "Subsection",
 CellChangeTimes->{{3.6117004172917347`*^9, 3.611700487110237*^9}, {
   3.611700901848016*^9, 3.611701130920413*^9}, {3.611701234361413*^9, 
   3.611701302550877*^9}, {3.611701786139716*^9, 3.6117017862152348`*^9}, {
   3.61170200910107*^9, 3.6117020329203777`*^9}, 3.611996273648815*^9, {
   3.6119963087668657`*^9, 3.611996325229361*^9}, {3.612145566621338*^9, 
   3.61214560729216*^9}, 3.612145985391918*^9, {3.612237117025572*^9, 
   3.612237120640545*^9}, {3.653862708944747*^9, 3.653862735072357*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetmvArgLengthFixed", "::", "usage"}], "=", 
   "\"\<SetmvArgLengthFixed[ ]  will standardize the length of mv arguments \
according to tensor degree.\n\nSee also: SetmvArgLengthVariable[ ]\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613093889757929*^9, 3.613093955464797*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SetmvArgLengthFixed"}]], "Input",
 CellChangeTimes->{3.613093962319618*^9}],

Cell[BoxData[
 StyleBox["\<\"SetmvArgLengthFixed[ ]  will standardize the length of mv \
arguments according to tensor degree.\\n\\nSee also: SetmvArgLengthVariable[ \
]\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765724787483`*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SetmvArgLengthVariable", "::", "usage"}], "=", 
   "\"\<SetmvArgLengthVariable[ ]  will make mv arguments as short as \
possible.\n\nSee also: SetmvArgLengthFixed[ ]\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613093980015552*^9, 3.613094025975752*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SetmvArgLengthVariable"}]], "Input",
 CellChangeTimes->{3.6130940368319283`*^9}],

Cell[BoxData[
 StyleBox["\<\"SetmvArgLengthVariable[ ]  will make mv arguments as short as \
possible.\\n\\nSee also: SetmvArgLengthFixed[ ]\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.651876572543293*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["\<\
sym[n][X]  and  alt[n][X]  ---  symmetrization on specified slots\
\>", "Subsection",
 CellChangeTimes->{{3.6117004172917347`*^9, 3.611700487110237*^9}, {
   3.611700901848016*^9, 3.611701130920413*^9}, {3.611701234361413*^9, 
   3.611701302550877*^9}, {3.611701786139716*^9, 3.6117017862152348`*^9}, {
   3.61170200910107*^9, 3.6117020329203777`*^9}, 3.611996273648815*^9, {
   3.6119963087668657`*^9, 3.611996325229361*^9}, {3.612145566621338*^9, 
   3.61214560729216*^9}, 3.612145985391918*^9, {3.6125024271766453`*^9, 
   3.6125024747607937`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"sym", "::", "usage"}], "=", 
   "\"\<sym[ \!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \(1\)]\(,\)\(\\\ \)\
\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\ \)\(...\)\(\\\ \)\)\)]  \[Congruent] \
sym[ \!\(TraditionalForm\`\(\({\*SubscriptBox[\(n\), \(1\)], \\\ \
\*SubscriptBox[\(n\), \(2\)], \\\  ... \\\ }\)\(\\\ \)\)\)]  is the mv \
operator for symmetrizing on tensor slots  \
\!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \(1\)]\(,\)\(\\\ \
\)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\ \)\(...\)\(\\\ \)\)\).\n\nsym  acts \
on tensors as  sym[ \!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \
\(1\)]\(,\)\(\\\ \)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\ \)\(...\)\(\\\ \)\)\
\)][ X ] . \n\nsym[ ][ X ] denotes full symmetrization on all slots of  X. \n\
\nIf possible, it is better to use unevaluated symmetrization, defined by  \
Sym[ n ][X].\n\nSee also: ? Sym , ? Alt , ? alt\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613094114407827*^9, 3.613094153507471*^9}, {
  3.61309468192622*^9, 3.613095127293141*^9}, {3.613095302851507*^9, 
  3.613095312385646*^9}, {3.613095357930489*^9, 3.613095368992766*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "sym"}]], "Input"],

Cell[BoxData[
 StyleBox["\<\"sym[ \!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \
\(1\)]\(,\)\(\\\\ \)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\\ \)\(...\)\(\\\\ \
\)\)\)]  \[Congruent] sym[ \!\(TraditionalForm\`\(\({\*SubscriptBox[\(n\), \
\(1\)], \\\\ \*SubscriptBox[\(n\), \(2\)], \\\\  ... \\\\ }\)\(\\\\ \)\)\)]  \
is the mv operator for symmetrizing on tensor slots  \
\!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \(1\)]\(,\)\(\\\\ \
\)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\\ \)\(...\)\(\\\\ \)\)\).\\n\\nsym  \
acts on tensors as  sym[ \!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \
\(1\)]\(,\)\(\\\\ \)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\\ \)\(...\)\(\\\\ \
\)\)\)][ X ] . \\n\\nsym[ ][ X ] denotes full symmetrization on all slots of  \
X. \\n\\nIf possible, it is better to use unevaluated symmetrization, defined \
by  Sym[ n ][X].\\n\\nSee also: ? Sym , ? Alt , ? alt\"\>", "MSG"]], "Print", \
"PrintUsage",
 CellChangeTimes->{3.651876572608158*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"alt", "::", "usage"}], "=", 
   "\"\<alt[ \!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \(1\)]\(,\)\(\\\ \)\
\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\ \)\(...\)\(\\\ \)\)\)]  \[Congruent] \
alt[ \!\(TraditionalForm\`\(\({\*SubscriptBox[\(n\), \(1\)], \\\ \
\*SubscriptBox[\(n\), \(2\)], \\\  ... \\\ }\)\(\\\ \)\)\)]  is the mv \
operator for anti-symmetrizing on tensor slots  \
\!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \(1\)]\(,\)\(\\\ \
\)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\ \)\(...\)\(\\\ \)\)\).\n\nalt  acts \
on tensors as  alt[ \!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \
\(1\)]\(,\)\(\\\ \)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\ \)\(...\)\(\\\ \)\)\
\)][ X ] . \n\nalt[ ][ X ] denotes full anti-symmetrization on all slots of  \
X. \n\nIf possible, it is better to use unevaluated anti-symmetrization, \
defined by  Alt[ n ][X].\n\nSee also: ? Alt , ? Sym , ? sym\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613094114407827*^9, 3.613094153507471*^9}, {
  3.61309468192622*^9, 3.613095127293141*^9}, {3.613095214591251*^9, 
  3.613095297169683*^9}, {3.6130953271921873`*^9, 3.6130953712523746`*^9}, {
  3.6130954045463963`*^9, 3.613095413697755*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "alt"}]], "Input",
 CellChangeTimes->{{3.61309496634547*^9, 3.613094967716549*^9}, {
  3.613095434150497*^9, 3.6130954357664967`*^9}}],

Cell[BoxData[
 StyleBox["\<\"alt[ \!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \
\(1\)]\(,\)\(\\\\ \)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\\ \)\(...\)\(\\\\ \
\)\)\)]  \[Congruent] alt[ \!\(TraditionalForm\`\(\({\*SubscriptBox[\(n\), \
\(1\)], \\\\ \*SubscriptBox[\(n\), \(2\)], \\\\  ... \\\\ }\)\(\\\\ \)\)\)]  \
is the mv operator for anti-symmetrizing on tensor slots  \!\(TraditionalForm\
\`\(\*SubscriptBox[\(n\), \(1\)]\(,\)\(\\\\ \)\*SubscriptBox[\(n\), \(2\)]\(,\
\)\(\\\\ \)\(...\)\(\\\\ \)\)\).\\n\\nalt  acts on tensors as  alt[ \
\!\(TraditionalForm\`\(\*SubscriptBox[\(n\), \(1\)]\(,\)\(\\\\ \
\)\*SubscriptBox[\(n\), \(2\)]\(,\)\(\\\\ \)\(...\)\(\\\\ \)\)\)][ X ] . \
\\n\\nalt[ ][ X ] denotes full anti-symmetrization on all slots of  X. \
\\n\\nIf possible, it is better to use unevaluated anti-symmetrization, \
defined by  Alt[ n ][X].\\n\\nSee also: ? Alt , ? Sym , ? sym\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876572678707*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Declaring a tensor symmetric", "Subsection",
 CellChangeTimes->{{3.6117004172917347`*^9, 3.611700487110237*^9}, {
   3.611700901848016*^9, 3.611701130920413*^9}, {3.611701234361413*^9, 
   3.611701302550877*^9}, {3.611701786139716*^9, 3.6117017862152348`*^9}, {
   3.61170200910107*^9, 3.6117020329203777`*^9}, 3.611996273648815*^9, {
   3.6119963087668657`*^9, 3.611996325229361*^9}, {3.612145566621338*^9, 
   3.61214560729216*^9}, {3.612145987296035*^9, 3.612146026046085*^9}, {
   3.613124058771535*^9, 3.613124063734761*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AssumeSymmetric", "::", "usage"}], "=", 
   "\"\<AssumeSymmetric[ X ]  or  AssumeSymmetric[ { \
\!\(\*SubscriptBox[\(X\), \(1\)]\) , \!\(\*SubscriptBox[\(X\), \(2\)]\) , ... \
} ]   \n\nUse automatic simplifications rules that result from assuming that  \
X  is a fully symmetric tensor. \n\nSee also:  ? ForgetAssumeSymmetric \
\>\""}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613095485349999*^9, 3.6130956587420483`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", " ", "AssumeSymmetric"}]], "Input",
 CellChangeTimes->{{3.613095630742647*^9, 3.613095630997035*^9}}],

Cell[BoxData[
 StyleBox["\<\"AssumeSymmetric[ X ]  or  AssumeSymmetric[ { \
\!\(\*SubscriptBox[\(X\), \(1\)]\) , \!\(\*SubscriptBox[\(X\), \(2\)]\) , ... \
} ]   \\n\\nUse automatic simplifications rules that result from assuming \
that  X  is a fully symmetric tensor. \\n\\nSee also:  ? \
ForgetAssumeSymmetric \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765727446117`*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ForgetAssumeSymmetric", "::", "usage"}], "=", 
   "\"\<ForgetAssumeSymmetric[ X ]  or  ForgetAssumeSymmetric[ { \
\!\(\*SubscriptBox[\(X\), \(1\)]\) , \!\(\*SubscriptBox[\(X\), \(2\)]\) , ... \
} ]   \n\nStop using simplifications rules that result from assuming that  X  \
is a fully symmetric tensor. \n\nSee also:  ? AssumeSymmetric\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613095678790711*^9, 3.6130957871183357`*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ForgetAssumeSymmetric"}]], "Input",
 CellChangeTimes->{3.613095793463217*^9}],

Cell[BoxData[
 StyleBox["\<\"ForgetAssumeSymmetric[ X ]  or  ForgetAssumeSymmetric[ { \
\!\(\*SubscriptBox[\(X\), \(1\)]\) , \!\(\*SubscriptBox[\(X\), \(2\)]\) , ... \
} ]   \\n\\nStop using simplifications rules that result from assuming that  \
X  is a fully symmetric tensor. \\n\\nSee also:  ? AssumeSymmetric\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.65187657281411*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"SymQ", "::", "usage"}], "=", 
   "\"\<SymQ[ X ]  returns True if  X  is being assumed to be symmetric.\n\n\
See also:  ? AssumeSymmetric ,  ? ForgetAssumeSymmetric\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613095924007729*^9, 3.613095993140378*^9}, {
  3.6131774324286003`*^9, 3.613177435026134*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "SymQ"}]], "Input",
 CellChangeTimes->{3.613096000439726*^9, 3.6131774406881437`*^9}],

Cell[BoxData[
 StyleBox["\<\"SymQ[ X ]  returns True if  X  is being assumed to be \
symmetric.\\n\\nSee also:  ? AssumeSymmetric ,  ? ForgetAssumeSymmetric\"\>", 
  "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876572878709*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Declaring a tensor antisymmetric", "Subsection",
 CellChangeTimes->{{3.6117004172917347`*^9, 3.611700487110237*^9}, {
   3.611700901848016*^9, 3.611701130920413*^9}, {3.611701234361413*^9, 
   3.611701302550877*^9}, {3.611701786139716*^9, 3.6117017862152348`*^9}, {
   3.61170200910107*^9, 3.6117020329203777`*^9}, 3.611996273648815*^9, {
   3.6119963087668657`*^9, 3.611996325229361*^9}, {3.612145566621338*^9, 
   3.61214560729216*^9}, {3.612145987296035*^9, 3.612146026046085*^9}, {
   3.613124058771535*^9, 3.613124073106059*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AssumeAntisymmetric", "::", "usage"}], "=", 
   "\"\<AssumeAntisymmetric[ X ]  or  AssumeAntisymmetric[ { \
\!\(\*SubscriptBox[\(X\), \(1\)]\) , \!\(\*SubscriptBox[\(X\), \(2\)]\) , ... \
} ]   \n\nUse automatic simplifications rules that result from assuming that  \
X  is a fully antisymmetric tensor. \n\nSee also:  ? \
ForgetAssumeAntisymmetric \>\""}], " ", ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613095485349999*^9, 3.6130956587420483`*^9}, {
  3.613124082110859*^9, 3.613124123892828*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", " ", "AssumeAntisymmetric"}]], "Input",
 CellChangeTimes->{{3.613095630742647*^9, 3.613095630997035*^9}, 
   3.613124166189765*^9}],

Cell[BoxData[
 StyleBox["\<\"AssumeAntisymmetric[ X ]  or  AssumeAntisymmetric[ { \
\!\(\*SubscriptBox[\(X\), \(1\)]\) , \!\(\*SubscriptBox[\(X\), \(2\)]\) , ... \
} ]   \\n\\nUse automatic simplifications rules that result from assuming \
that  X  is a fully antisymmetric tensor. \\n\\nSee also:  ? \
ForgetAssumeAntisymmetric \"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876572943475*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"ForgetAssumeAntisymmetric", "::", "usage"}], "=", 
   "\"\<ForgetAssumeAntisymmetric[ X ]  or  ForgetAssumeAntisymmetric[ { \!\(\
\*SubscriptBox[\(X\), \(1\)]\) , \!\(\*SubscriptBox[\(X\), \(2\)]\) , ... } ] \
  \n\nStop using simplifications rules that result from assuming that  X  is \
a fully antisymmetric tensor. \n\nSee also:  ? AssumeAntisymmetric\>\""}], 
  ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613095678790711*^9, 3.6130957871183357`*^9}, {
   3.6131241778120728`*^9, 3.613124191494792*^9}, 3.6131244406654987`*^9, {
   3.613124593047632*^9, 3.613124593766561*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "ForgetAssumeAntisymmetric"}]], "Input",
 CellChangeTimes->{3.613095793463217*^9, 3.613124452383623*^9}],

Cell[BoxData[
 StyleBox["\<\"ForgetAssumeAntisymmetric[ X ]  or  ForgetAssumeAntisymmetric[ \
{ \!\(\*SubscriptBox[\(X\), \(1\)]\) , \!\(\*SubscriptBox[\(X\), \(2\)]\) , \
... } ]   \\n\\nStop using simplifications rules that result from assuming \
that  X  is a fully antisymmetric tensor. \\n\\nSee also:  ? \
AssumeAntisymmetric\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765730078907`*^9},
 CellTags->"Info3651912572-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"AntisymQ", "::", "usage"}], "=", 
   "\"\<AntisymQ[ X ]  returns True if  X  is being assumed to be \
antisymmetric.\n\nSee also:  ? AssumeAntisymmetric ,  ? \
ForgetAssumeAntisymmetric\>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.613095924007729*^9, 3.613095993140378*^9}, {
  3.613124461908168*^9, 3.613124489281171*^9}, {3.613124565665935*^9, 
  3.613124580099185*^9}, {3.613177635636701*^9, 3.613177637504861*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "AntisymQ"}]], "Input",
 CellChangeTimes->{3.613096000439726*^9, 3.613124534326345*^9, 
  3.6131776392487593`*^9}],

Cell[BoxData[
 StyleBox["\<\"AntisymQ[ X ]  returns True if  X  is being assumed to be \
antisymmetric.\\n\\nSee also:  ? AssumeAntisymmetric ,  ? \
ForgetAssumeAntisymmetric\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876573094316*^9},
 CellTags->"Info3651912573-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbolic  Sym[ ]  and relations with  \[LeftAngleBracket] , \
\[RightAngleBracket]", "Subsection",
 CellChangeTimes->{{3.612421733437776*^9, 3.612421762550498*^9}, {
  3.612474987110517*^9, 3.6124750315968*^9}, {3.612722814801465*^9, 
  3.612722841570324*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"Sym", "::", "usage"}], "=", 
   "\"\<Sym[ n ][ X ]   is a symbolic, unevaluated, version of   sym[ n ][ X \
] . It is useful because expressions such as \n \n                            \
                                  \[LeftAngleBracket] Sym[ n ][ X ] \
\!\(\*SubscriptBox[\(\[RightAngleBracket]\), \(\(\\\ \)\(a, b\)\)]\)\n\ncan \
often be simplified without evaluating an explicit symmetrization of  X.  \
This allows simplification of expressions that would \notherwise be too large \
to handle.\n\nSee also:  ? sym ,  ? EvaluateSym\>\""}], ";"}]], "Input",
 CellChangeTimes->{{3.613096125562442*^9, 3.613096290396358*^9}, {
  3.613096340880083*^9, 3.613096418764699*^9}, {3.614484503365488*^9, 
  3.614484567856535*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "Sym"}]], "Input",
 CellChangeTimes->{{3.613096252834992*^9, 3.61309625500082*^9}}],

Cell[BoxData[
 StyleBox["\<\"Sym[ n ][ X ]   is a symbolic, unevaluated, version of   sym[ \
n ][ X ] . It is useful because expressions such as \\n \\n                   \
                                           \[LeftAngleBracket] Sym[ n ][ X ] \
\!\(\*SubscriptBox[\(\[RightAngleBracket]\), \(\(\\\\ \)\(a, \
b\)\)]\)\\n\\ncan often be simplified without evaluating an explicit \
symmetrization of  X.  This allows simplification of expressions that would \
\\notherwise be too large to handle.\\n\\nSee also:  ? sym ,  ? EvaluateSym\"\
\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.6518765731671753`*^9},
 CellTags->"Info3651912573-5027707"]
}, Open  ]],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"EvaluateSym", "::", "usage"}], "=", 
   "\"\<EvaluateSym[ expr ]   or   expr // EvaluateSym\n\nEvaluateSym  \
replaces  Sym \[Rule] sym  to give an explicit evaluation of  expr  in terms \
of mv operators.  \n\nSee also:  ? sym , ? Sym , ? mv\>\""}], ";"}]], "Input",\

 InitializationCell->True,
 CellChangeTimes->{{3.613096438985629*^9, 3.613096757880876*^9}}],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"?", "EvaluateSym"}]], "Input",
 CellChangeTimes->{3.613096595113833*^9}],

Cell[BoxData[
 StyleBox["\<\"EvaluateSym[ expr ]   or   expr // \
EvaluateSym\\n\\nEvaluateSym  replaces  Sym \[Rule] sym  to give an explicit \
evaluation of  expr  in terms of mv operators.  \\n\\nSee also:  ? sym , ? \
Sym , ? mv\"\>", "MSG"]], "Print", "PrintUsage",
 CellChangeTimes->{3.651876573232163*^9},
 CellTags->"Info3651912573-5027707"]
}, Open  ]]
}, Closed]],

Cell[CellGroupData[{

Cell["Symbolic Levi-Civita tensor", "Subsection",
 CellChangeTimes->{{3.612421733437776*^9, 3.612421762550498*^9}, {
  3.612474987110517*^9, 3.6124750315968*^9}, {3.612722814801465*^9, 
  3.612722841570324*^9}, {3.612814013865553*^9, 3.6128140217200317`*^9}, {
  3.613337566218072*^9, 3.613337593257226*^9}, {3.6133391081429873`*^9, 
  3.613339131293954*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CurlyEpsilon]4", "::", "usage"}], "=", 
   "\"\<\[CurlyEpsilon]4 is the 4-dimensional Levi-Civita tensor.\n\nSee \
also:  ? \[CurlyEpsilon]2,  ? \[CurlyEpsilon]3 \>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6137275235853977`*^9, 3.613727728958276*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CurlyEpsilon]3", "::", "usage"}], "=", 
   "\"\<\[CurlyEpsilon]3 is the 3-dimensional Levi-Civita tensor.\n\nSee \
also:  ? \[CurlyEpsilon]2,  ? \[CurlyEpsilon]4 \>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6137275235853977`*^9, 3.613727741982822*^9}, {
  3.613727784613427*^9, 3.6137277943548803`*^9}}],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"\[CurlyEpsilon]2", "::", "usage"}], "=", 
   "\"\<\[CurlyEpsilon]2 is the 2-dimensional Levi-Civita tensor.\n\nSee \
also:  ? \[CurlyEpsilon]3,  ? \[CurlyEpsilon]4 \>\""}], ";"}]], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.6137275235853977`*^9, 3.6137277458552303`*^9}, {
  3.613727796178359*^9, 3.613727816812579*^9}}]
}, Closed]],

Cell[CellGroupData[{

Cell["", "Subsection",
 CellChangeTimes->{{3.478784599907823*^9, 3.478784644560371*^9}, {
   3.47879586709443*^9, 3.478795867413355*^9}, {3.480396747732327*^9, 
   3.480396751587948*^9}, 3.655258475667034*^9}],

Cell[BoxData[{
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{"TrueQ", "[", "$PrintDebugLocation", "]"}], ",", 
   RowBox[{"Print", "[", "\"\<End of Part0\>\"", "]"}]}], 
  "]"}], "\[IndentingNewLine]", 
 RowBox[{"SaveInitTime", "[", "]"}]}], "Input",
 InitializationCell->True,
 CellChangeTimes->{{3.655258480662313*^9, 3.655258485506802*^9}, {
  3.655661259851468*^9, 3.655661261889557*^9}, {3.65566129271513*^9, 
  3.6556613089708443`*^9}, {3.6556614413375053`*^9, 3.655661448872883*^9}}]
}, Open  ]]
}, Open  ]]
},
WindowSize->{1705, 1279},
WindowMargins->{{Automatic, 97}, {6, Automatic}},
Visible->True,
Magnification:>1.25 Inherited,
FrontEndVersion->"11.0 for Linux x86 (64-bit) (September 21, 2016)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{
 "Info-31ae26fa-b304-4f32-ab3e-d92d2114dc61"->{
  Cell[152083, 3094, 12522, 183, 1538137, "Print",
   CellTags->"Info-31ae26fa-b304-4f32-ab3e-d92d2114dc61"]},
 "Info3651912567-5027707"->{
  Cell[66760, 1472, 1971, 31, 5976847, "Print",
   CellTags->"Info3651912567-5027707"],
  Cell[76670, 1650, 2998, 44, 5976847, "Print",
   CellTags->"Info3651912567-5027707"],
  Cell[81577, 1740, 739, 11, 17913758, "Print",
   CellTags->"Info3651912567-5027707"],
  Cell[86550, 1855, 801, 12, 27422875, "Print",
   CellGroupingRules->{GroupTogetherGrouping, 10003.},
   CellTags->"Info3651912567-5027707"],
  Cell[90557, 1928, 1760, 25, 58018, "Print",
   CellTags->"Info3651912567-5027707"],
  Cell[94274, 2001, 522, 8, 17737, "Print",
   CellTags->"Info3651912567-5027707"],
  Cell[95828, 2036, 646, 10, 15932, "Print",
   CellTags->"Info3651912567-5027707"],
  Cell[97911, 2089, 338, 6, 12035, "Print",
   CellTags->"Info3651912567-5027707"],
  Cell[99062, 2118, 399, 6, 12035, "Print",
   CellTags->"Info3651912567-5027707"]},
 "Info3651912568-5027707"->{
  Cell[101287, 2167, 519, 8, 5976847, "Print",
   CellTags->"Info3651912568-5027707"],
  Cell[106056, 2244, 1508, 21, 5976847, "Print",
   CellTags->"Info3651912568-5027707"],
  Cell[111275, 2348, 1588, 26, 44892960, "Print",
   CellTags->"Info3651912568-5027707"],
  Cell[113524, 2395, 289, 5, 8152433, "Print",
   CellTags->"Info3651912568-5027707"],
  Cell[119578, 2495, 2475, 33, 5976847, "Print",
   CellTags->"Info3651912568-5027707"],
  Cell[123166, 2555, 418, 7, 5976847, "Print",
   CellTags->"Info3651912568-5027707"],
  Cell[124903, 2592, 523, 8, 5976847, "Print",
   CellTags->"Info3651912568-5027707"]},
 "Info3651912569-5027707"->{
  Cell[127121, 2635, 615, 9, 5976847, "Print",
   CellTags->"Info3651912569-5027707"],
  Cell[128304, 2664, 316, 5, 5976847, "Print",
   CellTags->"Info3651912569-5027707"],
  Cell[129227, 2689, 325, 5, 5976847, "Print",
   CellTags->"Info3651912569-5027707"],
  Cell[130196, 2715, 337, 6, 5976847, "Print",
   CellTags->"Info3651912569-5027707"],
  Cell[165279, 3300, 230, 4, 5976847, "Print",
   CellTags->"Info3651912569-5027707"],
  Cell[167344, 3347, 668, 10, 5976847, "Print",
   CellTags->"Info3651912569-5027707"]},
 "Info3651912570-5027707"->{
  Cell[171303, 3427, 226, 4, 5976847, "Print",
   CellTags->"Info3651912570-5027707"],
  Cell[172132, 3451, 310, 5, 5976847, "Print",
   CellTags->"Info3651912570-5027707"],
  Cell[179158, 3600, 921, 13, 13613, "Print",
   CellTags->"Info3651912570-5027707"],
  Cell[183685, 3682, 2353, 37, 5976847, "Print",
   CellTags->"Info3651912570-5027707"],
  Cell[190357, 3805, 1032, 15, 5976847, "Print",
   CellTags->"Info3651912570-5027707"],
  Cell[192666, 3854, 285, 5, 5976847, "Print",
   CellTags->"Info3651912570-5027707"]},
 "Info3651912571-5027707"->{
  Cell[194962, 3898, 1547, 21, 5976847, "Print",
   CellTags->"Info3651912571-5027707"],
  Cell[198250, 3959, 716, 11, 5976847, "Print",
   CellTags->"Info3651912571-5027707"],
  Cell[200321, 4001, 822, 12, 5976847, "Print",
   CellTags->"Info3651912571-5027707"],
  Cell[203304, 4058, 927, 14, 5976847, "Print",
   CellTags->"Info3651912571-5027707"],
  Cell[206873, 4130, 595, 9, 5976847, "Print",
   CellTags->"Info3651912571-5027707"],
  Cell[208522, 4172, 366, 6, 8152433, "Print",
   CellTags->"Info3651912571-5027707"],
  Cell[209352, 4196, 251, 5, 4241796, "Print",
   CellTags->"Info3651912571-5027707"]},
 "Info3651912572-5027707"->{
  Cell[176561, 3538, 342, 6, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[213932, 4289, 305, 6, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[219519, 4382, 3524, 49, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[224491, 4463, 1183, 17, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[226831, 4514, 288, 5, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[227601, 4537, 259, 5, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[229718, 4585, 995, 15, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[232162, 4633, 1011, 15, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[234419, 4681, 432, 7, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[235505, 4709, 432, 7, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[236475, 4736, 276, 5, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[238100, 4776, 446, 7, 5976847, "Print",
   CellTags->"Info3651912572-5027707"],
  Cell[239372, 4806, 450, 7, 5976847, "Print",
   CellTags->"Info3651912572-5027707"]},
 "Info3651912573-5027707"->{
  Cell[240501, 4835, 291, 5, 5976847, "Print",
   CellTags->"Info3651912573-5027707"],
  Cell[242024, 4873, 660, 10, 5976847, "Print",
   CellTags->"Info3651912573-5027707"],
  Cell[243232, 4903, 349, 6, 5976847, "Print",
   CellTags->"Info3651912573-5027707"]},
 "Info3653895041-2351845"->{
  Cell[174770, 3501, 1127, 16, 5976847, "Print",
   CellTags->"Info3653895041-2351845"]},
 "Info3653895537-2351845"->{
  Cell[170158, 3398, 717, 11, 5976847, "Print",
   CellTags->"Info3653895537-2351845"]}
 }
*)
(*CellTagsIndex
CellTagsIndex->{
 {"Info-31ae26fa-b304-4f32-ab3e-d92d2114dc61", 246226, 4985},
 {"Info3651912567-5027707", 246366, 4988},
 {"Info3651912568-5027707", 247226, 5008},
 {"Info3651912569-5027707", 247872, 5023},
 {"Info3651912570-5027707", 248425, 5036},
 {"Info3651912571-5027707", 248980, 5049},
 {"Info3651912572-5027707", 249624, 5064},
 {"Info3651912573-5027707", 250792, 5091},
 {"Info3653895041-2351845", 251084, 5098},
 {"Info3653895537-2351845", 251203, 5101}
 }
*)
(*NotebookFileOutline
Notebook[{
Cell[CellGroupData[{
Cell[422, 15, 797, 11, 81, "Section"],
Cell[CellGroupData[{
Cell[1244, 30, 248, 4, 56, "Subsection"],
Cell[CellGroupData[{
Cell[1517, 38, 164, 2, 44, "Subsubsection"],
Cell[1684, 42, 8653, 132, 5976847, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[10374, 179, 153, 2, 35, "Subsubsection"],
Cell[10530, 183, 1164, 22, 5976847, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[11731, 210, 204, 3, 35, "Subsubsection"],
Cell[11938, 215, 3459, 72, 5976847, "Text"],
Cell[15400, 289, 2768, 61, 5976847, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[18205, 355, 250, 3, 35, "Subsubsection"],
Cell[18458, 360, 157, 4, 2152, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[18652, 369, 298, 4, 35, "Subsubsection"],
Cell[18953, 375, 748, 15, 11563, "Text"]
}, Closed]]
}, Open  ]],
Cell[19728, 394, 45, 0, 44, "Subsubsection"],
Cell[19776, 396, 4481, 117, 541, "Text"],
Cell[CellGroupData[{
Cell[24282, 517, 95, 1, 56, "Subsection"],
Cell[24380, 520, 606, 12, 136, "Text"],
Cell[24989, 534, 651, 12, 113, "Text"],
Cell[25643, 548, 382, 7, 87, "Input",
 InitializationCell->True],
Cell[26028, 557, 420, 7, 64, "Text"],
Cell[26451, 566, 336, 6, 59, "Input",
 InitializationCell->True],
Cell[26790, 574, 53, 0, 47, "Text"],
Cell[CellGroupData[{
Cell[26868, 578, 56, 1, 47, "Input"],
Cell[26927, 581, 6775, 187, 198, "Print"]
}, Open  ]],
Cell[33717, 771, 410, 8, 78, "Text"],
Cell[34130, 781, 154, 3, 47, "Input"],
Cell[34287, 786, 198, 3, 49, "Text"],
Cell[CellGroupData[{
Cell[34510, 793, 250, 5, 114, "Input",
 InitializationCell->True],
Cell[34763, 800, 55, 0, 38, "Output"]
}, Open  ]],
Cell[34833, 803, 1087, 21, 221, "Text"],
Cell[35923, 826, 1500, 22, 59, "Input",
 InitializationCell->True],
Cell[37426, 850, 151, 2, 47, "Text"],
Cell[37580, 854, 1819, 27, 111, "Input"],
Cell[39402, 883, 1699, 26, 80, "Input"],
Cell[41104, 911, 301, 6, 47, "Input"],
Cell[41408, 919, 551, 13, 195, "Text"],
Cell[41962, 934, 132, 4, 59, "Input",
 InitializationCell->True],
Cell[42097, 940, 757, 14, 123, "Text"],
Cell[42857, 956, 118, 3, 59, "Input",
 InitializationCell->True],
Cell[42978, 961, 141, 2, 49, "Text"],
Cell[43122, 965, 253, 6, 87, "Input",
 InitializationCell->True],
Cell[43378, 973, 735, 12, 49, "Text"],
Cell[44116, 987, 1828, 31, 59, "Input",
 InitializationCell->True],
Cell[45947, 1020, 93, 1, 47, "Text"],
Cell[46043, 1023, 728, 14, 47, "Input"],
Cell[46774, 1039, 317, 6, 49, "Text"],
Cell[CellGroupData[{
Cell[47116, 1049, 360, 8, 59, "Input",
 InitializationCell->True],
Cell[47479, 1059, 511, 13, 38, "Output"]
}, Open  ]]
}, Open  ]]
}, Open  ]],
Cell[CellGroupData[{
Cell[48051, 1079, 615, 11, 101, "Section"],
Cell[CellGroupData[{
Cell[48691, 1094, 531, 7, 70, "Subsection"],
Cell[49225, 1103, 337, 6, 3184971, "Text"],
Cell[49565, 1111, 8361, 131, 117097206, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[57963, 1247, 481, 6, 45, "Subsection"],
Cell[58447, 1255, 249, 5, 5976847, "Input",
 InitializationCell->True],
Cell[58699, 1262, 4658, 107, 5976847, "Input",
 InitializationCell->True],
Cell[63360, 1371, 154, 3, 5976847, "Text"],
Cell[63517, 1376, 516, 10, 5976847, "Input",
 InitializationCell->True],
Cell[64036, 1388, 645, 12, 5976847, "Input",
 InitializationCell->True],
Cell[64684, 1402, 1936, 62, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[66645, 1468, 112, 2, 5976847, "Input"],
Cell[66760, 1472, 1971, 31, 5976847, "Print",
 CellTags->"Info3651912567-5027707"]
}, Open  ]],
Cell[68746, 1506, 199, 4, 5976847, "Input",
 InitializationCell->True],
Cell[68948, 1512, 7580, 130, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[76553, 1646, 114, 2, 5976847, "Input"],
Cell[76670, 1650, 2998, 44, 5976847, "Print",
 CellTags->"Info3651912567-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[79717, 1700, 612, 8, 56, "Subsection"],
Cell[CellGroupData[{
Cell[80354, 1712, 236, 3, 3882938, "Subsubsection"],
Cell[80593, 1717, 858, 15, 25156056, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[81476, 1736, 98, 2, 3184971, "Input"],
Cell[81577, 1740, 739, 11, 17913758, "Print",
 CellTags->"Info3651912567-5027707"]
}, Open  ]]
}, Closed]],
Cell[82343, 1755, 190, 2, 3106351, "Subsubsection"],
Cell[82536, 1759, 165, 2, 3106351, "Subsubsection"],
Cell[CellGroupData[{
Cell[82726, 1765, 318, 4, 3106351, "Subsubsection"],
Cell[CellGroupData[{
Cell[83069, 1773, 195, 3, 3106351, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}],
Cell[83267, 1778, 263, 6, 3184971, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10000.}]
}, Closed]],
Cell[CellGroupData[{
Cell[83567, 1789, 271, 4, 2547977, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}],
Cell[83841, 1795, 437, 8, 5302245, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10001.}]
}, Closed]],
Cell[CellGroupData[{
Cell[84315, 1808, 269, 4, 2547977, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}],
Cell[84587, 1814, 421, 5, 3184971, "Text",
 CellGroupingRules->{GroupTogetherGrouping, 10002.}]
}, Closed]],
Cell[CellGroupData[{
Cell[85045, 1824, 172, 3, 2547977, "Item",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[85220, 1829, 1154, 19, 29541322, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 InitializationCell->True],
Cell[86377, 1850, 170, 3, 3184971, "Input",
 CellGroupingRules->{GroupTogetherGrouping, 10003.}],
Cell[86550, 1855, 801, 12, 27422875, "Print",
 CellGroupingRules->{GroupTogetherGrouping, 10003.},
 CellTags->"Info3651912567-5027707"]
}, Closed]]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[87412, 1874, 428, 6, 45, "Subsection"],
Cell[87843, 1882, 2640, 39, 65707, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[90508, 1925, 46, 1, 3156, "Input"],
Cell[90557, 1928, 1760, 25, 58018, "Print",
 CellTags->"Info3651912567-5027707"]
}, Open  ]],
Cell[92332, 1956, 674, 9, 3156, "Text"],
Cell[93009, 1967, 406, 11, 7157, "Input",
 InitializationCell->True],
Cell[93418, 1980, 735, 13, 20203, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[94178, 1997, 93, 2, 3156, "Input"],
Cell[94274, 2001, 522, 8, 17737, "Print",
 CellTags->"Info3651912567-5027707"]
}, Open  ]],
Cell[94811, 2012, 897, 16, 17993, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[95733, 2032, 92, 2, 3156, "Input"],
Cell[95828, 2036, 646, 10, 15932, "Print",
 CellTags->"Info3651912567-5027707"]
}, Open  ]],
Cell[96489, 2049, 681, 19, 11487, "Input",
 InitializationCell->True],
Cell[97173, 2070, 593, 11, 13633, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[97791, 2085, 117, 2, 3156, "Input"],
Cell[97911, 2089, 338, 6, 12035, "Print",
 CellTags->"Info3651912567-5027707"]
}, Open  ]],
Cell[98264, 2098, 652, 12, 13633, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[98941, 2114, 118, 2, 3156, "Input"],
Cell[99062, 2118, 399, 6, 12035, "Print",
 CellTags->"Info3651912567-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[99510, 2130, 498, 8, 45, "Subsection"],
Cell[100011, 2140, 1194, 20, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[101230, 2164, 54, 1, 5976847, "Input"],
Cell[101287, 2167, 519, 8, 5976847, "Print",
 CellTags->"Info3651912568-5027707"]
}, Open  ]],
Cell[101821, 2178, 4156, 59, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[106002, 2241, 51, 1, 5976847, "Input"],
Cell[106056, 2244, 1508, 21, 5976847, "Print",
 CellTags->"Info3651912568-5027707"]
}, Open  ]],
Cell[107579, 2268, 902, 18, 5976847, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[108518, 2291, 223, 3, 327, "Subsection"],
Cell[108744, 2296, 629, 11, 5351258, "Text"],
Cell[109376, 2309, 1817, 32, 47033843, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[111218, 2345, 54, 1, 3184971, "Input"],
Cell[111275, 2348, 1588, 26, 44892960, "Print",
 CellTags->"Info3651912568-5027707"]
}, Open  ]],
Cell[112878, 2377, 496, 10, 7644543, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[113399, 2391, 122, 2, 3184971, "Input"],
Cell[113524, 2395, 289, 5, 8152433, "Print",
 CellTags->"Info3651912568-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[113862, 2406, 365, 5, 45, "Subsection"],
Cell[114230, 2413, 5263, 75, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[119518, 2492, 57, 1, 5976847, "Input"],
Cell[119578, 2495, 2475, 33, 5976847, "Print",
 CellTags->"Info3651912568-5027707"]
}, Open  ]],
Cell[122068, 2531, 1021, 17, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[123114, 2552, 49, 1, 5976847, "Input"],
Cell[123166, 2555, 418, 7, 5976847, "Print",
 CellTags->"Info3651912568-5027707"]
}, Open  ]],
Cell[123599, 2565, 1225, 20, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[124849, 2589, 51, 1, 5976847, "Input"],
Cell[124903, 2592, 523, 8, 5976847, "Print",
 CellTags->"Info3651912568-5027707"]
}, Open  ]],
Cell[125441, 2603, 1535, 24, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[127001, 2631, 117, 2, 5976847, "Input"],
Cell[127121, 2635, 615, 9, 5976847, "Print",
 CellTags->"Info3651912569-5027707"]
}, Open  ]],
Cell[127751, 2647, 377, 8, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[128153, 2659, 148, 3, 5976847, "Input"],
Cell[128304, 2664, 316, 5, 5976847, "Print",
 CellTags->"Info3651912569-5027707"]
}, Open  ]],
Cell[128635, 2672, 438, 9, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[129098, 2685, 126, 2, 5976847, "Input"],
Cell[129227, 2689, 325, 5, 5976847, "Print",
 CellTags->"Info3651912569-5027707"]
}, Open  ]],
Cell[129567, 2697, 498, 10, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[130090, 2711, 103, 2, 5976847, "Input"],
Cell[130196, 2715, 337, 6, 5976847, "Print",
 CellTags->"Info3651912569-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[130582, 2727, 410, 5, 45, "Subsection"],
Cell[130995, 2734, 21014, 353, 1566796, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[152034, 3091, 46, 1, 29378, "Input"],
Cell[152083, 3094, 12522, 183, 1538137, "Print",
 CellTags->"Info-31ae26fa-b304-4f32-ab3e-d92d2114dc61"]
}, Open  ]],
Cell[164620, 3280, 114, 1, 5976847, "Text"],
Cell[164737, 3283, 397, 9, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[165159, 3296, 117, 2, 5976847, "Input"],
Cell[165279, 3300, 230, 4, 5976847, "Print",
 CellTags->"Info3651912569-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[165558, 3310, 517, 9, 45, "Subsection"],
Cell[166078, 3321, 1192, 19, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[167295, 3344, 46, 1, 5976847, "Input"],
Cell[167344, 3347, 668, 10, 5976847, "Print",
 CellTags->"Info3651912569-5027707"]
}, Open  ]],
Cell[168027, 3360, 1992, 30, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[170044, 3394, 111, 2, 5976847, "Input"],
Cell[170158, 3398, 717, 11, 5976847, "Print",
 CellTags->"Info3653895537-2351845"]
}, Open  ]],
Cell[170890, 3412, 291, 7, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[171206, 3423, 94, 2, 5976847, "Input"],
Cell[171303, 3427, 226, 4, 5976847, "Print",
 CellTags->"Info3651912570-5027707"]
}, Open  ]],
Cell[171544, 3434, 441, 9, 5976847, "Input"],
Cell[CellGroupData[{
Cell[172010, 3447, 119, 2, 5976847, "Input"],
Cell[172132, 3451, 310, 5, 5976847, "Print",
 CellTags->"Info3651912570-5027707"]
}, Open  ]],
Cell[172457, 3459, 2231, 35, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[174713, 3498, 54, 1, 5976847, "Input"],
Cell[174770, 3501, 1127, 16, 5976847, "Print",
 CellTags->"Info3653895041-2351845"]
}, Open  ]],
Cell[175912, 3520, 501, 10, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[176438, 3534, 120, 2, 5976847, "Input"],
Cell[176561, 3538, 342, 6, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[176952, 3550, 386, 5, 327, "Subsection"],
Cell[CellGroupData[{
Cell[177363, 3559, 46, 1, 1293, "Input"],
Cell[177412, 3562, 444, 8, 891, "Message"]
}, Open  ]],
Cell[177871, 3573, 1213, 20, 15356, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[179109, 3597, 46, 1, 1293, "Input"],
Cell[179158, 3600, 921, 13, 13613, "Print",
 CellTags->"Info3651912570-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[180128, 3619, 1152, 20, 366, "Subsection"],
Cell[181283, 3641, 2275, 33, 5976847, "Input"],
Cell[CellGroupData[{
Cell[183583, 3678, 99, 2, 5976847, "Input"],
Cell[183685, 3682, 2353, 37, 5976847, "Print",
 CellTags->"Info3651912570-5027707"]
}, Open  ]],
Cell[186053, 3722, 1110, 15, 5976847, "Text"],
Cell[187166, 3739, 260, 7, 5976847, "Input",
 InitializationCell->True],
Cell[187429, 3748, 559, 11, 5976847, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[188025, 3764, 626, 8, 332, "Subsection"],
Cell[188654, 3774, 1579, 23, 5976847, "Input"],
Cell[CellGroupData[{
Cell[190258, 3801, 96, 2, 5976847, "Input"],
Cell[190357, 3805, 1032, 15, 5976847, "Print",
 CellTags->"Info3651912570-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[191438, 3826, 584, 8, 332, "Subsection"],
Cell[192025, 3836, 498, 10, 5976847, "Input"],
Cell[CellGroupData[{
Cell[192548, 3850, 115, 2, 5976847, "Input"],
Cell[192666, 3854, 285, 5, 5976847, "Print",
 CellTags->"Info3651912570-5027707"]
}, Open  ]],
Cell[192966, 3862, 1871, 28, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[194862, 3894, 97, 2, 5976847, "Input"],
Cell[194962, 3898, 1547, 21, 5976847, "Print",
 CellTags->"Info3651912571-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[196558, 3925, 446, 6, 45, "Subsection"],
Cell[197007, 3933, 1103, 18, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[198135, 3955, 112, 2, 5976847, "Input"],
Cell[198250, 3959, 716, 11, 5976847, "Print",
 CellTags->"Info3651912571-5027707"]
}, Open  ]],
Cell[198981, 3973, 1265, 21, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[200271, 3998, 47, 1, 5976847, "Input"],
Cell[200321, 4001, 822, 12, 5976847, "Print",
 CellTags->"Info3651912571-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[201192, 4019, 537, 7, 45, "Subsection"],
Cell[201732, 4028, 1485, 23, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[203242, 4055, 59, 1, 5976847, "Input"],
Cell[203304, 4058, 927, 14, 5976847, "Print",
 CellTags->"Info3651912571-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[204280, 4078, 681, 9, 327, "Subsection"],
Cell[204964, 4089, 95, 1, 5976847, "Text"]
}, Closed]],
Cell[CellGroupData[{
Cell[205096, 4095, 814, 11, 45, "Subsection"],
Cell[205913, 4108, 869, 15, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[206807, 4127, 63, 1, 5976847, "Input"],
Cell[206873, 4130, 595, 9, 5976847, "Print",
 CellTags->"Info3651912571-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[207517, 4145, 457, 8, 327, "Subsection"],
Cell[207977, 4155, 424, 9, 9861820, "Input"],
Cell[CellGroupData[{
Cell[208426, 4168, 93, 2, 3184971, "Input"],
Cell[208522, 4172, 366, 6, 8152433, "Print",
 CellTags->"Info3651912571-5027707"]
}, Open  ]],
Cell[208903, 4181, 307, 7, 3184971, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[209235, 4192, 114, 2, 3184971, "Input"],
Cell[209352, 4196, 251, 5, 4241796, "Print",
 CellTags->"Info3651912571-5027707"]
}, Open  ]],
Cell[209618, 4204, 794, 12, 3184971, "Text"],
Cell[210415, 4218, 2090, 30, 47033843, "Input"]
}, Closed]],
Cell[CellGroupData[{
Cell[212542, 4253, 405, 7, 327, "Subsection"],
Cell[CellGroupData[{
Cell[212972, 4264, 367, 6, 5976847, "Subsubsection"],
Cell[213342, 4272, 436, 9, 5976847, "Input"],
Cell[CellGroupData[{
Cell[213803, 4285, 126, 2, 5976847, "Input"],
Cell[213932, 4289, 305, 6, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[214286, 4301, 234, 3, 5976847, "Subsubsection"],
Cell[214523, 4306, 4827, 67, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[219375, 4377, 141, 3, 5976847, "Input"],
Cell[219519, 4382, 3524, 49, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]],
Cell[223058, 4434, 1312, 21, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[224395, 4459, 93, 2, 5976847, "Input"],
Cell[224491, 4463, 1183, 17, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]]
}, Closed]],
Cell[CellGroupData[{
Cell[225735, 4487, 604, 9, 45, "Subsection"],
Cell[226342, 4498, 357, 8, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[226724, 4510, 104, 2, 5976847, "Input"],
Cell[226831, 4514, 288, 5, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]],
Cell[227134, 4522, 330, 7, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[227489, 4533, 109, 2, 5976847, "Input"],
Cell[227601, 4537, 259, 5, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[227909, 4548, 561, 9, 45, "Subsection"],
Cell[228473, 4559, 1171, 19, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[229669, 4582, 46, 1, 5976847, "Input"],
Cell[229718, 4585, 995, 15, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]],
Cell[230728, 4603, 1244, 21, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[231997, 4628, 162, 3, 5976847, "Input"],
Cell[232162, 4633, 1011, 15, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[233222, 4654, 536, 7, 45, "Subsection"],
Cell[233761, 4663, 501, 10, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[234287, 4677, 129, 2, 5976847, "Input"],
Cell[234419, 4681, 432, 7, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]],
Cell[234866, 4691, 505, 10, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[235396, 4705, 106, 2, 5976847, "Input"],
Cell[235505, 4709, 432, 7, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]],
Cell[235952, 4719, 382, 9, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[236359, 4732, 113, 2, 5976847, "Input"],
Cell[236475, 4736, 276, 5, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[236800, 4747, 540, 7, 45, "Subsection"],
Cell[237343, 4756, 570, 11, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[237938, 4771, 159, 3, 5976847, "Input"],
Cell[238100, 4776, 446, 7, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]],
Cell[238561, 4786, 651, 12, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[239237, 4802, 132, 2, 5976847, "Input"],
Cell[239372, 4806, 450, 7, 5976847, "Print",
 CellTags->"Info3651912572-5027707"]
}, Open  ]],
Cell[239837, 4816, 494, 10, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[240356, 4830, 142, 3, 5976847, "Input"],
Cell[240501, 4835, 291, 5, 5976847, "Print",
 CellTags->"Info3651912573-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[240841, 4846, 266, 4, 332, "Subsection"],
Cell[241110, 4852, 775, 13, 5976847, "Input"],
Cell[CellGroupData[{
Cell[241910, 4869, 111, 2, 5976847, "Input"],
Cell[242024, 4873, 660, 10, 5976847, "Print",
 CellTags->"Info3651912573-5027707"]
}, Open  ]],
Cell[242699, 4886, 409, 9, 5976847, "Input",
 InitializationCell->True],
Cell[CellGroupData[{
Cell[243133, 4899, 96, 2, 5976847, "Input"],
Cell[243232, 4903, 349, 6, 5976847, "Print",
 CellTags->"Info3651912573-5027707"]
}, Open  ]]
}, Closed]],
Cell[CellGroupData[{
Cell[243630, 4915, 359, 5, 45, "Subsection"],
Cell[243992, 4922, 331, 7, 88137, "Input",
 InitializationCell->True],
Cell[244326, 4931, 382, 8, 88137, "Input",
 InitializationCell->True],
Cell[244711, 4941, 382, 8, 88137, "Input",
 InitializationCell->True]
}, Closed]],
Cell[CellGroupData[{
Cell[245130, 4954, 209, 3, 45, "Subsection"],
Cell[245342, 4959, 487, 10, 87, "Input",
 InitializationCell->True]
}, Open  ]]
}, Open  ]]
}
]
*)

