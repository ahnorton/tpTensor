(* ::Package:: *)

(************************************************************************)
(* This file was generated automatically by the Mathematica front end.  *)
(* It contains Initialization cells from a Notebook file, which         *)
(* typically will have the same name as this file except ending in      *)
(* ".nb" instead of ".m".                                               *)
(*                                                                      *)
(* This file is intended to be loaded into the Mathematica kernel using *)
(* the package loading commands Get or Needs.  Doing so is equivalent   *)
(* to using the Evaluate Initialization Cells menu command in the front *)
(* end.                                                                 *)
(*                                                                      *)
(* DO NOT EDIT THIS FILE.  This entire file is regenerated              *)
(* automatically each time the parent Notebook file is saved in the     *)
(* Mathematica front end.  Any changes you make to this file will be    *)
(* overwritten.                                                         *)
(************************************************************************)



(* ::Input::Initialization:: *)
ToGeneric[X_?NumericQ]:= X


(* ::Input::Initialization:: *)
ToGeneric[X_?ConstantQ]:= X


(* ::Input::Initialization:: *)
ToGeneric[X_?FieldLikeQ]:= X


(* ::Input::Initialization:: *)
ToGeneric[X_Plus]:=Map[ToGeneric,X]


(* ::Input::Initialization:: *)
ToGeneric[X_Times]:=Map[ToGeneric,X]


(* ::Input::Initialization:: *)
ToGeneric[X_Power]:= Map[ToGeneric,X]


(* ::Input::Initialization:: *)
ToGeneric[X_CircleTimes]:=Apply[TensorProduct,Map[ToGeneric,X]]


(* ::Input::Initialization:: *)
ToGeneric[Subscript[\[LeftAngleBracket]X_\[RightAngleBracket], ab__List]]:=TensorContract[ToGeneric[X],{ab}]


(* ::Input::Initialization:: *)
ToGeneric[\[LeftAngleBracket]X1_,X2_\[RightAngleBracket]]:=TensorContract[TensorProduct[ToGeneric[X1],ToGeneric[X2]],{{deg[X1],deg[X1]+1}}]


(* ::Input::Initialization:: *)
ToGeneric[\[LeftAngleBracket]X1_,X2__/;Length[{X2}]>1\[RightAngleBracket]]:=TensorContract[TensorProduct[ToGeneric[X1],ToGeneric[\[LeftAngleBracket]X2\[RightAngleBracket]]],{{deg[X1],deg[X1]+1}}]


(* ::Input::Initialization:: *)
ToGeneric[mv[n_][X_]]:= TensorTranspose[ToGeneric[X],InversePermutation[n]]


(* ::Input::Initialization:: *)
ToGeneric[mv[n__][X_]]:= TensorTranspose[ToGeneric[X],InversePermutation[{n}]]


(* ::Input::Initialization:: *)
FromGeneric[X_?NumericQ]:= X


(* ::Input::Initialization:: *)
FromGeneric[X_?ConstantQ]:= X


(* ::Input::Initialization:: *)
FromGeneric[X_?FieldLikeQ]:= X


(* ::Input::Initialization:: *)
FromGeneric[X_Plus]:=Map[FromGeneric,X]


(* ::Input::Initialization:: *)
FromGeneric[X_Times]:=Map[FromGeneric,X]


(* ::Input::Initialization:: *)
FromGeneric[X_Power]:= Map[FromGeneric,X]


(* ::Input::Initialization:: *)
FromGeneric[X_TensorProduct]:=Apply[CircleTimes,Map[FromGeneric,X]]


(* ::Input::Initialization:: *)
FromGeneric[X_TensorContract]:=Subscript[\[LeftAngleBracket]FromGeneric[First[X]]\[RightAngleBracket], Apply[Sequence,Last[X]]]


(* ::Input::Initialization:: *)
FromGeneric[TensorTranspose[X_,n_]]:= mv[InversePermutation[n]][FromGeneric[X]]


(* ::Input::Initialization:: *)
Unprotect[TensorReduce];


(* ::Input::Initialization:: *)
TensorReduce[X_Plus]:=Map[TensorReduce,X]


(* ::Input::Initialization:: *)
TensorReduce[X_Times]:=Map[TensorReduce,X]


(* ::Input::Initialization:: *)
TensorReduce[X_Power]:=Map[TensorReduce,X]


(* ::Input::Initialization:: *)
Protect[TensorReduce];


(* ::Input::Initialization:: *)
ReduceTensor[X_]:=Module[{},
Assuming[ListOfFields[],$tpGeneric = ToGeneric[X]//TensorReduce];
FromGeneric[$tpGeneric]]


(* ::Input::Initialization:: *)
If[TrueQ[$PrintDebugLocation],Print["End of Part6"]]
SaveInitTime[]
